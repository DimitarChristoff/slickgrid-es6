{"version":3,"sources":["webpack:///slick.es6.min.js","webpack:///webpack/bootstrap c3de2307b5b76cb48239","webpack:///../src/slick.core.js","webpack:///external \"jquery\"","webpack:///external \"interactjs\"","webpack:///../plugins/slick.cellrangedecorator/slick.cellrangedecorator.js","webpack:///../plugins/slick.cellrangeselector/slick.cellrangeselector.js","webpack:///../src/index.js","webpack:///../src/slick.editors.js","webpack:///external \"flatpickr\"","webpack:///../src/slick.dataview.js","webpack:///../src/slick.groupmetadataprovider.js","webpack:///../src/slick.grid.js","webpack:///../src/slick-frozen.grid.js","webpack:///../src/slick.formatters.js","webpack:///../plugins/index.js","webpack:///../plugins/slick.autotooltips/index.js","webpack:///../plugins/slick.autotooltips/slick.autotooltips.js","webpack:///../plugins/slick.cellcopymanager/index.js","webpack:///../plugins/slick.cellcopymanager/slick.cellcopymanager.js","webpack:///../plugins/slick.cellrangedecorator/index.js","webpack:///../plugins/slick.cellrangeselector/index.js","webpack:///../plugins/slick.cellselectionmodel/index.js","webpack:///../plugins/slick.cellselectionmodel/slick.cellselectionmodel.js","webpack:///../plugins/slick.checkboxselectcolumn/index.js","webpack:///../plugins/slick.checkboxselectcolumn/slick.checkboxselectcolumn.js","webpack:///../plugins/slick.headerbuttons/index.js","webpack:///../plugins/slick.headerbuttons/slick.headerbuttons.js","webpack:///../plugins/slick.headermenu/index.js","webpack:///../plugins/slick.headermenu/slick.headermenu.js","webpack:///../plugins/slick.rowmovemanager/index.js","webpack:///../plugins/slick.rowmovemanager/slick.rowmovemanager.js","webpack:///../plugins/slick.rowselectionmodel/index.js","webpack:///../plugins/slick.rowselectionmodel/slick.rowselectionmodel.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EventData","isPropagationStopped","isImmediatePropagationStopped","this","stopPropagation","stopImmediatePropagation","Event","handlers","subscribe","fn","push","unsubscribe","length","splice","notify","args","e","scope","returnValue","EventHandler","event","handler","unsubscribeAll","Range","fromRow","fromCell","toRow","toCell","undefined","Math","min","max","isSingleRow","isSingleCell","contains","row","cell","toString","NonDataItem","__nonDataRow","Group","__group","level","count","value","title","collapsed","totals","rows","groups","groupingKey","GroupTotals","__groupTotals","group","initialized","EditorLock","activeEditController","isActive","editController","activate","commitCurrentEdit","cancelCurrentEdit","deactivate","TreeColumns","treeColumns","mapToId","columns","forEach","column","columnsById","id","filter","node","condition","valid","sort","grid","a","b","getOrDefault","getColumnIndex","getDepth","getColumnsInDepth","depth","current","extractColumns","concat","result","cloneTreeColumns","_jquery2","default","extend","hasDepth","getTreeColumns","getColumnsInGroup","visibleColumns","visible","reOrder","getById","getInIds","ids","map","_jquery","obj","Slick","NonDataRow","GlobalEditorLock","keyCode","BACKSPACE","DELETE","DOWN","END","ENTER","ESCAPE","HOME","INSERT","LEFT","PAGE_DOWN","PAGE_UP","RIGHT","TAB","UP","SPACE","equals","require","_interopRequireDefault","CellRangeDecorator","options","show","range","_elem","css","selectionCss","addClass","selectionCssClass","appendTo","getCanvasNode","from","getCellNodeBox","to","top","left","height","bottom","width","right","hide","remove","_defaults","zIndex","border","assign","_slick","CellRangeSelector","init","_decorator","_slick4","_grid","_canvas","_handler","onDragInit","handleDragInit","onDragStart","handleDragStart","onDrag","handleDrag","onDragEnd","handleDragEnd","destroy","dd","jqueryEvent","interactEvent","getCellFromEvent","originalEvent","_self","onBeforeCellRangeSelected","canCellBeSelected","_dragging","focus","start","getCellFromPoint","x0","offset","y0","_range","end","_slick2","pageX","pageY","onCellRangeSelected","_slick3","Plugins","FrozenGrid","Grid","Data","Formatters","Editors","_slick5","_slick6","_slick7","_slick8","_slickFrozen","_slickFrozen2","_slick9","_slick10","_plugins","newObj","key","TextEditor","$input","defaultValue","container","bind","select","getValue","val","setValue","loadValue","item","field","serializeValue","applyValue","state","isValueChanged","validate","validator","validationResults","msg","IntegerEditor","parseInt","isNaN","FloatEditor","getDecimalPlaces","rtn","editorFixedDecimalPlaces","DefaultDecimalPlaces","decPlaces","toFixed","parseFloat","DateEditor","flatInstance","defaultDate","date","_flatpickr2","open","close","position","redraw","YesNoSelectEditor","$select","CheckboxEditor","prop","LongTextEditor","$wrapper","$container","find","save","cancel","handleKeyDown","which","ctrlKey","preventDefault","shiftKey","navigatePrev","navigateNext","commitChanges","cancelChanges","_flatpickr","Text","Integer","Float","Date","YesNoSelect","Checkbox","LongText","DataView","beginUpdate","suspend","endUpdate","refresh","setRefreshHints","hints","refreshHints","setFilterArgs","filterArgs","updateIdxById","startingIndex","items","idProperty","idxById","ensureIdUniqueness","getItems","setItems","data","objectIdProperty","filteredItems","setPagingOptions","pageSize","pagesize","pagenum","ceil","totalRows","pageNum","onPagingInfoChanged","getPagingInfo","self","totalPages","dataView","comparer","ascending","sortAsc","sortComparer","fastSortField","reverse","fastSort","oldToString","reSort","setFilter","filterFn","inlineFilters","compiledFilter","compileFilter","compiledFilterWithCaching","compileFilterWithCaching","getGrouping","groupingInfos","setGrouping","groupingInfo","groupItemMetadataProvider","GroupItemMetadataProvider","toggledGroupsByLevel","Array","gi","groupingInfoDefaults","getterIsAFn","compiledAccumulators","idx","aggregators","compileAccumulatorLoop","groupBy","valueGetter","valueFormatter","formatter","setAggregators","groupAggregators","includeCollapsed","Error","aggregateCollapsed","getItemByIdx","getIdxById","ensureRowsByIdCache","rowsById","getRowById","getItemById","mapIdsToRows","idArray","mapRowsToIds","rowArray","updateItem","updated","insertItem","insertBefore","addItem","deleteItem","getLength","getItem","displayTotalsRow","calculateTotals","getItemMetadata","getGroupRowMetadata","getTotalsRowMetadata","expandCollapseAllGroups","collapse","collapseAllGroups","expandAllGroups","expandCollapseGroup","collapseGroup","letArgs","slice","arguments","arg0","indexOf","groupingDelimiter","split","join","expandGroup","getGroups","extractGroups","parentGroup","groupsByVal","r","predefinedValues","isLeafLevel","agg","aggregateChildGroups","storeResult","addGroupTotals","lazyTotalsCalculation","addTotals","groupCollapsed","toggledGroups","g","aggregateEmpty","flattenGroupedRows","groupedRows","gl","j","jj","getFunctionInfo","fnRegex","matches","match","params","body","aggregator","accumulatorInfo","accumulate","Function","displayName","filterInfo","filterPath2","filterBody","replace","tpl","uncompiledFilter","retval","ii","uncompiledFilterWithCaching","cache","getFilteredAndPagedItems","batchFilter","batchFilterWithCaching","isFilterNarrowing","isFilterExpanding","filterCache","isFilterUnchanged","paged","floor","getRowDiffs","newRows","eitherIsNonData","diff","ignoreDiffsBefore","ignoreDiffsAfter","rl","recalc","_items","prevRefreshHints","countBefore","totalRowsBefore","onRowCountChanged","previous","onRowsChanged","syncGridSelection","preserveHidden","preserveHiddenOnSelectionChange","setSelectedRowIds","rowIds","selectedRowIds","onSelectedRowIdsChanged","update","inHandler","selectedRows","setSelectedRows","getSelectedRows","onSelectedRowsChanged","newSelectedRowIds","getOptions","multiSelect","grep","syncGridCellCssStyles","storeCellCssStyles","hash","hashById","newHash","setCellCssStyles","getCellCssStyles","onCellCssStylesChanged","defaults","AvgAggregator","field_","count_","nonNullCount_","sum_","groupTotals","avg","MinAggregator","min_","MaxAggregator","max_","SumAggregator","sum","Aggregators","Avg","Min","Max","Sum","GroupMetaDataProvider","defaultGroupCellFormatter","columnDef","enableExpandCollapse","indentation","toggleCssClass","toggleCollapsedCssClass","toggleExpandedCssClass","groupTitleCssClass","defaultTotalsCellFormatter","groupTotalsFormatter","onClick","handleGridClick","onKeyDown","handleGridKeyDown","getDataItem","target","hasClass","getRenderedRange","getData","activeCell","getActiveCell","selectable","focusable","groupFocusable","cssClasses","groupCssClass","0","colspan","groupFormatter","editor","totalsFocusable","totalsCssClass","totalsFormatter","SlickGrid","cacheCssForHiddenInit","maxSupportedCssHeight","getMaxSupportedCssHeight","scrollbarDimensions","measureScrollbar","validateAndEnforceOptions","columnDefaults","defaultColumnWidth","minWidth","maxWidth","empty","uid","test","$focusSink","$headerScroller","$headers","getHeadersWidth","$headerRowScroller","$headerRow","$headerRowSpacer","getCanvasWidth","$topPanelScroller","$topPanel","showTopPanel","showHeaderRow","$viewport","autoHeight","$canvas","createFooterRow","$footerRowScroller","$footerRow","$footerRowSpacer","showFooterRow","$focusSink2","clone","explicitInitialization","finishInitialization","viewportW","measureCellPaddingAndBorder","disableSelection","enableTextSelectionOnCells","is","updateColumnCaches","createColumnHeaders","setupColumnSort","createCssRules","resizeCanvas","bindAncestorScrollEvents","handleScroll","handleHeaderContextMenu","handleHeaderClick","delegate","handleHeaderMouseEnter","handleHeaderMouseLeave","handleHeaderRowScroll","handleFooterRowScroll","add","handleClick","handleDblClick","handleContextMenu","handleMouseEnter","handleMouseLeave","_interactjs2","allowFrom","draggable","onmove","onstart","onend","styleCursor","navigator","userAgent","toLowerCase","handleMouseWheel","restoreCssFromHiddenInit","$hiddenParents","parents","addBack","not","each","old","cssShow","style","oldProps","registerPlugin","plugin","plugins","unshift","unregisterPlugin","setSelectionModel","model","selectionModel","onSelectedRangesChanged","handleSelectedRangesChanged","getSelectionModel","$c","dim","clientWidth","clientHeight","headersWidth","availableWidth","viewportHasVScroll","rowWidth","fullWidthRows","updateCanvasWidth","forceColumnWidthsUpdate","oldCanvasWidth","canvasWidth","viewportHasHScroll","w","applyColumnWidths","$target","jquery","attr","supportedHeight","testUpTo","div","document","elem","parentNode","scrollWidth","scrollHeight","$elem","$boundAncestors","handleActiveCellPositionChange","unbindAncestorScrollEvents","unbind","updateColumnHeader","columnId","toolTip","$header","children","eq","trigger","onBeforeHeaderCellDestroy","html","onHeaderCellRendered","getHeaderRow","getFooterRow","getHeaderRowColumn","getFooterRowColumn","$footer","onMouseEnter","onMouseLeave","removeClass","onBeforeHeaderRowCellDestroy","onBeforeFooterRowCellDestroy","header","headerColumnWidthDiff","headerCssClass","enableColumnReorder","sortable","on","append","headerRowCell","onHeaderRowCellRendered","footerRowCell","onFooterRowCellRendered","setSortColumns","sortColumns","setupColumnResize","setupColumnReorder","click","metaKey","$col","closest","getEditorLock","sortOpts","multiColumnSort","defaultSortAsc","onSort","sortCols","col","sortCol","x","delta","placeholder","createElement","className","ignoreFrom","inertia","restrict","restriction","endOnly","elementRect","autoScroll","axis","offsetWidth","index","offsetHeight","after","marginLeft","dx","transform","removeChild","newColumns","removeData","setColumns","onColumnsReordered","dropzone","accept","ondragenter","classList","relatedTarget","ondragleave","ondrop","columnElements","firstResizable","lastResizable","resizable","element","forceFitColumns","activeColumn","preserveAspectRatio","edges","previousWidth","rect","autosizeColumns","applyColumnHeaderWidths","syncColumnCellResize","invalidateAllRows","render","onColumnsResized","getVBoxDelta","$el","el","h","v","verArray","jQueryNewWidthBehaviour","headerColumnHeightDiff","cellWidthDiff","cellHeightDiff","absoluteColumnMinWidth","$style","rowHeight","rules","topPanelHeight","headerRowHeight","footerRowHeight","styleSheet","cssText","appendChild","createTextNode","getColumnCssRules","stylesheet","sheets","styleSheets","ownerNode","owningElement","columnCssRulesL","columnCssRulesR","columnIdx","cssRules","selector","selectorText","exec","substr","removeCssRules","onBeforeDestroy","evt","editorLock","getEditController","prevTotal","widths","shrinkLeeway","total","availWidth","shrinkProportion","absMinWidth","shrinkSize","growProportion","growSize","currentWidth","reRender","rerenderOnResize","headers","outerWidth","rule","setSortColumn","cols","headerColumnEls","columnIndex","getSortColumns","ranges","k","selectedCellCssClass","getColumns","columnPosLeft","columnPosRight","columnDefinitions","setOptions","makeActiveCellNormal","enableAddRow","invalidateRow","getDataLength","leaveSpaceForNewRows","setData","newData","scrollToTop","updateRowCount","scrollTo","getDataLengthIncludingAddNew","getTopPanel","setTopPanelVisibility","slideDown","slideUp","setHeaderRowVisibility","setFooterRowVisibility","getContainerNode","getRowTop","getRowFromPosition","y","th","viewportH","oldOffset","page","ph","round","cj","newScrollTop","cleanupRows","getVisibleRange","updateRowPositions","prevScrollTop","vScrollDir","scrollTop","lastRenderedScrollTop","onViewportChanged","defaultFormatter","dataContext","getFormatter","rowMetadata","columnOverrides","formatterFactory","getEditor","columnMetadata","editorFactory","getDataItemValueForColumn","dataItemColumnValueExtractor","appendRowHtml","stringArray","dataLength","dataLoading","rowCss","activeRow","addNewRowCssClass","metadata","columnData","leftPx","rightPx","appendCellHtml","cellCss","cssClass","cellCssClasses","rowsCache","cellRenderQueue","cellColSpans","rangeToKeep","removeRowFromCache","enableAsyncPostRenderCleanup","startPostProcessingCleanup","invalidate","currentEditor","queuePostProcessedRowForCleanup","cacheEntry","postProcessedRow","rowIdx","postProcessgroupId","postProcessedCleanupQueue","actionType","groupId","cellNodesByColumnIdx","rowNode","detach","queuePostProcessedCellForCleanup","cellnode","rowNodeFromLastMouseWheelEvent","display","zombieRowNodeFromLastMouseWheelEvent","zombieRowCacheFromLastMouseWheelEvent","zombieRowPostProcessedFromLastMouseWheelEvent","postProcessedRows","renderedRows","counter_rows_removed","invalidateRows","updateCell","cellNode","getCellNode","innerHTML","invalidatePostProcessingResults","updateRow","ensureCellNodesInRowsCache","getViewportHeight","numVisibleRows","lastRenderedScrollLeft","dataLengthIncludingAddNew","numberOfRows","oldViewportHasVScroll","activeCellNode","resetActiveCell","oldH","oldScrollTopInRange","viewportTop","viewportLeft","scrollLeft","buffer","lastChild","pop","previousSibling","cleanUpCells","totalCellsRemoved","cellsToRemove","cellToRemove","cleanUpAndRenderCells","cellsAdded","processedRows","totalCellsAdded","btm","processedRow","renderRows","needToReselectCell","counter_rows_rendered","firstChild","startPostProcessing","enableAsyncPostRender","clearTimeout","h_postrender","setTimeout","asyncPostProcessRows","asyncPostRenderDelay","h_postrenderCleanup","asyncPostProcessCleanupRows","asyncPostRenderCleanupDelay","postProcessFromRow","postProcessToRow","rendered","h_render","vScrollDist","abs","hScrollDist","prevScrollLeft","forceSyncScrolling","onScroll","processedStatus","asyncPostRender","entry","shift","asyncPostRenderCleanup","updateCellCssStylesOnRenderedRows","addedHash","removedHash","addedRowHash","removedRowHash","addCellCssStyles","removeCellCssStyles","prevHash","flashCell","speed","$cell","toggleCellClass","times","queue","toggleClass","cellFlashingCssClass","dequeue","type","cellExists","handled","altKey","editable","keyCaptureList","cancelEditAndSetFocus","navigatePageDown","navigatePageUp","navigateLeft","navigateRight","navigateUp","navigateDown","commitEditAndSetFocus","makeActiveCellEditable","error","activeElement","setFocus","canCellBeActive","scrollRowIntoView","setActiveCellInternal","onContextMenu","onDblClick","gotoCell","onHeaderMouseEnter","onHeaderMouseLeave","onHeaderContextMenu","onHeaderClick","getCellFromNode","cls","getRowFromNode","y1","y2","x1","tabbingDirection","scrollCellIntoView","doPaging","getColspan","scrollRight","newCell","opt_editMode","activeCellChanged","activePosX","autoEdit","isCellPotentiallyEditable","h_editorLoader","asyncEditorLoading","asyncEditorLoadDelay","onActiveCellChanged","clearTextSelection","selection","window","getSelection","sel","removeAllRanges","cannotTriggerInsert","onBeforeCellEditorDestroy","onBeforeEditCell","useEditor","suppressClearOnEdit","gridPosition","absBox","serializedEditorValue","box","offsetTop","offsetLeft","outerHeight","offsetParent","getActiveCellPosition","getGridPosition","onActiveCellPositionChanged","cellBox","getCellEditor","getActiveCellNode","rowAtTop","rowAtBottom","scrollRowToTop","scrollPage","dir","deltaRows","enableCellNavigation","prevCell","prevActivePosX","findFirstFocusableCell","findLastFocusableCell","lastFocusableCell","gotoRight","posX","gotoLeft","firstFocusableCell","pos","prev","gotoDown","gotoUp","gotoNext","gotoPrev","lastSelectableCell","navigate","up","down","next","stepFunctions","stepFn","isAddNewRow","setActiveCell","forceEdit","editCommand","serializedValue","prevSerializedValue","execute","onCellChange","undo","editCommandHandler","newItem","onAddNewRow","onValidationError","rowsToRanges","lastCell","setSelectedRanges","random","visibility","debug","alert","eval","expr","slickGridVersion","getViewport","editActiveCell","_interactjs","$paneHeaderL","$paneHeaderR","$paneTopL","$paneTopR","$paneBottomL","$paneBottomR","$headerScrollerL","$headerScrollerR","$groupHeadersL","$groupHeadersR","$groupHeaders","$headerL","$headerR","$headerRowScrollerL","$headerRowScrollerR","$headerRowSpacerL","$headerRowSpacerR","$headerRowL","$headerRowR","$topPanelScrollerL","$topPanelScrollerR","$topPanelL","$topPanelR","$viewportTopL","$viewportTopR","$viewportBottomL","$viewportBottomR","$activeViewportNode","$canvasTopL","$canvasTopR","$canvasBottomL","$canvasBottomR","$activeCanvasNode","$footerRowScrollerR","$footerRowScrollerL","$footerRowSpacerL","$footerRowSpacerR","$footerRowL","$footerRowR","getViewportWidth","setFrozenOptions","setPaneVisibility","setScroller","setOverflow","createColumnGroupHeaders","createColumnFooter","mousewheel","frozenColumn","hasFrozenRows","hasFrozenColumns","getActiveCanvasNode","setActiveCanvasNode","getCanvases","getViewportNode","getActiveViewportNode","setActiveViewPortNode","setActiveViewportNode","headersWidthL","headersWidthR","getHeadersWidthL","getHeadersWidthR","canvasWidthL","canvasWidthR","totalRowWidth","widthChanged","oldCanvasWidthL","oldCanvasWidthR","frozenBottom","$headerRowTarget","$footerRowTarget","columnsLength","frozenColumnsValid","groupColumns","indexGroup","applyColumnGroupHeaderWidths","$headerTarget","currentPositionInHeader","currentPosition","limitPositionInGroup","idColumn","groupColumnOfPreviousPosition","startLimit","endLimit","some","groupColumn","arr","lastIndexOf","columnPositionValidInGroup","$item","limit","positionValid","message","text","validPositionInGroup","impactedColumns","getImpactedColumns","frozenRow","frozenRowsHeight","actualFrozenRow","overflow-x","overflow-y","$headerScrollContainer","$headerRowScrollContainer","$footerRowScrollContainer","$viewportScrollContainerX","$viewportScrollContainerY","getRule","$groupHeader","currentColumnIndex","$groupHeaderColumn","$headerColumn","_treeColumns","fadeIn","callFormatter","stringArrayL","stringArrayR","frozenRowOffset","getFrozenRowOffset","rowHtml","removeFrozenRow","parentElement","topPanelH","headerRowH","footerRowH","paneTopH","paneBottomH","viewportTopH","viewportBottomH","paneBottomTop","tempViewportH","$lastNode","last","$node","xRight","renderedFrozenRows","deltaX","deltaY","$rowNode","$gridCanvas","zombieRow","_handleScroll","isMouseWheel","maxScrollDistanceY","maxScrollDistanceX","hasFrozenCols","rowOffset","clientX","clientY","$activeCellNode","$activeCellOffset","isBottom","scrollActiveCellIntoView","viewportScrollH","percentCompleteFormatter","percentCompleteBarFormatter","yesNoFormatter","checkmarkFormatter","PercentComplete","PercentCompleteBar","YesNo","Checkmark","RowSelectionModel","RowMoveManager","HeaderMenu","HeaderButtons","CheckboxSelectColumn","CellSelectionModel","CellCopyManager","AutoTooltips","_slick11","_slick12","_slick13","_slick14","_slick15","_slick16","_slick17","_slick18","_slick19","_slick20","enableForCells","enableForHeaderCells","innerWidth","trim","maxToolTipLength","_copiedRanges","clearCopySelection","onCopyCancelled","getSelectedRanges","markCopySelection","onCopyCells","onPasteCells","_options","handleActiveCellChange","_selector","handleCellRangeSelected","handleBeforeCellRangeSelected","removeInvalidRanges","_ranges","selectActiveCell","active","dRow","dCell","dirRow","dirCell","new_last","viewRow","viewCell","handleSelectedRowsChanged","lookup","_selectedRowsLookup","toggleRowSelection","getColumnDefinition","checkboxSelectionFormatter","handleHeaderCellRendered","handleBeforeHeaderCellDestroy","buttons","button","btn","buttonCssClass","showOnHover","image","tooltip","command","handleButtonClick","onCommand","handleBodyMouseDown","$menu","hideMenu","$activeHeaderColumn","menu","buttonImage","showMenu","$menuButton","onBeforeMenuShow","$li","handleMenuItemClick","disabled","$icon","iconCssClass","iconImage","cancelEditOnDrag","behavior","$","inArray","selectionProxy","guide","eventData","onBeforeMoveRows","canMove","onMoveRows","wrapHandler","_inHandler","apply","rangesToRows","getRowsRange","selectActiveRow"],"mappings":"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","file":"slick.es6.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** *\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\nvar Slick = {\n  Event: Event,\n  EventData: EventData,\n  EventHandler: EventHandler,\n  Range: Range,\n  NonDataRow: NonDataItem,\n  Group: Group,\n  GroupTotals: GroupTotals,\n  EditorLock: EditorLock,\n  /** *\n   * A global singleton editor lock.\n   * @class GlobalEditorLock\n   * @static\n   * @constructor\n   */\n  GlobalEditorLock: new EditorLock(),\n  TreeColumns: TreeColumns,\n\n  keyCode: {\n    BACKSPACE: 8,\n    DELETE: 46,\n    DOWN: 40,\n    END: 35,\n    ENTER: 13,\n    ESCAPE: 27,\n    HOME: 36,\n    INSERT: 45,\n    LEFT: 37,\n    PAGE_DOWN: 34,\n    PAGE_UP: 33,\n    RIGHT: 39,\n    TAB: 9,\n    UP: 38,\n    SPACE: 32\n  }\n};\n\nexports.default = Slick;\n\n/***\n * An event object for passing data to event handlers and letting them control propagation.\n * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n * @class EventData\n * @constructor\n */\n\nfunction EventData() {\n  var isPropagationStopped = false;\n  var isImmediatePropagationStopped = false;\n\n  /***\n   * Stops event from propagating up the DOM tree.\n   * @method stopPropagation\n   */\n  this.stopPropagation = function () {\n    isPropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopPropagation was called on this event object.\n   * @method isPropagationStopped\n   * @return {Boolean}\n   */\n  this.isPropagationStopped = function () {\n    return isPropagationStopped;\n  };\n\n  /***\n   * Prevents the rest of the handlers from being executed.\n   * @method stopImmediatePropagation\n   */\n  this.stopImmediatePropagation = function () {\n    isImmediatePropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopImmediatePropagation was called on this event object.\\\n   * @method isImmediatePropagationStopped\n   * @return {Boolean}\n   */\n  this.isImmediatePropagationStopped = function () {\n    return isImmediatePropagationStopped;\n  };\n}\n\n/***\n * A simple publisher-subscriber implementation.\n * @class Event\n * @constructor\n */\nfunction Event() {\n  var handlers = [];\n\n  /***\n   * Adds an event handler to be called when the event is fired.\n   * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n   * object the event was fired with.<p>\n   * @method subscribe\n   * @param fn {Function} Event handler.\n   */\n  this.subscribe = function (fn) {\n    handlers.push(fn);\n  };\n\n  /***\n   * Removes an event handler added with <code>subscribe(fn)</code>.\n   * @method unsubscribe\n   * @param fn {Function} Event handler to be removed.\n   */\n  this.unsubscribe = function (fn) {\n    for (var i = handlers.length - 1; i >= 0; i--) {\n      if (handlers[i] === fn) {\n        handlers.splice(i, 1);\n      }\n    }\n  };\n\n  /***\n   * Fires an event notifying all subscribers.\n   * @method notify\n   * @param args {Object} Additional data object to be passed to all handlers.\n   * @param e {EventData}\n   *      Optional.\n   *      An <code>EventData</code> object to be passed to all handlers.\n   *      For DOM events, an existing W3C/jQuery event object can be passed in.\n   * @param scope {Object}\n   *      Optional.\n   *      The scope (\"this\") within which the handler will be executed.\n   *      If not specified, the scope will be set to the <code>Event</code> instance.\n   */\n  this.notify = function (args, e, scope) {\n    e = e || new EventData();\n    scope = scope || this;\n\n    var returnValue;\n    for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++) {\n      returnValue = handlers[i].call(scope, e, args);\n    }\n\n    return returnValue;\n  };\n}\n\nfunction EventHandler() {\n  var handlers = [];\n\n  this.subscribe = function (event, handler) {\n    handlers.push({\n      event: event,\n      handler: handler\n    });\n    event.subscribe(handler);\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribe = function (event, handler) {\n    var i = handlers.length;\n    while (i--) {\n      if (handlers[i].event === event && handlers[i].handler === handler) {\n        handlers.splice(i, 1);\n        event.unsubscribe(handler);\n        return;\n      }\n    }\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribeAll = function () {\n    var i = handlers.length;\n    while (i--) {\n      handlers[i].event.unsubscribe(handlers[i].handler);\n    }\n    handlers = [];\n\n    return this; // allow chaining\n  };\n}\n\n/***\n * A structure containing a range of cells.\n * @class Range\n * @constructor\n * @param fromRow {Integer} Starting row.\n * @param fromCell {Integer} Starting cell.\n * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n */\nfunction Range(fromRow, fromCell, toRow, toCell) {\n  if (toRow === undefined && toCell === undefined) {\n    toRow = fromRow;\n    toCell = fromCell;\n  }\n\n  /***\n   * @property fromRow\n   * @type {Integer}\n   */\n  this.fromRow = Math.min(fromRow, toRow);\n\n  /***\n   * @property fromCell\n   * @type {Integer}\n   */\n  this.fromCell = Math.min(fromCell, toCell);\n\n  /***\n   * @property toRow\n   * @type {Integer}\n   */\n  this.toRow = Math.max(fromRow, toRow);\n\n  /***\n   * @property toCell\n   * @type {Integer}\n   */\n  this.toCell = Math.max(fromCell, toCell);\n\n  /***\n   * Returns whether a range represents a single row.\n   * @method isSingleRow\n   * @return {Boolean}\n   */\n  this.isSingleRow = function () {\n    return this.fromRow == this.toRow;\n  };\n\n  /***\n   * Returns whether a range represents a single cell.\n   * @method isSingleCell\n   * @return {Boolean}\n   */\n  this.isSingleCell = function () {\n    return this.fromRow == this.toRow && this.fromCell == this.toCell;\n  };\n\n  /***\n   * Returns whether a range contains a given cell.\n   * @method contains\n   * @param row {Integer}\n   * @param cell {Integer}\n   * @return {Boolean}\n   */\n  this.contains = function (row, cell) {\n    return row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell;\n  };\n\n  /***\n   * Returns a readable representation of a range.\n   * @method toString\n   * @return {String}\n   */\n  this.toString = function () {\n    if (this.isSingleCell()) {\n      return '(' + this.fromRow + ':' + this.fromCell + ')';\n    } else {\n      return '(' + this.fromRow + ':' + this.fromCell + ' - ' + this.toRow + ':' + this.toCell + ')';\n    }\n  };\n}\n\n/***\n * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n * @class NonDataItem\n * @constructor\n */\nfunction NonDataItem() {\n  this.__nonDataRow = true;\n}\n\n/***\n * Information about a group of rows.\n * @class Group\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction Group() {\n  this.__group = true;\n\n  /**\n   * Grouping level, starting with 0.\n   * @property level\n   * @type {Number}\n   */\n  this.level = 0;\n\n  /***\n   * Number of rows in the group.\n   * @property count\n   * @type {Integer}\n   */\n  this.count = 0;\n\n  /***\n   * Grouping value.\n   * @property value\n   * @type {Object}\n   */\n  this.value = null;\n\n  /***\n   * Formatted display value of the group.\n   * @property title\n   * @type {String}\n   */\n  this.title = null;\n\n  /***\n   * Whether a group is collapsed.\n   * @property collapsed\n   * @type {Boolean}\n   */\n  this.collapsed = false;\n\n  /***\n   * GroupTotals, if any.\n   * @property totals\n   * @type {GroupTotals}\n   */\n  this.totals = null;\n\n  /**\n   * Rows that are part of the group.\n   * @property rows\n   * @type {Array}\n   */\n  this.rows = [];\n\n  /**\n   * Sub-groups that are part of the group.\n   * @property groups\n   * @type {Array}\n   */\n  this.groups = null;\n\n  /**\n   * A unique key used to identify the group.  This key can be used in calls to DataView\n   * collapseGroup() or expandGroup().\n   * @property groupingKey\n   * @type {Object}\n   */\n  this.groupingKey = null;\n}\n\nGroup.prototype = new NonDataItem();\n\n/***\n * Compares two Group instances.\n * @method equals\n * @return {Boolean}\n * @param group {Group} Group instance to compare to.\n */\nGroup.prototype.equals = function (group) {\n  return this.value === group.value && this.count === group.count && this.collapsed === group.collapsed && this.title === group.title;\n};\n\n/***\n * Information about group totals.\n * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n * formatters during the display.\n * @class GroupTotals\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction GroupTotals() {\n  this.__groupTotals = true;\n\n  /***\n   * Parent Group.\n   * @param group\n   * @type {Group}\n   */\n  this.group = null;\n\n  /***\n   * Whether the totals have been fully initialized / calculated.\n   * Will be set to false for lazy-calculated group totals.\n   * @param initialized\n   * @type {Boolean}\n   */\n  this.initialized = false;\n}\n\nGroupTotals.prototype = new NonDataItem();\n\n/***\n * A locking helper to track the active edit controller and ensure that only a single controller\n * can be active at a time.  This prevents a whole class of state and validation synchronization\n * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n * and attempt a commit or cancel before proceeding.\n * @class EditorLock\n * @constructor\n */\nfunction EditorLock() {\n  var activeEditController = null;\n\n  /***\n   * Returns true if a specified edit controller is active (has the edit lock).\n   * If the parameter is not specified, returns true if any edit controller is active.\n   * @method isActive\n   * @param editController {EditController}\n   * @return {Boolean}\n   */\n  this.isActive = function (editController) {\n    return editController ? activeEditController === editController : activeEditController !== null;\n  };\n\n  /***\n   * Sets the specified edit controller as the active edit controller (acquire edit lock).\n   * If another edit controller is already active, and exception will be thrown.\n   * @method activate\n   * @param editController {EditController} edit controller acquiring the lock\n   */\n  this.activate = function (editController) {\n    if (editController === activeEditController) {\n      // already activated?\n      return;\n    }\n    if (activeEditController !== null) {\n      throw 'SlickGrid.EditorLock.activate: an editController is still active, can\\'t activate another editController';\n    }\n    if (!editController.commitCurrentEdit) {\n      throw 'SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()';\n    }\n    if (!editController.cancelCurrentEdit) {\n      throw 'SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()';\n    }\n    activeEditController = editController;\n  };\n\n  /***\n   * Unsets the specified edit controller as the active edit controller (release edit lock).\n   * If the specified edit controller is not the active one, an exception will be thrown.\n   * @method deactivate\n   * @param editController {EditController} edit controller releasing the lock\n   */\n  this.deactivate = function (editController) {\n    if (activeEditController !== editController) {\n      throw 'SlickGrid.EditorLock.deactivate: specified editController is not the currently active one';\n    }\n    activeEditController = null;\n  };\n\n  /***\n   * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n   * controller and returns whether the commit attempt was successful (commit may fail due to validation\n   * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n   * and false otherwise.  If no edit controller is active, returns true.\n   * @method commitCurrentEdit\n   * @return {Boolean}\n   */\n  this.commitCurrentEdit = function () {\n    return activeEditController ? activeEditController.commitCurrentEdit() : true;\n  };\n\n  /***\n   * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n   * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n   * active, returns true.\n   * @method cancelCurrentEdit\n   * @return {Boolean}\n   */\n  this.cancelCurrentEdit = function cancelCurrentEdit() {\n    return activeEditController ? activeEditController.cancelCurrentEdit() : true;\n  };\n}\n\n/**\n *\n * @param {Array} treeColumns Array com levels of columns\n * @returns {{hasDepth: 'hasDepth', getTreeColumns: 'getTreeColumns', extractColumns: 'extractColumns', getDepth: 'getDepth', getColumnsInDepth: 'getColumnsInDepth', getColumnsInGroup: 'getColumnsInGroup', visibleColumns: 'visibleColumns', filter: 'filter', reOrder: reOrder}}\n * @constructor\n */\nfunction TreeColumns(treeColumns) {\n\n  var columnsById = {};\n\n  function init() {\n    mapToId(treeColumns);\n  }\n\n  function mapToId(columns) {\n    columns.forEach(function (column) {\n      columnsById[column.id] = column;\n\n      if (column.columns) mapToId(column.columns);\n    });\n  }\n\n  function filter(node, condition) {\n\n    return node.filter(function (column) {\n\n      var valid = condition.call(column);\n\n      if (valid && column.columns) column.columns = filter(column.columns, condition);\n\n      return valid && (!column.columns || column.columns.length);\n    });\n  }\n\n  function sort(columns, grid) {\n    columns.sort(function (a, b) {\n      var indexA = getOrDefault(grid.getColumnIndex(a.id)),\n          indexB = getOrDefault(grid.getColumnIndex(b.id));\n\n      return indexA - indexB;\n    }).forEach(function (column) {\n      if (column.columns) sort(column.columns, grid);\n    });\n  }\n\n  function getOrDefault(value) {\n    return typeof value === 'undefined' ? -1 : value;\n  }\n\n  function getDepth(node) {\n    if (node.length) for (var i in node) {\n      return getDepth(node[i]);\n    } else if (node.columns) return 1 + getDepth(node.columns);else return 1;\n  }\n\n  function getColumnsInDepth(node, depth, current) {\n    var columns = [];\n    current = current || 0;\n\n    if (depth == current) {\n\n      if (node.length) node.forEach(function (n) {\n        if (n.columns) n.extractColumns = function () {\n          return extractColumns(n);\n        };\n      });\n\n      return node;\n    } else for (var i in node) {\n      if (node[i].columns) {\n        columns = columns.concat(getColumnsInDepth(node[i].columns, depth, current + 1));\n      }\n    }return columns;\n  }\n\n  function extractColumns(node) {\n    var result = [];\n\n    if (node.hasOwnProperty('length')) {\n\n      for (var i = 0; i < node.length; i++) {\n        result = result.concat(extractColumns(node[i]));\n      }\n    } else {\n\n      if (node.hasOwnProperty('columns')) result = result.concat(extractColumns(node.columns));else return node;\n    }\n\n    return result;\n  }\n\n  function cloneTreeColumns() {\n    return _jquery2.default.extend(true, [], treeColumns);\n  }\n\n  init();\n\n  this.hasDepth = function () {\n\n    for (var i in treeColumns) {\n      if (treeColumns[i].hasOwnProperty('columns')) return true;\n    }return false;\n  };\n\n  this.getTreeColumns = function () {\n    return treeColumns;\n  };\n\n  this.extractColumns = function () {\n    return this.hasDepth() ? extractColumns(treeColumns) : treeColumns;\n  };\n\n  this.getDepth = function () {\n    return getDepth(treeColumns);\n  };\n\n  this.getColumnsInDepth = function (depth) {\n    return getColumnsInDepth(treeColumns, depth);\n  };\n\n  this.getColumnsInGroup = function (groups) {\n    return extractColumns(groups);\n  };\n\n  this.visibleColumns = function () {\n    return filter(cloneTreeColumns(), function () {\n      return this.visible;\n    });\n  };\n\n  this.filter = function (condition) {\n    return filter(cloneTreeColumns(), condition);\n  };\n\n  this.reOrder = function (grid) {\n    return sort(treeColumns, grid);\n  };\n\n  this.getById = function (id) {\n    return columnsById[id];\n  };\n\n  this.getInIds = function (ids) {\n    return ids.map(function (id) {\n      return columnsById[id];\n    });\n  };\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"jquery\");\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"interactjs\");\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = CellRangeDecorator;\n\n/** *\n * Displays an overlay on top of a given cell range.\n *\n * TODO:\n * Currently, it blocks mouse events to DOM nodes behind it.\n * Use FF and WebKit-specific 'pointer-events' CSS style, or some kind of event forwarding.\n * Could also construct the borders separately using 4 individual DIVs.\n *\n * @param {Grid} grid\n * @param {Object} options\n */\n\nfunction CellRangeDecorator(grid, options) {\n  var _elem = void 0;\n  var _defaults = {\n    selectionCssClass: 'slick-range-decorator',\n    selectionCss: {\n      zIndex: '9999',\n      border: '2px dashed red'\n    }\n  };\n\n  options = Object.assign({}, _defaults, options);\n\n  function show(range) {\n    if (!_elem) {\n      _elem = (0, _jquery2.default)('<div></div>', { css: options.selectionCss }).addClass(options.selectionCssClass).css('position', 'absolute').appendTo(grid.getCanvasNode());\n    }\n\n    var from = grid.getCellNodeBox(range.fromRow, range.fromCell);\n    var to = grid.getCellNodeBox(range.toRow, range.toCell);\n\n    _elem.css({\n      top: from.top - 1,\n      left: from.left - 1,\n      height: to.bottom - from.top - 2,\n      width: to.right - from.left - 2\n    });\n\n    return _elem;\n  }\n\n  function hide() {\n    if (_elem) {\n      _elem.remove();\n      _elem = null;\n    }\n  }\n\n  Object.assign(this, {\n    show: show,\n    hide: hide\n  });\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _slick3 = __webpack_require__(3);\n\nvar _slick4 = _interopRequireDefault(_slick3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = CellRangeSelector;\n\n\nfunction CellRangeSelector(options) {\n  var _grid = void 0;\n  var _canvas = void 0;\n  var _dragging = void 0;\n  var _decorator = void 0;\n  var _range = {};\n\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _defaults = {\n    selectionCss: {\n      // 'border': '2px dashed blue'\n    }\n  };\n\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _decorator = new _slick4.default(grid, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _handler.subscribe(_grid.onDragInit, handleDragInit).subscribe(_grid.onDragStart, handleDragStart).subscribe(_grid.onDrag, handleDrag).subscribe(_grid.onDragEnd, handleDragEnd);\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function handleDragInit(e, dd) {\n    // prevent the grid from cancelling drag'n'drop by default\n    e.stopImmediatePropagation();\n  }\n\n  function handleDragStart(jqueryEvent, interactEvent) {\n    var cell = _grid.getCellFromEvent(interactEvent.originalEvent);\n    if (_self.onBeforeCellRangeSelected.notify(cell) !== false) {\n      if (_grid.canCellBeSelected(cell.row, cell.cell)) {\n        _dragging = true;\n        // jqueryEvent.stopImmediatePropagation();\n      }\n    }\n    if (!_dragging) {\n      return;\n    }\n\n    _grid.focus();\n\n    var start = _grid.getCellFromPoint(interactEvent.x0 - (0, _jquery2.default)(_canvas).offset().left, interactEvent.y0 - (0, _jquery2.default)(_canvas).offset().top);\n\n    _range = {\n      start: start,\n      end: {}\n    };\n\n    return _decorator.show(new _slick2.default.Range(start.row, start.cell));\n  }\n\n  function handleDrag(e, interactEvent) {\n    if (!_dragging) {\n      return;\n    }\n    // e.stopImmediatePropagation();\n\n    var end = _grid.getCellFromPoint(interactEvent.pageX - (0, _jquery2.default)(_canvas).offset().left, interactEvent.pageY - (0, _jquery2.default)(_canvas).offset().top);\n\n    if (!_grid.canCellBeSelected(end.row, end.cell)) {\n      return;\n    }\n\n    _range.end = end;\n    _decorator.show(new _slick2.default.Range(_range.start.row, _range.start.cell, end.row, end.cell));\n  }\n\n  function handleDragEnd(e) {\n    if (!_dragging) {\n      return;\n    }\n\n    _dragging = false;\n    // e.stopImmediatePropagation();\n\n    _decorator.hide();\n    _self.onCellRangeSelected.notify({\n      range: new _slick2.default.Range(_range.start.row, _range.start.cell, _range.end.row, _range.end.cell)\n    });\n    _range = {};\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n\n    onBeforeCellRangeSelected: new _slick2.default.Event(),\n    onCellRangeSelected: new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(6);\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugins = exports.FrozenGrid = exports.Grid = exports.Data = exports.Formatters = exports.Editors = exports.Slick = undefined;\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _slick3 = __webpack_require__(7);\n\nvar _slick4 = _interopRequireDefault(_slick3);\n\nvar _slick5 = __webpack_require__(9);\n\nvar _slick6 = _interopRequireDefault(_slick5);\n\nvar _slick7 = __webpack_require__(11);\n\nvar _slick8 = _interopRequireDefault(_slick7);\n\nvar _slickFrozen = __webpack_require__(12);\n\nvar _slickFrozen2 = _interopRequireDefault(_slickFrozen);\n\nvar _slick9 = __webpack_require__(13);\n\nvar _slick10 = _interopRequireDefault(_slick9);\n\nvar _plugins = __webpack_require__(14);\n\nvar Plugins = _interopRequireWildcard(_plugins);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Slick = _slick2.default;\nexports.Editors = _slick4.default;\nexports.Formatters = _slick10.default;\nexports.Data = _slick6.default;\nexports.Grid = _slick8.default;\nexports.FrozenGrid = _slickFrozen2.default;\nexports.Plugins = Plugins;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _flatpickr = __webpack_require__(8);\n\nvar _flatpickr2 = _interopRequireDefault(_flatpickr);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//import 'flatpickr/dist/flatpickr.min.css';\n\nvar keyCode = _slick2.default.keyCode;\n\n/** *\n * Contains basic SlickGrid editors.\n * @module Editors\n * @namespace Slick\n */\n\nvar Editors = {\n  Text: TextEditor,\n  Integer: IntegerEditor,\n  Float: FloatEditor,\n  Date: DateEditor,\n  YesNoSelect: YesNoSelectEditor,\n  Checkbox: CheckboxEditor,\n  LongText: LongTextEditor\n};\n\n_slick2.default.Editors = Editors;\nexports.default = Editors;\n\n\nfunction TextEditor(args) {\n  var $input = void 0;\n  var defaultValue = void 0;\n\n  this.init = function () {\n    $input = (0, _jquery2.default)('<INPUT type=text class=\"editor-text\" />').appendTo(args.container).bind('keydown.nav', function (e) {\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT) {\n        e.stopImmediatePropagation();\n      }\n    }).focus().select();\n  };\n\n  this.destroy = function () {\n    $input.remove();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  this.getValue = function () {\n    return $input.val();\n  };\n\n  this.setValue = function (val) {\n    $input.val(val);\n  };\n\n  this.loadValue = function (item) {\n    defaultValue = item[args.column.field] || '';\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    return $input.val();\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    var valid = true;\n    var msg = null;\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction IntegerEditor(args) {\n  var $input = void 0;\n  var defaultValue = void 0;\n\n  this.init = function () {\n    $input = (0, _jquery2.default)('<INPUT type=text class=\"editor-text\" />');\n\n    $input.bind('keydown.nav', function (e) {\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT) {\n        e.stopImmediatePropagation();\n      }\n    });\n\n    $input.appendTo(args.container);\n    $input.focus().select();\n  };\n\n  this.destroy = function () {\n    $input.remove();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  this.loadValue = function (item) {\n    defaultValue = item[args.column.field];\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    return parseInt($input.val(), 10) || 0;\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    if (isNaN($input.val())) {\n      return {\n        valid: false,\n        msg: 'Please enter a valid integer'\n      };\n    }\n\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val());\n      if (!validationResults.valid) {\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction FloatEditor(args) {\n  var $input = void 0;\n  var defaultValue = void 0;\n  var scope = this;\n\n  this.init = function () {\n    $input = (0, _jquery2.default)('<INPUT type=text class=\"editor-text\" />');\n\n    $input.bind('keydown.nav', function (e) {\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT) {\n        e.stopImmediatePropagation();\n      }\n    });\n\n    $input.appendTo(args.container);\n    $input.focus().select();\n  };\n\n  this.destroy = function () {\n    $input.remove();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  function getDecimalPlaces() {\n    // returns the number of fixed decimal places or null\n    var rtn = args.column.editorFixedDecimalPlaces;\n    if (typeof rtn == 'undefined') {\n      rtn = FloatEditor.DefaultDecimalPlaces;\n    }\n    return !rtn && rtn !== 0 ? null : rtn;\n  }\n\n  this.loadValue = function (item) {\n    defaultValue = item[args.column.field];\n\n    var decPlaces = getDecimalPlaces();\n    if (decPlaces !== null && (defaultValue || defaultValue === 0) && defaultValue.toFixed) {\n      defaultValue = defaultValue.toFixed(decPlaces);\n    }\n\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    var rtn = parseFloat($input.val()) || 0;\n\n    var decPlaces = getDecimalPlaces();\n    if (decPlaces !== null && (rtn || rtn === 0) && rtn.toFixed) {\n      rtn = parseFloat(rtn.toFixed(decPlaces));\n    }\n\n    return rtn;\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    if (isNaN($input.val())) {\n      return {\n        valid: false,\n        msg: 'Please enter a valid number'\n      };\n    }\n\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val(), args);\n      if (!validationResults.valid) {\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nFloatEditor.DefaultDecimalPlaces = null;\n\n/**\n * see https://chmln.github.io/flatpickr/#options - pass as column.options.date = {}\n * @param args\n * @constructor\n */\nfunction DateEditor(args) {\n  var $input = void 0,\n      flatInstance = void 0,\n      defaultDate = void 0,\n      options = args.column.options && args.column.options.date ? args.column.options.date : {};\n\n  this.init = function () {\n    defaultDate = options.defaultDate = args.item[args.column.field];\n\n    $input = (0, _jquery2.default)('<input type=text data-default-date=\"' + defaultDate + '\" class=\"editor-text\" />');\n    $input.appendTo(args.container);\n    $input.focus().val(defaultDate).select();\n    flatInstance = (0, _flatpickr2.default)($input[0], options);\n  };\n\n  this.destroy = function () {\n    flatInstance.destroy();\n    $input.remove();\n  };\n\n  this.show = function () {\n    flatInstance.open();\n  };\n\n  this.hide = function () {\n    flatInstance.close();\n  };\n\n  this.position = function (position) {\n    //todo: fix how scrolling is affected\n    flatInstance.redraw();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  this.loadValue = function (item) {\n    defaultDate = item[args.column.field];\n    $input.val(defaultDate);\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    return $input.val();\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultDate == null) && $input.val() != defaultDate;\n  };\n\n  this.validate = function () {\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val(), args);\n      if (!validationResults.valid) {\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction YesNoSelectEditor(args) {\n  var $select = void 0;\n  var defaultValue = void 0;\n  var scope = this;\n\n  this.init = function () {\n    $select = (0, _jquery2.default)('<select tabIndex=\"0\" class=\"editor-yesno\"><option value=\"yes\">Yes</option><option value=\"no\">No</option></select>');\n    $select.appendTo(args.container);\n    $select.focus();\n  };\n\n  this.destroy = function () {\n    $select.remove();\n  };\n\n  this.focus = function () {\n    $select.focus();\n  };\n\n  this.loadValue = function (item) {\n    $select.val((defaultValue = item[args.column.field]) ? 'yes' : 'no');\n    $select.select();\n  };\n\n  this.serializeValue = function () {\n    return $select.val() == 'yes';\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return $select.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    var valid = true;\n    var msg = null;\n    if (args.column.validator) {\n      var validationResults = args.column.validator($select.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction CheckboxEditor(args) {\n  var $select = void 0;\n  var defaultValue = void 0;\n  var scope = this;\n\n  this.init = function () {\n    $select = (0, _jquery2.default)('<INPUT type=checkbox value=\"true\" class=\"editor-checkbox\" hideFocus>');\n    $select.appendTo(args.container);\n    $select.focus();\n  };\n\n  this.destroy = function () {\n    $select.remove();\n  };\n\n  this.focus = function () {\n    $select.focus();\n  };\n\n  this.loadValue = function (item) {\n    defaultValue = !!item[args.column.field];\n    if (defaultValue) {\n      $select.prop('checked', true);\n    } else {\n      $select.prop('checked', false);\n    }\n  };\n\n  this.serializeValue = function () {\n    return $select.prop('checked');\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return this.serializeValue() !== defaultValue;\n  };\n\n  this.validate = function () {\n    var valid = true;\n    var msg = null;\n    if (args.column.validator) {\n      var validationResults = args.column.validator($select.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction PercentCompleteEditor(args) {\n  console.error('PercentCompleteEditor is derecated');\n}\n\n/*\n * An example of a \"detached\" editor.\n * The UI is added onto document BODY and .position(), .show() and .hide() are implemented.\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\n */\nfunction LongTextEditor(args) {\n  var $input = void 0,\n      $wrapper = void 0;\n  var defaultValue = void 0;\n  var scope = this;\n\n  this.init = function () {\n    var $container = (0, _jquery2.default)('body');\n\n    $wrapper = (0, _jquery2.default)('<div class=\"slick-large-editor-text\" />').appendTo($container);\n    $input = (0, _jquery2.default)('<textarea hidefocus rows=5 />').appendTo($wrapper);\n\n    (0, _jquery2.default)('<div><button>Save</button> <button>Cancel</button></div>').appendTo($wrapper);\n\n    $wrapper.find('button:first').bind('click', this.save);\n    $wrapper.find('button:last').bind('click', this.cancel);\n    $input.bind('keydown', this.handleKeyDown);\n\n    scope.position(args.position);\n    $input.focus().select();\n  };\n\n  this.handleKeyDown = function (e) {\n    if (e.which == keyCode.ENTER && e.ctrlKey) {\n      scope.save();\n    } else if (e.which == keyCode.ESCAPE) {\n      e.preventDefault();\n      scope.cancel();\n    } else if (e.which == keyCode.TAB && e.shiftKey) {\n      e.preventDefault();\n      args.grid.navigatePrev();\n    } else if (e.which == keyCode.TAB) {\n      e.preventDefault();\n      args.grid.navigateNext();\n    }\n  };\n\n  this.save = function () {\n    args.commitChanges();\n  };\n\n  this.cancel = function () {\n    $input.val(defaultValue);\n    args.cancelChanges();\n  };\n\n  this.hide = function () {\n    $wrapper.hide();\n  };\n\n  this.show = function () {\n    $wrapper.show();\n  };\n\n  this.position = function (position) {\n    $wrapper.css('top', position.top - 5).css('left', position.left - 5);\n  };\n\n  this.destroy = function () {\n    $wrapper.remove();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  this.loadValue = function (item) {\n    $input.val(defaultValue = item[args.column.field]);\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    return $input.val();\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    var valid = true;\n    var msg = null;\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"flatpickr\");\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick3 = __webpack_require__(10);\n\nvar _slick4 = _interopRequireDefault(_slick3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Aggregators = {\n  Avg: AvgAggregator,\n  Min: MinAggregator,\n  Max: MaxAggregator,\n  Sum: SumAggregator\n};\n\nvar Data = {\n  DataView: DataView,\n  GroupMetaDataProvider: _slick4.default,\n  Aggregators: Aggregators\n};\n\nexports.default = Data;\n\n/** *\n * A sample Model implementation.\n * Provides a filtered view of the underlying data.\n *\n * Relies on the data item having an \"id\" property uniquely identifying it.\n */\n\nfunction DataView(options) {\n  var self = this;\n\n  var defaults = {\n    groupItemMetadataProvider: null,\n    inlineFilters: false\n  };\n\n  // private\n  var idProperty = 'id'; // property holding a unique row id\n  var items = []; // data by index\n  var rows = []; // data by row\n  var idxById = {}; // indexes by id\n  var rowsById = null; // rows by id; lazy-calculated\n  var filter = null; // filter function\n  var updated = null; // updated item ids\n  var suspend = false; // suspends the recalculation\n  var sortAsc = true;\n  var fastSortField = void 0;\n  var sortComparer = void 0;\n  var refreshHints = {};\n  var prevRefreshHints = {};\n  var filterArgs = void 0;\n  var filteredItems = [];\n  var compiledFilter = void 0;\n  var compiledFilterWithCaching = void 0;\n  var filterCache = [];\n\n  // grouping\n  var groupingInfoDefaults = {\n    getter: null,\n    formatter: null,\n    comparer: function comparer(a, b) {\n      return a.value === b.value ? 0 : a.value > b.value ? 1 : -1;\n    },\n    predefinedValues: [],\n    aggregators: [],\n    aggregateEmpty: false,\n    aggregateCollapsed: false,\n    aggregateChildGroups: false,\n    collapsed: false,\n    displayTotalsRow: true,\n    lazyTotalsCalculation: false\n  };\n  var groupingInfos = [];\n  var groups = [];\n  var toggledGroupsByLevel = [];\n  var groupingDelimiter = ':|:';\n\n  var pagesize = 0;\n  var pagenum = 0;\n  var totalRows = 0;\n\n  // events\n  var onRowCountChanged = new _slick2.default.Event();\n  var onRowsChanged = new _slick2.default.Event();\n  var onPagingInfoChanged = new _slick2.default.Event();\n\n  options = _jquery2.default.extend(true, {}, defaults, options);\n\n  function beginUpdate() {\n    suspend = true;\n  }\n\n  function endUpdate() {\n    suspend = false;\n    refresh();\n  }\n\n  function setRefreshHints(hints) {\n    refreshHints = hints;\n  }\n\n  function setFilterArgs(args) {\n    filterArgs = args;\n  }\n\n  function updateIdxById(startingIndex) {\n    startingIndex = startingIndex || 0;\n    var id = void 0;\n    for (var i = startingIndex, l = items.length; i < l; i++) {\n      id = items[i][idProperty];\n      if (id === undefined) {\n        throw 'Each data element must implement a unique \\'id\\' property';\n      }\n      idxById[id] = i;\n    }\n  }\n\n  function ensureIdUniqueness() {\n    var id = void 0;\n    for (var i = 0, l = items.length; i < l; i++) {\n      id = items[i][idProperty];\n      if (id === undefined || idxById[id] !== i) {\n        throw 'Each data element must implement a unique \\'id\\' property';\n      }\n    }\n  }\n\n  function getItems() {\n    return items;\n  }\n\n  function setItems(data, objectIdProperty) {\n    if (objectIdProperty !== undefined) {\n      idProperty = objectIdProperty;\n    }\n    items = filteredItems = data;\n    idxById = {};\n    updateIdxById();\n    ensureIdUniqueness();\n    refresh();\n  }\n\n  function setPagingOptions(args) {\n    if (args.pageSize != undefined) {\n      pagesize = args.pageSize;\n      pagenum = pagesize ? Math.min(pagenum, Math.max(0, Math.ceil(totalRows / pagesize) - 1)) : 0;\n    }\n\n    if (args.pageNum != undefined) {\n      pagenum = Math.min(args.pageNum, Math.max(0, Math.ceil(totalRows / pagesize) - 1));\n    }\n\n    onPagingInfoChanged.notify(getPagingInfo(), null, self);\n\n    refresh();\n  }\n\n  function getPagingInfo() {\n    var totalPages = pagesize ? Math.max(1, Math.ceil(totalRows / pagesize)) : 1;\n    return { pageSize: pagesize, pageNum: pagenum, totalRows: totalRows, totalPages: totalPages, dataView: self };\n  }\n\n  function sort(comparer, ascending) {\n    sortAsc = ascending;\n    sortComparer = comparer;\n    fastSortField = null;\n    if (ascending === false) {\n      items.reverse();\n    }\n    items.sort(comparer);\n    if (ascending === false) {\n      items.reverse();\n    }\n    idxById = {};\n    updateIdxById();\n    refresh();\n  }\n\n  /** *\n   * Provides a workaround for the extremely slow sorting in IE.\n   * Does a [lexicographic] sort on a give column by temporarily overriding Object.prototype.toString\n   * to return the value of that field and then doing a native Array.sort().\n   */\n  function fastSort(field, ascending) {\n    sortAsc = ascending;\n    fastSortField = field;\n    sortComparer = null;\n    var oldToString = Object.prototype.toString;\n    Object.prototype.toString = typeof field == 'function' ? field : function () {\n      return this[field];\n    };\n    // an extra reversal for descending sort keeps the sort stable\n    // (assuming a stable native sort implementation, which isn't true in some cases)\n    if (ascending === false) {\n      items.reverse();\n    }\n    items.sort();\n    Object.prototype.toString = oldToString;\n    if (ascending === false) {\n      items.reverse();\n    }\n    idxById = {};\n    updateIdxById();\n    refresh();\n  }\n\n  function reSort() {\n    if (sortComparer) {\n      sort(sortComparer, sortAsc);\n    } else if (fastSortField) {\n      fastSort(fastSortField, sortAsc);\n    }\n  }\n\n  function setFilter(filterFn) {\n    filter = filterFn;\n    if (options.inlineFilters) {\n      compiledFilter = compileFilter();\n      compiledFilterWithCaching = compileFilterWithCaching();\n    }\n    refresh();\n  }\n\n  function getGrouping() {\n    return groupingInfos;\n  }\n\n  function setGrouping(groupingInfo) {\n    if (!options.groupItemMetadataProvider) {\n      options.groupItemMetadataProvider = new Data.GroupItemMetadataProvider();\n    }\n\n    groups = [];\n    toggledGroupsByLevel = [];\n    groupingInfo = groupingInfo || [];\n    groupingInfos = groupingInfo instanceof Array ? groupingInfo : [groupingInfo];\n\n    for (var i = 0; i < groupingInfos.length; i++) {\n      var gi = groupingInfos[i] = _jquery2.default.extend(true, {}, groupingInfoDefaults, groupingInfos[i]);\n      gi.getterIsAFn = typeof gi.getter === 'function';\n\n      // pre-compile accumulator loops\n      gi.compiledAccumulators = [];\n      var idx = gi.aggregators.length;\n      while (idx--) {\n        gi.compiledAccumulators[idx] = compileAccumulatorLoop(gi.aggregators[idx]);\n      }\n\n      toggledGroupsByLevel[i] = {};\n    }\n\n    refresh();\n  }\n\n  /**\n   * @deprecated Please use {@link setGrouping}.\n   */\n  function groupBy(valueGetter, valueFormatter, sortComparer) {\n    if (valueGetter == null) {\n      setGrouping([]);\n      return;\n    }\n\n    setGrouping({\n      getter: valueGetter,\n      formatter: valueFormatter,\n      comparer: sortComparer\n    });\n  }\n\n  /**\n   * @deprecated Please use {@link setGrouping}.\n   */\n  function setAggregators(groupAggregators, includeCollapsed) {\n    if (!groupingInfos.length) {\n      throw new Error('At least one grouping must be specified before calling setAggregators().');\n    }\n\n    groupingInfos[0].aggregators = groupAggregators;\n    groupingInfos[0].aggregateCollapsed = includeCollapsed;\n\n    setGrouping(groupingInfos);\n  }\n\n  function getItemByIdx(i) {\n    return items[i];\n  }\n\n  function getIdxById(id) {\n    return idxById[id];\n  }\n\n  function ensureRowsByIdCache() {\n    if (!rowsById) {\n      rowsById = {};\n      for (var i = 0, l = rows.length; i < l; i++) {\n        rowsById[rows[i][idProperty]] = i;\n      }\n    }\n  }\n\n  function getRowById(id) {\n    ensureRowsByIdCache();\n    return rowsById[id];\n  }\n\n  function getItemById(id) {\n    return items[idxById[id]];\n  }\n\n  function mapIdsToRows(idArray) {\n    var rows = [];\n    ensureRowsByIdCache();\n    for (var i = 0, l = idArray.length; i < l; i++) {\n      var row = rowsById[idArray[i]];\n      if (row != null) {\n        rows[rows.length] = row;\n      }\n    }\n    return rows;\n  }\n\n  function mapRowsToIds(rowArray) {\n    var ids = [];\n    for (var i = 0, l = rowArray.length; i < l; i++) {\n      if (rowArray[i] < rows.length) {\n        ids[ids.length] = rows[rowArray[i]][idProperty];\n      }\n    }\n    return ids;\n  }\n\n  function updateItem(id, item) {\n    if (idxById[id] === undefined || id !== item[idProperty]) {\n      throw 'Invalid or non-matching id';\n    }\n    items[idxById[id]] = item;\n    if (!updated) {\n      updated = {};\n    }\n    updated[id] = true;\n    refresh();\n  }\n\n  function insertItem(insertBefore, item) {\n    items.splice(insertBefore, 0, item);\n    updateIdxById(insertBefore);\n    refresh();\n  }\n\n  function addItem(item) {\n    items.push(item);\n    updateIdxById(items.length - 1);\n    refresh();\n  }\n\n  function deleteItem(id) {\n    var idx = idxById[id];\n    if (idx === undefined) {\n      throw 'Invalid id';\n    }\n    delete idxById[id];\n    items.splice(idx, 1);\n    updateIdxById(idx);\n    refresh();\n  }\n\n  function getLength() {\n    return rows.length;\n  }\n\n  function getItem(i) {\n    var item = rows[i];\n\n    // if this is a group row, make sure totals are calculated and update the title\n    if (item && item.__group && item.totals && !item.totals.initialized) {\n      var gi = groupingInfos[item.level];\n      if (!gi.displayTotalsRow) {\n        calculateTotals(item.totals);\n        item.title = gi.formatter ? gi.formatter(item) : item.value;\n      }\n    }\n    // if this is a totals row, make sure it's calculated\n    else if (item && item.__groupTotals && !item.initialized) {\n        calculateTotals(item);\n      }\n\n    return item;\n  }\n\n  function getItemMetadata(i) {\n    var item = rows[i];\n    if (item === undefined) {\n      return null;\n    }\n\n    // overrides for grouping rows\n    if (item.__group) {\n      return options.groupItemMetadataProvider.getGroupRowMetadata(item);\n    }\n\n    // overrides for totals rows\n    if (item.__groupTotals) {\n      return options.groupItemMetadataProvider.getTotalsRowMetadata(item);\n    }\n\n    return null;\n  }\n\n  function expandCollapseAllGroups(level, collapse) {\n    if (level == null) {\n      for (var i = 0; i < groupingInfos.length; i++) {\n        toggledGroupsByLevel[i] = {};\n        groupingInfos[i].collapsed = collapse;\n      }\n    } else {\n      toggledGroupsByLevel[level] = {};\n      groupingInfos[level].collapsed = collapse;\n    }\n    refresh();\n  }\n\n  /**\n   * @param level {Number} Optional level to collapse.  If not specified, applies to all levels.\n   */\n  function collapseAllGroups(level) {\n    expandCollapseAllGroups(level, true);\n  }\n\n  /**\n   * @param level {Number} Optional level to expand.  If not specified, applies to all levels.\n   */\n  function expandAllGroups(level) {\n    expandCollapseAllGroups(level, false);\n  }\n\n  function expandCollapseGroup(level, groupingKey, collapse) {\n    toggledGroupsByLevel[level][groupingKey] = groupingInfos[level].collapsed ^ collapse;\n    refresh();\n  }\n\n  /**\n   * @param letArgs Either a Slick.Group's \"groupingKey\" property, or a\n   *     letiable argument list of grouping values denoting a unique path to the row.  For\n   *     example, calling collapseGroup('high', '10%') will collapse the '10%' subgroup of\n   *     the 'high' group.\n   */\n  function collapseGroup(letArgs) {\n    var args = Array.prototype.slice.call(arguments);\n    var arg0 = args[0];\n    if (args.length == 1 && arg0.indexOf(groupingDelimiter) != -1) {\n      expandCollapseGroup(arg0.split(groupingDelimiter).length - 1, arg0, true);\n    } else {\n      expandCollapseGroup(args.length - 1, args.join(groupingDelimiter), true);\n    }\n  }\n\n  /**\n   * @param letArgs Either a Slick.Group's \"groupingKey\" property, or a\n   *     letiable argument list of grouping values denoting a unique path to the row.  For\n   *     example, calling expandGroup('high', '10%') will expand the '10%' subgroup of\n   *     the 'high' group.\n   */\n  function expandGroup(letArgs) {\n    var args = Array.prototype.slice.call(arguments);\n    var arg0 = args[0];\n    if (args.length == 1 && arg0.indexOf(groupingDelimiter) != -1) {\n      expandCollapseGroup(arg0.split(groupingDelimiter).length - 1, arg0, false);\n    } else {\n      expandCollapseGroup(args.length - 1, args.join(groupingDelimiter), false);\n    }\n  }\n\n  function getGroups() {\n    return groups;\n  }\n\n  function extractGroups(rows, parentGroup) {\n    var group = void 0;\n    var val = void 0;\n    var groups = [];\n    var groupsByVal = {};\n    var r = void 0;\n    var level = parentGroup ? parentGroup.level + 1 : 0;\n    var gi = groupingInfos[level];\n\n    for (var i = 0, l = gi.predefinedValues.length; i < l; i++) {\n      val = gi.predefinedValues[i];\n      group = groupsByVal[val];\n      if (!group) {\n        group = new _slick2.default.Group();\n        group.value = val;\n        group.level = level;\n        group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\n        groups[groups.length] = group;\n        groupsByVal[val] = group;\n      }\n    }\n\n    for (var _i = 0, _l = rows.length; _i < _l; _i++) {\n      r = rows[_i];\n      val = gi.getterIsAFn ? gi.getter(r) : r[gi.getter];\n      group = groupsByVal[val];\n      if (!group) {\n        group = new _slick2.default.Group();\n        group.value = val;\n        group.level = level;\n        group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\n        groups[groups.length] = group;\n        groupsByVal[val] = group;\n      }\n\n      group.rows[group.count++] = r;\n    }\n\n    if (level < groupingInfos.length - 1) {\n      for (var _i2 = 0; _i2 < groups.length; _i2++) {\n        group = groups[_i2];\n        group.groups = extractGroups(group.rows, group);\n      }\n    }\n\n    groups.sort(groupingInfos[level].comparer);\n\n    return groups;\n  }\n\n  function calculateTotals(totals) {\n    var group = totals.group;\n    var gi = groupingInfos[group.level];\n    var isLeafLevel = group.level == groupingInfos.length;\n    var agg = void 0,\n        idx = gi.aggregators.length;\n\n    if (!isLeafLevel && gi.aggregateChildGroups) {\n      // make sure all the subgroups are calculated\n      var i = group.groups.length;\n      while (i--) {\n        if (!group.groups[i].totals.initialized) {\n          calculateTotals(group.groups[i].totals);\n        }\n      }\n    }\n\n    while (idx--) {\n      agg = gi.aggregators[idx];\n      agg.init();\n      if (!isLeafLevel && gi.aggregateChildGroups) {\n        gi.compiledAccumulators[idx].call(agg, group.groups);\n      } else {\n        gi.compiledAccumulators[idx].call(agg, group.rows);\n      }\n      agg.storeResult(totals);\n    }\n    totals.initialized = true;\n  }\n\n  function addGroupTotals(group) {\n    var gi = groupingInfos[group.level];\n    var totals = new _slick2.default.GroupTotals();\n    totals.group = group;\n    group.totals = totals;\n    if (!gi.lazyTotalsCalculation) {\n      calculateTotals(totals);\n    }\n  }\n\n  function addTotals(groups, level) {\n    level = level || 0;\n    var gi = groupingInfos[level];\n    var groupCollapsed = gi.collapsed;\n    var toggledGroups = toggledGroupsByLevel[level];\n    var idx = groups.length,\n        g = void 0;\n    while (idx--) {\n      g = groups[idx];\n\n      if (g.collapsed && !gi.aggregateCollapsed) {\n        continue;\n      }\n\n      // Do a depth-first aggregation so that parent group aggregators can access subgroup totals.\n      if (g.groups) {\n        addTotals(g.groups, level + 1);\n      }\n\n      if (gi.aggregators.length && (gi.aggregateEmpty || g.rows.length || g.groups && g.groups.length)) {\n        addGroupTotals(g);\n      }\n\n      g.collapsed = groupCollapsed ^ toggledGroups[g.groupingKey];\n      g.title = gi.formatter ? gi.formatter(g) : g.value;\n    }\n  }\n\n  function flattenGroupedRows(groups, level) {\n    level = level || 0;\n    var gi = groupingInfos[level];\n    var groupedRows = [],\n        rows = void 0,\n        gl = 0,\n        g = void 0;\n    for (var i = 0, l = groups.length; i < l; i++) {\n      g = groups[i];\n      groupedRows[gl++] = g;\n\n      if (!g.collapsed) {\n        rows = g.groups ? flattenGroupedRows(g.groups, level + 1) : g.rows;\n        for (var j = 0, jj = rows.length; j < jj; j++) {\n          groupedRows[gl++] = rows[j];\n        }\n      }\n\n      if (g.totals && gi.displayTotalsRow && (!g.collapsed || gi.aggregateCollapsed)) {\n        groupedRows[gl++] = g.totals;\n      }\n    }\n    return groupedRows;\n  }\n\n  function getFunctionInfo(fn) {\n    var fnRegex = /^function[^(]*\\(([^)]*)\\)\\s*{([\\s\\S]*)}$/;\n    var matches = fn.toString().match(fnRegex);\n    return {\n      params: matches[1].split(','),\n      body: matches[2]\n    };\n  }\n\n  function compileAccumulatorLoop(aggregator) {\n    var accumulatorInfo = getFunctionInfo(aggregator.accumulate);\n    var fn = new Function('_items', 'for (let ' + accumulatorInfo.params[0] + ', _i=0, _il=_items.length; _i<_il; _i++) {' + accumulatorInfo.params[0] + ' = _items[_i]; ' + accumulatorInfo.body + '}');\n    fn.displayName = 'compiledAccumulatorLoop';\n    return fn;\n  }\n\n  function compileFilter() {\n    var filterInfo = getFunctionInfo(filter);\n\n    var filterPath1 = '{ continue _coreloop; }$1';\n    var filterPath2 = '{ _retval[_idx++] = $item$; continue _coreloop; }$1';\n    // make some allowances for minification - there's only so far we can go with RegEx\n    var filterBody = filterInfo.body.replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1).replace(/return!1([;}]|\\}|$)/gi, filterPath1).replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2).replace(/return!0([;}]|\\}|$)/gi, filterPath2).replace(/return ([^;}]+?)\\s*([;}]|$)/gi, '{ if ($1) { _retval[_idx++] = $item$; }; continue _coreloop; }$2');\n\n    // This preserves the function template code after JS compression,\n    // so that replace() commands still work as expected.\n    var tpl = [\n    // \"function(_items, _args) { \",\n    'let _retval = [], _idx = 0; ', 'let $item$, $args$ = _args; ', '_coreloop: ', 'for (let _i = 0, _il = _items.length; _i < _il; _i++) { ', '$item$ = _items[_i]; ', '$filter$; ', '} ', 'return _retval; '\n    // \"}\"\n    ].join('');\n    tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n    tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n    tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n    var fn = new Function('_items,_args', tpl);\n    fn.displayName = 'compiledFilter';\n\n    return fn;\n  }\n\n  function compileFilterWithCaching() {\n    var filterInfo = getFunctionInfo(filter);\n\n    var filterPath1 = '{ continue _coreloop; }$1';\n    var filterPath2 = '{ _cache[_i] = true;_retval[_idx++] = $item$; continue _coreloop; }$1';\n    // make some allowances for minification - there's only so far we can go with RegEx\n    var filterBody = filterInfo.body.replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1).replace(/return!1([;}]|\\}|$)/gi, filterPath1).replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2).replace(/return!0([;}]|\\}|$)/gi, filterPath2).replace(/return ([^;}]+?)\\s*([;}]|$)/gi, '{ if ((_cache[_i] = $1)) { _retval[_idx++] = $item$; }; continue _coreloop; }$2');\n\n    // This preserves the function template code after JS compression,\n    // so that replace() commands still work as expected.\n    var tpl = [\n    // \"function(_items, _args, _cache) { \",\n    'let _retval = [], _idx = 0; ', 'let $item$, $args$ = _args; ', '_coreloop: ', 'for (let _i = 0, _il = _items.length; _i < _il; _i++) { ', '$item$ = _items[_i]; ', 'if (_cache[_i]) { ', '_retval[_idx++] = $item$; ', 'continue _coreloop; ', '} ', '$filter$; ', '} ', 'return _retval; '\n    // \"}\"\n    ].join('');\n    tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n    tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n    tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n    var fn = new Function('_items,_args,_cache', tpl);\n    fn.displayName = 'compiledFilterWithCaching';\n    return fn;\n  }\n\n  function uncompiledFilter(items, args) {\n    var retval = [],\n        idx = 0;\n\n    for (var i = 0, ii = items.length; i < ii; i++) {\n      if (filter(items[i], args)) {\n        retval[idx++] = items[i];\n      }\n    }\n\n    return retval;\n  }\n\n  function uncompiledFilterWithCaching(items, args, cache) {\n    var retval = [],\n        idx = 0,\n        item = void 0;\n\n    for (var i = 0, ii = items.length; i < ii; i++) {\n      item = items[i];\n      if (cache[i]) {\n        retval[idx++] = item;\n      } else if (filter(item, args)) {\n        retval[idx++] = item;\n        cache[i] = true;\n      }\n    }\n\n    return retval;\n  }\n\n  function getFilteredAndPagedItems(items) {\n    if (filter) {\n      var batchFilter = options.inlineFilters ? compiledFilter : uncompiledFilter;\n      var batchFilterWithCaching = options.inlineFilters ? compiledFilterWithCaching : uncompiledFilterWithCaching;\n\n      if (refreshHints.isFilterNarrowing) {\n        filteredItems = batchFilter(filteredItems, filterArgs);\n      } else if (refreshHints.isFilterExpanding) {\n        filteredItems = batchFilterWithCaching(items, filterArgs, filterCache);\n      } else if (!refreshHints.isFilterUnchanged) {\n        filteredItems = batchFilter(items, filterArgs);\n      }\n    } else {\n      // special case:  if not filtering and not paging, the resulting\n      // rows collection needs to be a copy so that changes due to sort\n      // can be caught\n      filteredItems = pagesize ? items : items.concat();\n    }\n\n    // get the current page\n    var paged = void 0;\n    if (pagesize) {\n      if (filteredItems.length < pagenum * pagesize) {\n        pagenum = Math.floor(filteredItems.length / pagesize);\n      }\n      paged = filteredItems.slice(pagesize * pagenum, pagesize * pagenum + pagesize);\n    } else {\n      paged = filteredItems;\n    }\n\n    return { totalRows: filteredItems.length, rows: paged };\n  }\n\n  function getRowDiffs(rows, newRows) {\n    var item = void 0,\n        r = void 0,\n        eitherIsNonData = void 0,\n        diff = [];\n    var from = 0,\n        to = newRows.length;\n\n    if (refreshHints && refreshHints.ignoreDiffsBefore) {\n      from = Math.max(0, Math.min(newRows.length, refreshHints.ignoreDiffsBefore));\n    }\n\n    if (refreshHints && refreshHints.ignoreDiffsAfter) {\n      to = Math.min(newRows.length, Math.max(0, refreshHints.ignoreDiffsAfter));\n    }\n\n    for (var i = from, rl = rows.length; i < to; i++) {\n      if (i >= rl) {\n        diff[diff.length] = i;\n      } else {\n        item = newRows[i];\n        r = rows[i];\n\n        if (groupingInfos.length && (eitherIsNonData = item.__nonDataRow || r.__nonDataRow) && item.__group !== r.__group || item.__group && !item.equals(r) || eitherIsNonData && (\n        // no good way to compare totals since they are arbitrary DTOs\n        // deep object comparison is pretty expensive\n        // always considering them 'dirty' seems easier for the time being\n        item.__groupTotals || r.__groupTotals) || item[idProperty] != r[idProperty] || updated && updated[item[idProperty]]) {\n          diff[diff.length] = i;\n        }\n      }\n    }\n    return diff;\n  }\n\n  function recalc(_items) {\n    rowsById = null;\n\n    if (refreshHints.isFilterNarrowing != prevRefreshHints.isFilterNarrowing || refreshHints.isFilterExpanding != prevRefreshHints.isFilterExpanding) {\n      filterCache = [];\n    }\n\n    var filteredItems = getFilteredAndPagedItems(_items);\n    totalRows = filteredItems.totalRows;\n    var newRows = filteredItems.rows;\n\n    groups = [];\n    if (groupingInfos.length) {\n      groups = extractGroups(newRows);\n      if (groups.length) {\n        addTotals(groups);\n        newRows = flattenGroupedRows(groups);\n      }\n    }\n\n    var diff = getRowDiffs(rows, newRows);\n\n    rows = newRows;\n\n    return diff;\n  }\n\n  function refresh() {\n    if (suspend) {\n      return;\n    }\n\n    var countBefore = rows.length;\n    var totalRowsBefore = totalRows;\n\n    var diff = recalc(items, filter); // pass as direct refs to avoid closure perf hit\n\n    // if the current page is no longer valid, go to last page and recalc\n    // we suffer a performance penalty here, but the main loop (recalc) remains highly optimized\n    if (pagesize && totalRows < pagenum * pagesize) {\n      pagenum = Math.max(0, Math.ceil(totalRows / pagesize) - 1);\n      diff = recalc(items, filter);\n    }\n\n    updated = null;\n    prevRefreshHints = refreshHints;\n    refreshHints = {};\n\n    if (totalRowsBefore !== totalRows) {\n      onPagingInfoChanged.notify(getPagingInfo(), null, self);\n    }\n    if (countBefore !== rows.length) {\n      onRowCountChanged.notify({ previous: countBefore, current: rows.length, dataView: self }, null, self);\n    }\n    if (diff.length > 0) {\n      onRowsChanged.notify({ rows: diff, dataView: self }, null, self);\n    }\n  }\n\n  /** *\n   * Wires the grid and the DataView together to keep row selection tied to item ids.\n   * This is useful since, without it, the grid only knows about rows, so if the items\n   * move around, the same rows stay selected instead of the selection moving along\n   * with the items.\n   *\n   * NOTE:  This doesn't work with cell selection model.\n   *\n   * @param grid {Slick.Grid} The grid to sync selection with.\n   * @param preserveHidden {Boolean} Whether to keep selected items that go out of the\n   *     view due to them getting filtered out.\n   * @param preserveHiddenOnSelectionChange {Boolean} Whether to keep selected items\n   *     that are currently out of the view (see preserveHidden) as selected when selection\n   *     changes.\n   * @return {Slick.Event} An event that notifies when an internal list of selected row ids\n   *     changes.  This is useful since, in combination with the above two options, it allows\n   *     access to the full list selected row ids, and not just the ones visible to the grid.\n   * @method syncGridSelection\n   */\n  function syncGridSelection(grid, preserveHidden, preserveHiddenOnSelectionChange) {\n    var self = this;\n    var inHandler = void 0;\n    var selectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\n    var onSelectedRowIdsChanged = new _slick2.default.Event();\n\n    function setSelectedRowIds(rowIds) {\n      if (selectedRowIds.join(',') == rowIds.join(',')) {\n        return;\n      }\n\n      selectedRowIds = rowIds;\n\n      onSelectedRowIdsChanged.notify({\n        'grid': grid,\n        'ids': selectedRowIds,\n        'dataView': self\n      }, new _slick2.default.EventData(), self);\n    }\n\n    function update() {\n      if (selectedRowIds.length > 0) {\n        inHandler = true;\n        var selectedRows = self.mapIdsToRows(selectedRowIds);\n        if (!preserveHidden) {\n          setSelectedRowIds(self.mapRowsToIds(selectedRows));\n        }\n        grid.setSelectedRows(selectedRows);\n        inHandler = false;\n      }\n    }\n\n    grid.onSelectedRowsChanged.subscribe(function (e, args) {\n      if (inHandler) {\n        return;\n      }\n      var newSelectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\n      if (!preserveHiddenOnSelectionChange || !grid.getOptions().multiSelect) {\n        setSelectedRowIds(newSelectedRowIds);\n      } else {\n        // keep the ones that are hidden\n        var existing = _jquery2.default.grep(selectedRowIds, function (id) {\n          return self.getRowById(id) === undefined;\n        });\n        // add the newly selected ones\n        setSelectedRowIds(existing.concat(newSelectedRowIds));\n      }\n    });\n\n    this.onRowsChanged.subscribe(update);\n\n    this.onRowCountChanged.subscribe(update);\n\n    return onSelectedRowIdsChanged;\n  }\n\n  function syncGridCellCssStyles(grid, key) {\n    var hashById = void 0;\n    var inHandler = void 0;\n\n    // since this method can be called after the cell styles have been set,\n    // get the existing ones right away\n    storeCellCssStyles(grid.getCellCssStyles(key));\n\n    function storeCellCssStyles(hash) {\n      hashById = {};\n      for (var row in hash) {\n        var id = rows[row][idProperty];\n        hashById[id] = hash[row];\n      }\n    }\n\n    function update() {\n      if (hashById) {\n        inHandler = true;\n        ensureRowsByIdCache();\n        var newHash = {};\n        for (var id in hashById) {\n          var row = rowsById[id];\n          if (row != undefined) {\n            newHash[row] = hashById[id];\n          }\n        }\n        grid.setCellCssStyles(key, newHash);\n        inHandler = false;\n      }\n    }\n\n    grid.onCellCssStylesChanged.subscribe(function (e, args) {\n      if (inHandler) {\n        return;\n      }\n      if (key != args.key) {\n        return;\n      }\n      if (args.hash) {\n        storeCellCssStyles(args.hash);\n      }\n    });\n\n    this.onRowsChanged.subscribe(update);\n\n    this.onRowCountChanged.subscribe(update);\n  }\n\n  _jquery2.default.extend(this, {\n    // methods\n    'beginUpdate': beginUpdate,\n    'endUpdate': endUpdate,\n    'setPagingOptions': setPagingOptions,\n    'getPagingInfo': getPagingInfo,\n    'getItems': getItems,\n    'setItems': setItems,\n    'setFilter': setFilter,\n    'sort': sort,\n    'fastSort': fastSort,\n    'reSort': reSort,\n    'setGrouping': setGrouping,\n    'getGrouping': getGrouping,\n    'groupBy': groupBy,\n    'setAggregators': setAggregators,\n    'collapseAllGroups': collapseAllGroups,\n    'expandAllGroups': expandAllGroups,\n    'collapseGroup': collapseGroup,\n    'expandGroup': expandGroup,\n    'getGroups': getGroups,\n    'getIdxById': getIdxById,\n    'getRowById': getRowById,\n    'getItemById': getItemById,\n    'getItemByIdx': getItemByIdx,\n    'mapRowsToIds': mapRowsToIds,\n    'mapIdsToRows': mapIdsToRows,\n    'setRefreshHints': setRefreshHints,\n    'setFilterArgs': setFilterArgs,\n    'refresh': refresh,\n    'updateItem': updateItem,\n    'insertItem': insertItem,\n    'addItem': addItem,\n    'deleteItem': deleteItem,\n    'syncGridSelection': syncGridSelection,\n    'syncGridCellCssStyles': syncGridCellCssStyles,\n\n    // data provider methods\n    'getLength': getLength,\n    'getItem': getItem,\n    'getItemMetadata': getItemMetadata,\n\n    // events\n    'onRowCountChanged': onRowCountChanged,\n    'onRowsChanged': onRowsChanged,\n    'onPagingInfoChanged': onPagingInfoChanged\n  });\n}\n\nfunction AvgAggregator(field) {\n  this.field_ = field;\n\n  this.init = function () {\n    this.count_ = 0;\n    this.nonNullCount_ = 0;\n    this.sum_ = 0;\n  };\n\n  this.accumulate = function (item) {\n    var val = item[this.field_];\n    this.count_++;\n    if (val != null && val !== '' && !isNaN(val)) {\n      this.nonNullCount_++;\n      this.sum_ += parseFloat(val);\n    }\n  };\n\n  this.storeResult = function (groupTotals) {\n    if (!groupTotals.avg) {\n      groupTotals.avg = {};\n    }\n    if (this.nonNullCount_ != 0) {\n      groupTotals.avg[this.field_] = this.sum_ / this.nonNullCount_;\n    }\n  };\n}\n\nfunction MinAggregator(field) {\n  this.field_ = field;\n\n  this.init = function () {\n    this.min_ = null;\n  };\n\n  this.accumulate = function (item) {\n    var val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)) {\n      if (this.min_ == null || val < this.min_) {\n        this.min_ = val;\n      }\n    }\n  };\n\n  this.storeResult = function (groupTotals) {\n    if (!groupTotals.min) {\n      groupTotals.min = {};\n    }\n    groupTotals.min[this.field_] = this.min_;\n  };\n}\n\nfunction MaxAggregator(field) {\n  this.field_ = field;\n\n  this.init = function () {\n    this.max_ = null;\n  };\n\n  this.accumulate = function (item) {\n    var val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)) {\n      if (this.max_ == null || val > this.max_) {\n        this.max_ = val;\n      }\n    }\n  };\n\n  this.storeResult = function (groupTotals) {\n    if (!groupTotals.max) {\n      groupTotals.max = {};\n    }\n    groupTotals.max[this.field_] = this.max_;\n  };\n}\n\nfunction SumAggregator(field) {\n  this.field_ = field;\n\n  this.init = function () {\n    this.sum_ = null;\n  };\n\n  this.accumulate = function (item) {\n    var val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)) {\n      this.sum_ += parseFloat(val);\n    }\n  };\n\n  this.storeResult = function (groupTotals) {\n    if (!groupTotals.sum) {\n      groupTotals.sum = {};\n    }\n    groupTotals.sum[this.field_] = this.sum_;\n  };\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = GroupItemMetadataProvider;\n\n/***\n * Provides item metadata for group (Slick.Group) and totals (Slick.Totals) rows produced by the DataView.\n * This metadata overrides the default behavior and formatting of those rows so that they appear and function\n * correctly when processed by the grid.\n *\n * This class also acts as a grid plugin providing event handlers to expand & collapse groups.\n * If \"grid.registerPlugin(...)\" is not called, expand & collapse will not work.\n *\n * @class GroupItemMetadataProvider\n * @module Data\n * @namespace Slick.Data\n * @constructor\n * @param options\n */\n\nfunction GroupItemMetadataProvider(options) {\n  var _grid = void 0;\n  var _defaults = {\n    groupCssClass: \"slick-group\",\n    groupTitleCssClass: \"slick-group-title\",\n    totalsCssClass: \"slick-group-totals\",\n    groupFocusable: true,\n    totalsFocusable: false,\n    toggleCssClass: \"slick-group-toggle\",\n    toggleExpandedCssClass: \"expanded\",\n    toggleCollapsedCssClass: \"collapsed\",\n    enableExpandCollapse: true,\n    groupFormatter: defaultGroupCellFormatter,\n    totalsFormatter: defaultTotalsCellFormatter\n  };\n\n  options = _jquery2.default.extend(true, {}, _defaults, options);\n\n  function defaultGroupCellFormatter(row, cell, value, columnDef, item) {\n    if (!options.enableExpandCollapse) {\n      return item.title;\n    }\n\n    var indentation = item.level * 15 + \"px\";\n\n    return \"<span class='\" + options.toggleCssClass + \" \" + (item.collapsed ? options.toggleCollapsedCssClass : options.toggleExpandedCssClass) + \"' style='margin-left:\" + indentation + \"'>\" + \"</span>\" + \"<span class='\" + options.groupTitleCssClass + \"' level='\" + item.level + \"'>\" + item.title + \"</span>\";\n  }\n\n  function defaultTotalsCellFormatter(row, cell, value, columnDef, item) {\n    return columnDef.groupTotalsFormatter && columnDef.groupTotalsFormatter(item, columnDef) || \"\";\n  }\n\n  function init(grid) {\n    _grid = grid;\n    _grid.onClick.subscribe(handleGridClick);\n    _grid.onKeyDown.subscribe(handleGridKeyDown);\n  }\n\n  function destroy() {\n    if (_grid) {\n      _grid.onClick.unsubscribe(handleGridClick);\n      _grid.onKeyDown.unsubscribe(handleGridKeyDown);\n    }\n  }\n\n  function handleGridClick(e, args) {\n    var item = this.getDataItem(args.row);\n    if (item && item instanceof _slick2.default.Group && (0, _jquery2.default)(e.target).hasClass(options.toggleCssClass)) {\n      var range = _grid.getRenderedRange();\n      this.getData().setRefreshHints({\n        ignoreDiffsBefore: range.top,\n        ignoreDiffsAfter: range.bottom + 1\n      });\n\n      if (item.collapsed) {\n        this.getData().expandGroup(item.groupingKey);\n      } else {\n        this.getData().collapseGroup(item.groupingKey);\n      }\n\n      e.stopImmediatePropagation();\n      e.preventDefault();\n    }\n  }\n\n  // TODO:  add -/+ handling\n  function handleGridKeyDown(e) {\n    if (options.enableExpandCollapse && e.which == _slick2.default.keyCode.SPACE) {\n      var activeCell = this.getActiveCell();\n      if (activeCell) {\n        var item = this.getDataItem(activeCell.row);\n        if (item && item instanceof _slick2.default.Group) {\n          var range = _grid.getRenderedRange();\n          this.getData().setRefreshHints({\n            ignoreDiffsBefore: range.top,\n            ignoreDiffsAfter: range.bottom + 1\n          });\n\n          if (item.collapsed) {\n            this.getData().expandGroup(item.groupingKey);\n          } else {\n            this.getData().collapseGroup(item.groupingKey);\n          }\n\n          e.stopImmediatePropagation();\n          e.preventDefault();\n        }\n      }\n    }\n  }\n\n  function getGroupRowMetadata(item) {\n    return {\n      selectable: false,\n      focusable: options.groupFocusable,\n      cssClasses: options.groupCssClass,\n      columns: {\n        0: {\n          colspan: \"*\",\n          formatter: options.groupFormatter,\n          editor: null\n        }\n      }\n    };\n  }\n\n  function getTotalsRowMetadata(item) {\n    return {\n      selectable: false,\n      focusable: options.totalsFocusable,\n      cssClasses: options.totalsCssClass,\n      formatter: options.totalsFormatter,\n      editor: null\n    };\n  }\n\n  return {\n    init: init,\n    destroy: destroy,\n    getGroupRowMetadata: getGroupRowMetadata,\n    getTotalsRowMetadata: getTotalsRowMetadata\n  };\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _interactjs = __webpack_require__(2);\n\nvar _interactjs2 = _interopRequireDefault(_interactjs);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Slick.Grid globals pretense\n_slick2.default.Grid = SlickGrid; /**\n                                   * @license\n                                   * (c) 2009-2013 Michael Leibman\n                                   * michael{dot}leibman{at}gmail{dot}com\n                                   * http://github.com/mleibman/slickgrid\n                                   *\n                                   * Distributed under MIT license.\n                                   * All rights reserved.\n                                   *\n                                   * SlickGrid v2.2\n                                   *\n                                   * NOTES:\n                                   *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n                                   *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n                                   *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n                                   *     and do proper cleanup.\n                                   */\n\nexports.default = SlickGrid;\n\n// shared across all grids on the page\n\nvar scrollbarDimensions;\nvar maxSupportedCssHeight; // browser's breaking point\n\n// ////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\nfunction SlickGrid(container, data, columns, options) {\n  // settings\n  var defaults = {\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    enableAsyncPostRenderCleanup: false,\n    asyncPostRenderCleanupDelay: 40,\n    autoHeight: false,\n    editorLock: _slick2.default.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    createFooterRow: false,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: 'flashing',\n    selectedCellCssClass: 'selected',\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: 'new-row'\n  };\n\n  var columnDefaults = {\n    name: '',\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  };\n\n  // scroller\n  var th; // virtual height\n  var h; // real scrollable height\n  var ph; // page height\n  var n; // number of pages\n  var cj; // \"jumpiness\" coefficient\n\n  var page = 0; // current page\n  var offset = 0; // current page offset\n  var vScrollDir = 1;\n\n  // private\n  var initialized = false;\n  var $container;\n  var uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n  var self = this;\n  var $focusSink, $focusSink2;\n  var $headerScroller;\n  var $headers;\n  var $headerRow, $headerRowScroller, $headerRowSpacer;\n  var $footerRow, $footerRowScroller, $footerRowSpacer;\n  var $topPanelScroller;\n  var $topPanel;\n  var $viewport;\n  var $canvas;\n  var $style;\n  var $boundAncestors;\n  var stylesheet, columnCssRulesL, columnCssRulesR;\n  var viewportH, viewportW;\n  var canvasWidth;\n  var viewportHasHScroll, viewportHasVScroll;\n  var headerColumnWidthDiff = 0,\n      headerColumnHeightDiff = 0,\n      // border+padding\n  cellWidthDiff = 0,\n      cellHeightDiff = 0,\n      jQueryNewWidthBehaviour = false;\n  var absoluteColumnMinWidth;\n\n  var tabbingDirection = 1;\n  var activePosX;\n  var activeRow, activeCell;\n  var activeCellNode = null;\n  var currentEditor = null;\n  var serializedEditorValue;\n  var editController;\n\n  var rowsCache = {};\n  var renderedRows = 0;\n  var numVisibleRows;\n  var prevScrollTop = 0;\n  var scrollTop = 0;\n  var lastRenderedScrollTop = 0;\n  var lastRenderedScrollLeft = 0;\n  var prevScrollLeft = 0;\n  var scrollLeft = 0;\n\n  var selectionModel;\n  var selectedRows = [];\n\n  var plugins = [];\n  var cellCssClasses = {};\n\n  var columnsById = {};\n  var sortColumns = [];\n  var columnPosLeft = [];\n  var columnPosRight = [];\n\n  // async call handles\n  var h_editorLoader = null;\n  var h_render = null;\n  var h_postrender = null;\n  var h_postrenderCleanup = null;\n  var postProcessedRows = {};\n  var postProcessToRow = null;\n  var postProcessFromRow = null;\n  var postProcessedCleanupQueue = [];\n  var postProcessgroupId = 0;\n\n  // perf counters\n  var counter_rows_rendered = 0;\n  var counter_rows_removed = 0;\n\n  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n  var rowNodeFromLastMouseWheelEvent; // this node must not be deleted while inertial scrolling\n  var zombieRowNodeFromLastMouseWheelEvent; // node that was hidden instead of getting deleted\n  var zombieRowCacheFromLastMouseWheelEvent; // row cache for above node\n  var zombieRowPostProcessedFromLastMouseWheelEvent; // post processing references for above node\n\n  // store css attributes if display:none is active in container or parent\n  var cssShow = { position: 'absolute', visibility: 'hidden', display: 'block' };\n  var $hiddenParents;\n  var oldProps = [];\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init() {\n    $container = (0, _jquery2.default)(container);\n    if ($container.length < 1) {\n      throw new Error('SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.');\n    }\n\n    cacheCssForHiddenInit();\n\n    // calculate these only once and share between grid instances\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n    options = _jquery2.default.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    editController = {\n      'commitCurrentEdit': commitCurrentEdit,\n      'cancelCurrentEdit': cancelCurrentEdit\n    };\n\n    $container.empty().css('overflow', 'hidden').css('outline', 0).addClass(uid).addClass('ui-widget');\n\n    // set up a positioning container if needed\n    if (!/relative|absolute|fixed/.test($container.css('position'))) {\n      $container.css('position', 'relative');\n    }\n\n    $focusSink = (0, _jquery2.default)(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n    $headerScroller = (0, _jquery2.default)(\"<div class='slick-header ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $headers = (0, _jquery2.default)(\"<div class='slick-header-columns' />\").appendTo($headerScroller);\n    $headers.width(getHeadersWidth());\n\n    $headerRowScroller = (0, _jquery2.default)(\"<div class='slick-headerrow ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $headerRow = (0, _jquery2.default)(\"<div class='slick-headerrow-columns' />\").appendTo($headerRowScroller);\n    $headerRowSpacer = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($headerRowScroller);\n\n    $topPanelScroller = (0, _jquery2.default)(\"<div class='slick-top-panel-scroller ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $topPanel = (0, _jquery2.default)(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScroller);\n\n    if (!options.showTopPanel) {\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow) {\n      $headerRowScroller.hide();\n    }\n\n    $viewport = (0, _jquery2.default)(\"<div class='slick-viewport' style='width:100%;overflow:auto;outline:0;position:relative;;'>\").appendTo($container);\n    $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n\n    $canvas = (0, _jquery2.default)(\"<div class='grid-canvas' />\").appendTo($viewport);\n\n    if (options.createFooterRow) {\n      $footerRowScroller = (0, _jquery2.default)(\"<div class='slick-footerrow ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n      $footerRow = (0, _jquery2.default)(\"<div class='slick-footerrow-columns' />\").appendTo($footerRowScroller);\n      $footerRowSpacer = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($footerRowScroller);\n\n      if (!options.showFooterRow) {\n        $footerRowScroller.hide();\n      }\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization) {\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization() {\n    if (!initialized) {\n      initialized = true;\n\n      viewportW = parseFloat(_jquery2.default.css($container[0], 'width', true));\n\n      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n      measureCellPaddingAndBorder();\n\n      // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells) {\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.bind('selectstart.ui', function (event) {\n          return (0, _jquery2.default)(event.target).is('input,textarea');\n        });\n      }\n\n      updateColumnCaches();\n      createColumnHeaders();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n\n      $container.bind('resize.slickgrid', resizeCanvas);\n      $viewport\n      // .bind(\"click\", handleClick)\n      .bind('scroll', handleScroll);\n      $headerScroller.bind('contextmenu', handleHeaderContextMenu).bind('click', handleHeaderClick).delegate('.slick-header-column', 'mouseenter', handleHeaderMouseEnter).delegate('.slick-header-column', 'mouseleave', handleHeaderMouseLeave);\n      $headerRowScroller.bind('scroll', handleHeaderRowScroll);\n\n      if (options.createFooterRow) {\n        $footerRowScroller.bind('scroll', handleFooterRowScroll);\n      }\n\n      $focusSink.add($focusSink2).bind('keydown', handleKeyDown);\n      $canvas.bind('keydown', handleKeyDown).bind('click', handleClick).bind('dblclick', handleDblClick).bind('contextmenu', handleContextMenu).delegate('.slick-cell', 'mouseenter', handleMouseEnter).delegate('.slick-cell', 'mouseleave', handleMouseLeave);\n\n      // legacy support for drag events\n      (0, _interactjs2.default)($canvas[0]).allowFrom('div.slick-cell').draggable({\n        onmove: handleDrag,\n        onstart: handleDragStart,\n        onend: handleDragEnd\n      }).styleCursor(false);\n\n      // Work around http://crbug.com/312427.\n      if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n        $canvas.bind('mousewheel', handleMouseWheel);\n      }\n      restoreCssFromHiddenInit();\n    }\n  }\n\n  function cacheCssForHiddenInit() {\n    // handle display:none on container or container parents\n    $hiddenParents = $container.parents().addBack().not(':visible');\n    $hiddenParents.each(function () {\n      var old = {};\n      for (var name in cssShow) {\n        old[name] = this.style[name];\n        this.style[name] = cssShow[name];\n      }\n      oldProps.push(old);\n    });\n  }\n\n  function restoreCssFromHiddenInit() {\n    // finish handle display:none on container or container parents\n    // - put values back the way they were\n    $hiddenParents.each(function (i) {\n      var old = oldProps[i];\n      for (var name in cssShow) {\n        this.style[name] = old[name];\n      }\n    });\n  }\n\n  function registerPlugin(plugin) {\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin) {\n    for (var i = plugins.length; i >= 0; i--) {\n      if (plugins[i] === plugin) {\n        if (plugins[i].destroy) {\n          plugins[i].destroy();\n        }\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model) {\n    if (selectionModel) {\n      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n      if (selectionModel.destroy) {\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n    if (selectionModel) {\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n    }\n  }\n\n  function getSelectionModel() {\n    return selectionModel;\n  }\n\n  function getCanvasNode() {\n    return $canvas[0];\n  }\n\n  function measureScrollbar() {\n    var $c = (0, _jquery2.default)(\"<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\").appendTo('body');\n    var dim = {\n      width: $c.width() - $c[0].clientWidth,\n      height: $c.height() - $c[0].clientHeight\n    };\n    $c.remove();\n    return dim;\n  }\n\n  function getHeadersWidth() {\n    var headersWidth = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      var width = columns[i].width;\n      headersWidth += width;\n    }\n    headersWidth += scrollbarDimensions.width;\n    return Math.max(headersWidth, viewportW) + 1000;\n  }\n\n  function getCanvasWidth() {\n    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n    var rowWidth = 0;\n    var i = columns.length;\n    while (i--) {\n      rowWidth += columns[i].width;\n    }\n    return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate) {\n    var oldCanvasWidth = canvasWidth;\n    canvasWidth = getCanvasWidth();\n\n    if (canvasWidth != oldCanvasWidth) {\n      $canvas.width(canvasWidth);\n      $headerRow.width(canvasWidth);\n      if (options.createFooterRow) {\n        $footerRow.width(canvasWidth);\n      }\n      $headers.width(getHeadersWidth());\n      viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n    }\n\n    var w = canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n    $headerRowSpacer.width(w);\n    if (options.createFooterRow) {\n      $footerRowSpacer.width(w);\n    }\n\n    if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate) {\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target) {\n    if ($target && $target.jquery) {\n      $target.attr('unselectable', 'on').css('MozUserSelect', 'none').bind('selectstart.ui', function () {\n        return false;\n      }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight() {\n    var supportedHeight = 1000000;\n    // FF reports the height back but still renders blank after ~6M px\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n    var div = (0, _jquery2.default)(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true) {\n      var test = supportedHeight * 2;\n      div.css('height', test);\n      if (test > testUpTo || div.height() !== test) {\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  // TODO:  this is static.  need to handle page mutation.\n  function bindAncestorScrollEvents() {\n    var elem = $canvas[0];\n    while ((elem = elem.parentNode) != document.body && elem != null) {\n      // bind to scroll containers only\n      if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n        var $elem = (0, _jquery2.default)(elem);\n        if (!$boundAncestors) {\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n        $elem.bind('scroll.' + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents() {\n    if (!$boundAncestors) {\n      return;\n    }\n    $boundAncestors.unbind('scroll.' + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip) {\n    if (!initialized) {\n      return;\n    }\n    var idx = getColumnIndex(columnId);\n    if (idx == null) {\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n    if ($header) {\n      if (title !== undefined) {\n        columns[idx].name = title;\n      }\n      if (toolTip !== undefined) {\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        'node': $header[0],\n        'column': columnDef,\n        'grid': self\n      });\n\n      $header.attr('title', toolTip || '').children().eq(0).html(title);\n\n      trigger(self.onHeaderCellRendered, {\n        'node': $header[0],\n        'column': columnDef,\n        'grid': self\n      });\n    }\n  }\n\n  function getHeaderRow() {\n    return $headerRow[0];\n  }\n\n  function getFooterRow() {\n    return $footerRow[0];\n  }\n\n  function getHeaderRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n    var $header = $headerRow.children().eq(idx);\n    return $header && $header[0];\n  }\n\n  function getFooterRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n    var $footer = $footerRow.children().eq(idx);\n    return $footer && $footer[0];\n  }\n\n  function createColumnHeaders() {\n    function onMouseEnter() {\n      (0, _jquery2.default)(this).addClass('ui-state-hover');\n    }\n\n    function onMouseLeave() {\n      (0, _jquery2.default)(this).removeClass('ui-state-hover');\n    }\n\n    $headers.find('.slick-header-column').each(function () {\n      var columnDef = (0, _jquery2.default)(this).data('column');\n      if (columnDef) {\n        trigger(self.onBeforeHeaderCellDestroy, {\n          'node': this,\n          'column': columnDef,\n          'grid': self\n        });\n      }\n    });\n    $headers.empty();\n    $headers.width(getHeadersWidth());\n\n    $headerRow.find('.slick-headerrow-column').each(function () {\n      var columnDef = (0, _jquery2.default)(this).data('column');\n      if (columnDef) {\n        trigger(self.onBeforeHeaderRowCellDestroy, {\n          'node': this,\n          'column': columnDef,\n          'grid': self\n        });\n      }\n    });\n    $headerRow.empty();\n\n    if (options.createFooterRow) {\n      $footerRow.find('.slick-footerrow-column').each(function () {\n        var columnDef = (0, _jquery2.default)(this).data('column');\n        if (columnDef) {\n          trigger(self.onBeforeFooterRowCellDestroy, {\n            'node': this,\n            'column': columnDef\n          });\n        }\n      });\n      $footerRow.empty();\n    }\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i];\n\n      var header = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' />\").html(\"<span class='slick-column-name'>\" + m.name + '</span>').width(m.width - headerColumnWidthDiff).attr('id', '' + uid + m.id).attr('title', m.toolTip || '').data('column', m).addClass(m.headerCssClass || '').appendTo($headers);\n\n      if (options.enableColumnReorder || m.sortable) {\n        header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable) {\n        header.addClass('slick-header-sortable');\n        header.append(\"<span class='slick-sort-indicator' />\");\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        'node': header[0],\n        'column': m,\n        'grid': self\n      });\n\n      if (options.showHeaderRow) {\n        var headerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow-column l\" + i + ' r' + i + \"'></div>\").data('column', m).appendTo($headerRow);\n\n        trigger(self.onHeaderRowCellRendered, {\n          'node': headerRowCell[0],\n          'column': m,\n          'grid': self\n        });\n      }\n      if (options.createFooterRow && options.showFooterRow) {\n        var footerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow-column l\" + i + ' r' + i + \"'></div>\").data('column', m).appendTo($footerRow);\n\n        trigger(self.onFooterRowCellRendered, {\n          'node': footerRowCell[0],\n          'column': m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n    if (options.enableColumnReorder) {\n      setupColumnReorder();\n    }\n  }\n\n  function setupColumnSort() {\n    $headers.click(function (e) {\n      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ((0, _jquery2.default)(e.target).hasClass('slick-resizable-handle')) {\n        return;\n      }\n\n      var $col = (0, _jquery2.default)(e.target).closest('.slick-header-column');\n      if (!$col.length) {\n        return;\n      }\n\n      var column = $col.data('column');\n      if (column.sortable) {\n        if (!getEditorLock().commitCurrentEdit()) {\n          return;\n        }\n\n        var sortOpts = null;\n        var i = 0;\n        for (; i < sortColumns.length; i++) {\n          if (sortColumns[i].columnId == column.id) {\n            sortOpts = sortColumns[i];\n            sortOpts.sortAsc = !sortOpts.sortAsc;\n            break;\n          }\n        }\n\n        if (e.metaKey && options.multiColumnSort) {\n          if (sortOpts) {\n            sortColumns.splice(i, 1);\n          }\n        } else {\n          if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n            sortColumns = [];\n          }\n\n          if (!sortOpts) {\n            sortOpts = { columnId: column.id, sortAsc: column.defaultSortAsc };\n            sortColumns.push(sortOpts);\n          } else if (sortColumns.length == 0) {\n            sortColumns.push(sortOpts);\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort) {\n          trigger(self.onSort, {\n            multiColumnSort: false,\n            sortCol: column,\n            sortAsc: sortOpts.sortAsc,\n            grid: self\n          }, e);\n        } else {\n          trigger(self.onSort, {\n            multiColumnSort: true,\n            sortCols: _jquery2.default.map(sortColumns, function (col) {\n              return { sortCol: columns[getColumnIndex(col.columnId)], sortAsc: col.sortAsc };\n            }),\n            grid: self\n          }, e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Refactored to use interactjs\n   */\n  function setupColumnReorder() {\n    var x = 0;\n    var delta = 0;\n    var placeholder = document.createElement('div');\n\n    placeholder.className = 'interact-placeholder';\n\n    (0, _interactjs2.default)('.slick-header-column').ignoreFrom('.slick-resizable-handle').draggable({\n      inertia: true,\n      // keep the element within the area of it's parent\n      restrict: {\n        restriction: 'parent',\n        endOnly: true,\n        elementRect: { top: 0, left: 0, bottom: 0, right: 0 }\n      },\n      // enable autoScroll\n      autoScroll: true,\n      axis: 'x',\n      onstart: function onstart(event) {\n        x = 0;\n        delta = event.target.offsetWidth;\n\n        // get old order\n        $headers.find('.slick-header-column').each(function (index) {\n          (0, _jquery2.default)(this).data('index', index);\n        });\n\n        placeholder.style.height = event.target.offsetHeight + 'px';\n        placeholder.style.width = delta + 'px';\n\n        (0, _jquery2.default)(event.target).after(placeholder).css({\n          position: 'absolute',\n          zIndex: 1000,\n          marginLeft: (0, _jquery2.default)(event.target).position().left\n        });\n      },\n\n      onmove: function onmove(event) {\n        x += event.dx;\n        event.target.style.transform = 'translate3d(' + x + 'px, -3px, 100px)';\n        // event.target.style.marginLeft = x + 'px';\n      },\n\n      onend: function onend(event) {\n        x = 0;\n        delta = 0;\n        (0, _jquery2.default)(event.target).css({\n          position: 'relative',\n          zIndex: '',\n          marginLeft: 0,\n          transform: 'none'\n        });\n\n        placeholder.parentNode.removeChild(placeholder);\n        var newColumns = [];\n\n        $headers.find('.slick-header-column').each(function (index) {\n          newColumns.push(columns[(0, _jquery2.default)(this).data('index')]);\n          (0, _jquery2.default)(this).removeData('index');\n        });\n\n        setColumns(newColumns);\n        trigger(self.onColumnsReordered, { grid: self });\n        setupColumnResize();\n      }\n    }).dropzone({\n      accept: '.slick-header-column',\n\n      ondragenter: function ondragenter(event) {\n        event.target.classList.add('interact-drop-active');\n        event.relatedTarget.classList.add('interact-can-drop');\n      },\n\n      ondragleave: function ondragleave(event) {\n        event.target.classList.remove('interact-drop-active');\n        event.relatedTarget.classList.remove('interact-can-drop');\n      },\n\n      ondrop: function ondrop(event) {\n        event.target.classList.remove('interact-drop-active');\n        event.relatedTarget.classList.remove('interact-can-drop');\n        (0, _jquery2.default)(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n      }\n    }).styleCursor(false);\n  }\n\n  function setupColumnResize() {\n    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n    columnElements = $headers.children();\n    columnElements.find('.slick-resizable-handle').remove();\n    columnElements.each(function (i, e) {\n      if (columns[i].resizable) {\n        if (firstResizable === undefined) {\n          firstResizable = i;\n        }\n        lastResizable = i;\n      }\n    });\n    if (firstResizable === undefined) {\n      return;\n    }\n    columnElements.each(function (i, element) {\n      if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n        return;\n      }\n      $col = (0, _jquery2.default)(element);\n\n      var $handle = (0, _jquery2.default)(\"<div class='slick-resizable-handle' />\");\n      $handle.appendTo(element);\n\n      if ($col.data('resizable')) return;\n\n      var activeColumn = columns[i];\n      if (activeColumn.resizable) {\n        $col.data('resizable', true);\n        (0, _interactjs2.default)(element).resizable({\n          preserveAspectRatio: false,\n          edges: { left: true, right: true, bottom: false, top: false }\n        }).on('resizestart', function (event) {\n          if (!getEditorLock().commitCurrentEdit()) {\n            return false;\n          }\n          activeColumn.previousWidth = event.rect.width;\n          event.target.classList.add('slick-header-column-active');\n        }).on('resizemove', function (event) {\n          var x = event.dx;\n          var width = activeColumn.width += x;\n\n          if (activeColumn.minWidth > 0 && activeColumn.minWidth > width) width = activeColumn.minWidth;else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width) width = activeColumn.maxWidth;\n\n          activeColumn.width = width;\n\n          if (options.forceFitColumns) {\n            autosizeColumns();\n          }\n          applyColumnHeaderWidths();\n          if (options.syncColumnCellResize) {\n            applyColumnWidths();\n          }\n        }).on('resizeend', function (event) {\n          event.target.classList.remove('slick-header-column-active');\n          invalidateAllRows();\n          updateCanvasWidth(true);\n          render();\n          trigger(self.onColumnsResized, { grid: self });\n        });\n      }\n    });\n  }\n\n  function getVBoxDelta($el) {\n    var p = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n    var delta = 0;\n    _jquery2.default.each(p, function (n, val) {\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function measureCellPaddingAndBorder() {\n    var el;\n    var h = ['borderLeftWidth', 'borderRightWidth', 'paddingLeft', 'paddingRight'];\n    var v = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n\n    // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n    // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n    // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n    var verArray = _jquery2.default.fn.jquery.split('.');\n    jQueryNewWidthBehaviour = verArray[0] == 1 && verArray[1] >= 8 || verArray[0] >= 2;\n\n    el = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n      _jquery2.default.each(h, function (n, val) {\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      _jquery2.default.each(v, function (n, val) {\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    el.remove();\n\n    var r = (0, _jquery2.default)(\"<div class='slick-row' />\").appendTo($canvas);\n    el = (0, _jquery2.default)(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n      _jquery2.default.each(h, function (n, val) {\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      _jquery2.default.each(v, function (n, val) {\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    r.remove();\n\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules() {\n    $style = (0, _jquery2.default)(\"<style type='text/css' rel='stylesheet' />\").appendTo((0, _jquery2.default)('head'));\n    var rowHeight = options.rowHeight - cellHeightDiff;\n    var rules = ['.' + uid + ' .slick-header-column { left: 0; }', '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }', '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }', '.' + uid + ' .slick-footerrow-columns { height:' + options.footerRowHeight + 'px; }', '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }', '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }'];\n\n    for (var i = 0; i < columns.length; i++) {\n      rules.push('.' + uid + ' .l' + i + ' { }');\n      rules.push('.' + uid + ' .r' + i + ' { }');\n    }\n\n    if ($style[0].styleSheet) {\n      // IE\n      $style[0].styleSheet.cssText = rules.join(' ');\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n    }\n  }\n\n  function getColumnCssRules(idx) {\n    if (!stylesheet) {\n      var sheets = document.styleSheets;\n      for (var i = 0; i < sheets.length; i++) {\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet) {\n        throw new Error('Cannot find stylesheet.');\n      }\n\n      // find and cache column CSS rules\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = stylesheet.cssRules || stylesheet.rules;\n      var matches, columnIdx;\n      for (var i = 0; i < cssRules.length; i++) {\n        var selector = cssRules[i].selectorText;\n        if (matches = /\\.l\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if (matches = /\\.r\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      'left': columnCssRulesL[idx],\n      'right': columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules() {\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy() {\n    getEditorLock().cancelCurrentEdit();\n\n    trigger(self.onBeforeDestroy, { grid: self });\n\n    var i = plugins.length;\n    while (i--) {\n      unregisterPlugin(plugins[i]);\n    }\n\n    unbindAncestorScrollEvents();\n    $container.unbind('.slickgrid');\n    removeCssRules();\n\n    $container.empty().removeClass(uid);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n  function trigger(evt, args, e) {\n    e = e || new _slick2.default.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock() {\n    return options.editorLock;\n  }\n\n  function getEditController() {\n    return editController;\n  }\n\n  function getColumnIndex(id) {\n    return columnsById[id];\n  }\n\n  function autosizeColumns() {\n    var i,\n        c,\n        widths = [],\n        shrinkLeeway = 0,\n        total = 0,\n        prevTotal,\n        availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    for (i = 0; i < columns.length; i++) {\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n      if (c.resizable) {\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    }\n\n    // shrink\n    prevTotal = total;\n    while (total > availWidth && shrinkLeeway) {\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n      for (i = 0; i < columns.length && total > availWidth; i++) {\n        c = columns[i];\n        var width = widths[i];\n        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n          continue;\n        }\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n      if (prevTotal <= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    // grow\n    prevTotal = total;\n    while (total < availWidth) {\n      var growProportion = availWidth / total;\n      for (i = 0; i < columns.length && total < availWidth; i++) {\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth) {\n          growSize = 0;\n        } else {\n          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n        }\n        total += growSize;\n        widths[i] += total <= availWidth ? growSize : 0;\n      }\n      if (prevTotal >= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    var reRender = false;\n    for (i = 0; i < columns.length; i++) {\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n        reRender = true;\n      }\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    updateCanvasWidth(true);\n    if (reRender) {\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnHeaderWidths() {\n    if (!initialized) {\n      return;\n    }\n    var h;\n    for (var i = 0, headers = $headers.children('[id]'), ii = headers.length; i < ii; i++) {\n      h = (0, _jquery2.default)(headers[i]);\n      if (jQueryNewWidthBehaviour) {\n        if (h.outerWidth() !== columns[i].width) {\n          h.outerWidth(columns[i].width);\n        }\n      } else {\n        if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n          h.width(columns[i].width - headerColumnWidthDiff);\n        }\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths() {\n    var x = 0,\n        w,\n        rule;\n    for (var i = 0; i < columns.length; i++) {\n      w = columns[i].width;\n\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + 'px';\n      rule.right.style.right = canvasWidth - x - w + 'px';\n\n      x += columns[i].width;\n    }\n  }\n\n  function setSortColumn(columnId, ascending) {\n    setSortColumns([{ columnId: columnId, sortAsc: ascending }]);\n  }\n\n  function setSortColumns(cols) {\n    sortColumns = cols;\n\n    var headerColumnEls = $headers.children();\n    headerColumnEls.removeClass('slick-header-column-sorted').find('.slick-sort-indicator').removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n\n    _jquery2.default.each(sortColumns, function (i, col) {\n      if (col.sortAsc == null) {\n        col.sortAsc = true;\n      }\n      var columnIndex = getColumnIndex(col.columnId);\n      if (columnIndex != null) {\n        headerColumnEls.eq(columnIndex).addClass('slick-header-column-sorted').find('.slick-sort-indicator').addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc');\n      }\n    });\n  }\n\n  function getSortColumns() {\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges) {\n    selectedRows = [];\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        if (!hash[j]) {\n          // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n          if (canCellBeSelected(j, k)) {\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n\n    trigger(self.onSelectedRowsChanged, { rows: getSelectedRows(), grid: self }, e);\n  }\n\n  function getColumns() {\n    return columns;\n  }\n\n  function updateColumnCaches() {\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n      x += columns[i].width;\n    }\n  }\n\n  function setColumns(columnDefinitions) {\n    columns = columnDefinitions;\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized) {\n      invalidateAllRows();\n      createColumnHeaders();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions() {\n    return options;\n  }\n\n  function setOptions(args) {\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow) {\n      invalidateRow(getDataLength());\n    }\n\n    options = _jquery2.default.extend(options, args);\n    validateAndEnforceOptions();\n\n    $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n    render();\n  }\n\n  function validateAndEnforceOptions() {\n    if (options.autoHeight) {\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop) {\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n    if (scrollToTop) {\n      scrollTo(0);\n    }\n  }\n\n  function getData() {\n    return data;\n  }\n\n  function getDataLength() {\n    if (data.getLength) {\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew() {\n    return getDataLength() + (options.enableAddRow ? 1 : 0);\n  }\n\n  function getDataItem(i) {\n    if (data.getItem) {\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel() {\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible) {\n    if (options.showTopPanel != visible) {\n      options.showTopPanel = visible;\n      if (visible) {\n        $topPanelScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible) {\n    if (options.showHeaderRow != visible) {\n      options.showHeaderRow = visible;\n      if (visible) {\n        $headerRowScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible) {\n    if (options.showFooterRow != visible) {\n      options.showFooterRow = visible;\n      if (visible) {\n        $footerRowScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $footerRowScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode() {\n    return $container.get(0);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n  function getRowTop(row) {\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y) {\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y) {\n    y = Math.max(y, 0);\n    y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n\n    var oldOffset = offset;\n\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset) {\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop) {\n      vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n      $viewport[0].scrollTop = lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n\n      trigger(self.onViewportChanged, { grid: self });\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext) {\n    if (value == null) {\n      return '';\n    } else {\n      return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n  }\n\n  function getFormatter(row, column) {\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    // look up by id, then index\n    var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\n    return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n  }\n\n  function getEditor(row, cell) {\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n      return columnMetadata[column.id].editor;\n    }\n    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n      return columnMetadata[cell].editor;\n    }\n\n    return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n  }\n\n  function getDataItemValueForColumn(item, columnDef) {\n    if (options.dataItemColumnValueExtractor) {\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArray, row, range, dataLength) {\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss = 'slick-row' + (dataLoading ? ' loading' : '') + (row === activeRow ? ' active' : '') + (row % 2 == 1 ? ' odd' : ' even');\n\n    if (!d) {\n      rowCss += ' ' + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses) {\n      rowCss += ' ' + metadata.cssClasses;\n    }\n\n    stringArray.push(\"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + getRowTop(row) + \"px'>\");\n\n    var colspan, m;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      m = columns[i];\n      colspan = 1;\n      if (metadata && metadata.columns) {\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = columnData && columnData.colspan || 1;\n        if (colspan === '*') {\n          colspan = ii - i;\n        }\n      }\n\n      // Do not render cells outside of the viewport.\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n        if (columnPosLeft[i] > range.rightPx) {\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        appendCellHtml(stringArray, row, i, colspan, d);\n      }\n\n      if (colspan > 1) {\n        i += colspan - 1;\n      }\n    }\n\n    stringArray.push('</div>');\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item) {\n    // stringArray: stringBuilder containing the HTML parts\n    // row, cell: row and column index\n    // colspan: HTML colspan\n    // item: grid data for row\n\n    var m = columns[cell];\n    var cellCss = 'slick-cell l' + cell + ' r' + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? ' ' + m.cssClass : '');\n    if (row === activeRow && cell === activeCell) {\n      cellCss += ' active';\n    }\n\n    // TODO:  merge them together in the setter\n    for (var key in cellCssClasses) {\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n        cellCss += ' ' + cellCssClasses[key][row][m.id];\n      }\n    }\n\n    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\n    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n    if (item) {\n      var value = getDataItemValueForColumn(item, m);\n      stringArray.push(getFormatter(row, m)(row, cell, value, m, item));\n    }\n\n    stringArray.push('</div>');\n\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep) {\n    for (var i in rowsCache) {\n      if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom)) {\n        removeRowFromCache(i);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidate() {\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows() {\n    if (currentEditor) {\n      makeActiveCellNormal();\n    }\n    for (var row in rowsCache) {\n      removeRowFromCache(row);\n    }\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n  }\n\n  function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx) {\n    postProcessgroupId++;\n\n    // store and detach node for later async cleanup\n    for (var columnIdx in postProcessedRow) {\n      if (postProcessedRow.hasOwnProperty(columnIdx)) {\n        postProcessedCleanupQueue.push({\n          actionType: 'C',\n          groupId: postProcessgroupId,\n          node: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n          columnIdx: columnIdx | 0,\n          rowIdx: rowIdx\n        });\n      }\n    }\n    postProcessedCleanupQueue.push({\n      actionType: 'R',\n      groupId: postProcessgroupId,\n      node: cacheEntry.rowNode\n    });\n    (0, _jquery2.default)(cacheEntry.rowNode).detach();\n  }\n\n  function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx) {\n    postProcessedCleanupQueue.push({\n      actionType: 'C',\n      groupId: postProcessgroupId,\n      node: cellnode,\n      columnIdx: columnIdx,\n      rowIdx: rowIdx\n    });\n    (0, _jquery2.default)(cellnode).detach();\n  }\n\n  function removeRowFromCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode) {\n      cacheEntry.rowNode.style.display = 'none';\n      zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n      zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n      zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row];\n      // ignore post processing cleanup in this case - it will be dealt with later\n    } else {\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]) {\n        queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n      } else {\n        $canvas[0].removeChild(cacheEntry.rowNode);\n      }\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows) {\n    var i, rl;\n    if (!rows || !rows.length) {\n      return;\n    }\n    vScrollDir = 0;\n    for (i = 0, rl = rows.length; i < rl; i++) {\n      if (currentEditor && activeRow === rows[i]) {\n        makeActiveCellNormal();\n      }\n      if (rowsCache[rows[i]]) {\n        removeRowFromCache(rows[i]);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidateRow(row) {\n    invalidateRows([row]);\n  }\n\n  function updateCell(row, cell) {\n    var cellNode = getCellNode(row, cell);\n    if (!cellNode) {\n      return;\n    }\n\n    var m = columns[cell],\n        d = getDataItem(row);\n    if (currentEditor && activeRow === row && activeCell === cell) {\n      currentEditor.loadValue(d);\n    } else {\n      cellNode.innerHTML = d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d) : '';\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n\n    var d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n          node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor) {\n        currentEditor.loadValue(d);\n      } else if (d) {\n        node.innerHTML = getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n      } else {\n        node.innerHTML = '';\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight() {\n    return parseFloat(_jquery2.default.css($container[0], 'height', true)) - parseFloat(_jquery2.default.css($container[0], 'paddingTop', true)) - parseFloat(_jquery2.default.css($container[0], 'paddingBottom', true)) - parseFloat(_jquery2.default.css($headerScroller[0], 'height')) - getVBoxDelta($headerScroller) - (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) - (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) - (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0);\n  }\n\n  function resizeCanvas() {\n    if (!initialized) {\n      return;\n    }\n    if (options.autoHeight) {\n      viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n    } else {\n      viewportH = getViewportHeight();\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n    viewportW = parseFloat(_jquery2.default.css($container[0], 'width', true));\n    if (!options.autoHeight) {\n      $viewport.height(viewportH);\n    }\n\n    if (options.forceFitColumns) {\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll();\n    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updateRowCount() {\n    if (!initialized) {\n      return;\n    }\n\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n\n    var oldViewportHasVScroll = viewportHasVScroll;\n    // with autoHeight, we do not need to accommodate the vertical scroll bar\n    viewportHasVScroll = !options.autoHeight && numberOfRows * options.rowHeight > viewportH;\n    viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n\n    makeActiveCellNormal();\n\n    // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n    var l = dataLengthIncludingAddNew - 1;\n    for (var i in rowsCache) {\n      if (i > l) {\n        removeRowFromCache(i);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n\n    if (activeCellNode && activeRow > l) {\n      resetActiveCell();\n    }\n\n    var oldH = h;\n    th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n    if (th < maxSupportedCssHeight) {\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH) {\n      $canvas.css('height', h);\n      scrollTop = $viewport[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = scrollTop + offset <= th - viewportH;\n\n    if (th == 0 || scrollTop == 0) {\n      page = offset = 0;\n    } else if (oldScrollTopInRange) {\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - viewportH);\n    }\n\n    if (h != oldH && options.autoHeight) {\n      resizeCanvas();\n    }\n\n    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n      autosizeColumns();\n    }\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft) {\n    if (viewportTop == null) {\n      viewportTop = scrollTop;\n    }\n    if (viewportLeft == null) {\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft) {\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = 3;\n\n    if (vScrollDir == -1) {\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1) {\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (cacheEntry) {\n      if (cacheEntry.cellRenderQueue.length) {\n        var lastChild = cacheEntry.rowNode.lastChild;\n        while (cacheEntry.cellRenderQueue.length) {\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n          lastChild = lastChild.previousSibling;\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row) {\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row];\n\n    // Remove cells outside the range.\n    var cellsToRemove = [];\n    for (var i in cacheEntry.cellNodesByColumnIdx) {\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n        continue;\n      }\n\n      // This is a string, so it needs to be cast back to a number.\n      i = i | 0;\n\n      var colspan = cacheEntry.cellColSpans[i];\n      if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n        if (!(row == activeRow && i == activeCell)) {\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove, node;\n    postProcessgroupId++;\n    while ((cellToRemove = cellsToRemove.pop()) != null) {\n      node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]) {\n        queuePostProcessedCellForCleanup(node, cellToRemove, row);\n      } else {\n        cacheEntry.rowNode.removeChild(node);\n      }\n\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (postProcessedRows[row]) {\n        delete postProcessedRows[row][cellToRemove];\n      }\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range) {\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n      cacheEntry = rowsCache[row];\n      if (!cacheEntry) {\n        continue;\n      }\n\n      // cellRenderQueue populated in renderRows() needs to be cleared first\n      ensureCellNodesInRowsCache(row);\n\n      cleanUpCells(range, row);\n\n      // Render missing cells.\n      cellsAdded = 0;\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n\n      var d = getDataItem(row);\n\n      // TODO:  shorten this loop (index? heuristics? binary search?)\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx) {\n          break;\n        }\n\n        // Already rendered.\n        if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n          i += colspan > 1 ? colspan - 1 : 0;\n          continue;\n        }\n\n        colspan = 1;\n        if (metadata) {\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = columnData && columnData.colspan || 1;\n          if (colspan === '*') {\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += colspan > 1 ? colspan - 1 : 0;\n      }\n\n      if (cellsAdded) {\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length) {\n      return;\n    }\n\n    var x = document.createElement('div');\n    x.innerHTML = stringArray.join('');\n\n    var processedRow;\n    var node;\n    while ((processedRow = processedRows.pop()) != null) {\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n        node = x.lastChild;\n        cacheEntry.rowNode.appendChild(node);\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n      }\n    }\n  }\n\n  function renderRows(range) {\n    var parentNode = $canvas[0],\n        stringArray = [],\n        rows = [],\n        needToReselectCell = false,\n        dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n      if (rowsCache[i]) {\n        continue;\n      }\n      renderedRows++;\n      rows.push(i);\n\n      // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n      rowsCache[i] = {\n        'rowNode': null,\n\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        'cellColSpans': [],\n\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        'cellNodesByColumnIdx': [],\n\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        'cellRenderQueue': []\n      };\n\n      appendRowHtml(stringArray, i, range, dataLength);\n      if (activeCellNode && activeRow === i) {\n        needToReselectCell = true;\n      }\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length) {\n      return;\n    }\n\n    var x = document.createElement('div');\n    x.innerHTML = stringArray.join('');\n\n    for (var i = 0, ii = rows.length; i < ii; i++) {\n      rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n    }\n\n    if (needToReselectCell) {\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing() {\n    if (!options.enableAsyncPostRender) {\n      return;\n    }\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n  }\n\n  function startPostProcessingCleanup() {\n    if (!options.enableAsyncPostRenderCleanup) {\n      return;\n    }\n    clearTimeout(h_postrenderCleanup);\n    h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n  }\n\n  function invalidatePostProcessingResults(row) {\n    // change status of columns to be re-rendered\n    for (var columnIdx in postProcessedRows[row]) {\n      if (postProcessedRows[row].hasOwnProperty(columnIdx)) {\n        postProcessedRows[row][columnIdx] = 'C';\n      }\n    }\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions() {\n    for (var row in rowsCache) {\n      rowsCache[row].rowNode.style.top = getRowTop(row) + 'px';\n    }\n  }\n\n  function render() {\n    if (!initialized) {\n      return;\n    }\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange();\n\n    // remove rows no longer in the viewport\n    cleanupRows(rendered);\n\n    // add new rows & missing cells in existing rows\n    if (lastRenderedScrollLeft != scrollLeft) {\n      cleanUpAndRenderCells(rendered);\n    }\n\n    // render missing rows\n    renderRows(rendered);\n\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n    startPostProcessing();\n\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n  }\n\n  function handleHeaderRowScroll() {\n    var scrollLeft = $headerRowScroller[0].scrollLeft;\n    if (scrollLeft != $viewport[0].scrollLeft) {\n      $viewport[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleFooterRowScroll() {\n    var scrollLeft = $footerRowScroller[0].scrollLeft;\n    if (scrollLeft != $viewport[0].scrollLeft) {\n      $viewport[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleScroll() {\n    scrollTop = $viewport[0].scrollTop;\n    scrollLeft = $viewport[0].scrollLeft;\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist) {\n      prevScrollLeft = scrollLeft;\n      $headerScroller[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScroller[0].scrollLeft = scrollLeft;\n      if (options.createFooterRow) {\n        $footerRowScroller[0].scrollLeft = scrollLeft;\n      }\n    }\n\n    if (vScrollDist) {\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop;\n\n      // switch virtual pages if needed\n      if (vScrollDist < viewportH) {\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n        if (h == viewportH) {\n          page = 0;\n        } else {\n          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n        }\n        offset = Math.round(page * cj);\n        if (oldOffset != offset) {\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist) {\n      if (h_render) {\n        clearTimeout(h_render);\n      }\n\n      if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20) {\n        if (options.forceSyncScrolling || Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW) {\n          render();\n        } else {\n          h_render = setTimeout(render, 50);\n        }\n\n        trigger(self.onViewportChanged, { grid: self });\n      }\n    }\n\n    trigger(self.onScroll, { scrollLeft: scrollLeft, scrollTop: scrollTop, grid: self });\n  }\n\n  function asyncPostProcessRows() {\n    var dataLength = getDataLength();\n    while (postProcessFromRow <= postProcessToRow) {\n      var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry || row >= dataLength) {\n        continue;\n      }\n\n      if (!postProcessedRows[row]) {\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n\n        var m = columns[columnIdx];\n        var processedStatus = postProcessedRows[row][columnIdx]; // C=cleanup and re-render, R=rendered\n        if (m.asyncPostRender && processedStatus !== 'R') {\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n          if (node) {\n            m.asyncPostRender(node, row, getDataItem(row), m, processedStatus === 'C');\n          }\n          postProcessedRows[row][columnIdx] = 'R';\n        }\n      }\n\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n      return;\n    }\n  }\n\n  function asyncPostProcessCleanupRows() {\n    if (postProcessedCleanupQueue.length > 0) {\n      var groupId = postProcessedCleanupQueue[0].groupId;\n\n      // loop through all queue members with this groupID\n      while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId) {\n        var entry = postProcessedCleanupQueue.shift();\n        if (entry.actionType == 'R') {\n          (0, _jquery2.default)(entry.node).remove();\n        }\n        if (entry.actionType == 'C') {\n          var column = columns[entry.columnIdx];\n          if (column.asyncPostRenderCleanup && entry.node) {\n            // cleanup must also remove element\n            column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n          }\n        }\n      }\n\n      // call this function again after the specified delay\n      h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n    var node, columnId, addedRowHash, removedRowHash;\n    for (var row in rowsCache) {\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash) {\n        for (columnId in removedRowHash) {\n          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              (0, _jquery2.default)(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash) {\n        for (columnId in addedRowHash) {\n          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              (0, _jquery2.default)(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash) {\n    if (cellCssClasses[key]) {\n      throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n\n    trigger(self.onCellCssStylesChanged, { 'key': key, 'hash': hash, 'grid': self });\n  }\n\n  function removeCellCssStyles(key) {\n    if (!cellCssClasses[key]) {\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n\n    trigger(self.onCellCssStylesChanged, { 'key': key, 'hash': null, 'grid': self });\n  }\n\n  function setCellCssStyles(key, hash) {\n    var prevHash = cellCssClasses[key];\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n    trigger(self.onCellCssStylesChanged, { 'key': key, 'hash': hash, 'grid': self });\n  }\n\n  function getCellCssStyles(key) {\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed) {\n    speed = speed || 100;\n    if (rowsCache[row]) {\n      var toggleCellClass = function toggleCellClass(times) {\n        if (!times) {\n          return;\n        }\n        setTimeout(function () {\n          $cell.queue(function () {\n            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n            toggleCellClass(times - 1);\n          });\n        }, speed);\n      };\n\n      var $cell = (0, _jquery2.default)(getCellNode(row, cell));\n\n      toggleCellClass(4);\n    }\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n  function handleMouseWheel(e) {\n    var rowNode = (0, _jquery2.default)(e.target).closest('.slick-row')[0];\n    if (rowNode != rowNodeFromLastMouseWheelEvent) {\n      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode) {\n        if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent) {\n          queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent, zombieRowPostProcessedFromLastMouseWheelEvent);\n        } else {\n          $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n        }\n        zombieRowNodeFromLastMouseWheelEvent = null;\n        zombieRowCacheFromLastMouseWheelEvent = null;\n        zombieRowPostProcessedFromLastMouseWheelEvent = null;\n\n        if (options.enableAsyncPostRenderCleanup) {\n          startPostProcessingCleanup();\n        }\n      }\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n  }\n\n  function handleDragStart(interactEvent) {\n    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    var cell = getCellFromEvent(event);\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, interactEvent, event);\n    if (event.isImmediatePropagationStopped()) {\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(interactEvent) {\n    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    return trigger(self.onDrag, interactEvent, event);\n  }\n\n  function handleDragEnd(interactEvent) {\n    trigger(self.onDragEnd, interactEvent, _jquery2.default.Event('mousedown'));\n  }\n\n  function handleKeyDown(e) {\n    trigger(self.onKeyDown, { row: activeRow, cell: activeCell, grid: self }, e);\n    var handled = e.isImmediatePropagationStopped();\n    var keyCode = _slick2.default.keyCode;\n\n    if (!handled) {\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n        // editor may specify an array of keys to bubble\n        if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n          if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\n            return;\n          }\n        }\n        if (e.which == keyCode.ESCAPE) {\n          if (!getEditorLock().isActive()) {\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n          cancelEditAndSetFocus();\n        } else if (e.which == keyCode.PAGE_DOWN) {\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == keyCode.PAGE_UP) {\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == keyCode.LEFT) {\n          handled = navigateLeft();\n        } else if (e.which == keyCode.RIGHT) {\n          handled = navigateRight();\n        } else if (e.which == keyCode.UP) {\n          handled = navigateUp();\n        } else if (e.which == keyCode.DOWN) {\n          handled = navigateDown();\n        } else if (e.which == keyCode.TAB) {\n          handled = navigateNext();\n        } else if (e.which == keyCode.ENTER) {\n          if (options.editable) {\n            if (currentEditor) {\n              // adding new row\n              if (activeRow === getDataLength()) {\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()) {\n                makeActiveCellEditable();\n              }\n            }\n          }\n          handled = true;\n        }\n      } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled) {\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      }\n      // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n      // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      catch (error) {}\n    }\n  }\n\n  function handleClick(e) {\n    if (!currentEditor) {\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (e.target != document.activeElement || (0, _jquery2.default)(e.target).hasClass('slick-cell')) {\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onClick, { row: cell.row, cell: cell.cell, grid: self }, e);\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n        scrollRowIntoView(cell.row, false);\n        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n      }\n    }\n  }\n\n  function handleContextMenu(e) {\n    var $cell = (0, _jquery2.default)(e.target).closest('.slick-cell', $canvas);\n    if ($cell.length === 0) {\n      return;\n    }\n\n    // are we editing this cell?\n    if (activeCellNode === $cell[0] && currentEditor !== null) {\n      return;\n    }\n\n    trigger(self.onContextMenu, { grid: self }, e);\n  }\n\n  function handleDblClick(e) {\n    var cell = getCellFromEvent(e);\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onDblClick, { row: cell.row, cell: cell.cell, grid: self }, e);\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if (options.editable) {\n      gotoCell(cell.row, cell.cell, true);\n    }\n  }\n\n  function handleHeaderMouseEnter(e) {\n    trigger(self.onHeaderMouseEnter, {\n      'column': (0, _jquery2.default)(this).data('column'),\n      'grid': self\n    }, e);\n  }\n\n  function handleHeaderMouseLeave(e) {\n    trigger(self.onHeaderMouseLeave, {\n      'column': (0, _jquery2.default)(this).data('column'),\n      'grid': self\n    }, e);\n  }\n\n  function handleHeaderContextMenu(e) {\n    var $header = (0, _jquery2.default)(e.target).closest('.slick-header-column', '.slick-header-columns');\n    var column = $header && $header.data('column');\n    trigger(self.onHeaderContextMenu, { column: column, grid: self }, e);\n  }\n\n  function handleHeaderClick(e) {\n    var $header = (0, _jquery2.default)(e.target).closest('.slick-header-column', '.slick-header-columns');\n    var column = $header && $header.data('column');\n    if (column) {\n      trigger(self.onHeaderClick, { column: column, grid: self }, e);\n    }\n  }\n\n  function handleMouseEnter(e) {\n    trigger(self.onMouseEnter, { grid: self }, e);\n  }\n\n  function handleMouseLeave(e) {\n    trigger(self.onMouseLeave, { grid: self }, e);\n  }\n\n  function cellExists(row, cell) {\n    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n  }\n\n  function getCellFromPoint(x, y) {\n    var row = getRowFromPosition(y);\n    var cell = 0;\n\n    var w = 0;\n    for (var i = 0; i < columns.length && w < x; i++) {\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0) {\n      cell = 0;\n    }\n\n    return { row: row, cell: cell - 1 };\n  }\n\n  function getCellFromNode(cellNode) {\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n    if (!cls) {\n      throw 'getCellFromNode: cannot get cell - ' + cellNode.className;\n    }\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode) {\n    for (var row in rowsCache) {\n      if (rowsCache[row].rowNode === rowNode) {\n        return row | 0;\n      }\n    }\n\n    return null;\n  }\n\n  function getCellFromEvent(e) {\n    var $cell = (0, _jquery2.default)(e.target).closest('.slick-cell', $canvas);\n    if (!$cell.length) {\n      return null;\n    }\n\n    var row = getRowFromNode($cell[0].parentNode);\n    var cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null) {\n      return null;\n    } else {\n      return {\n        'row': row,\n        'cell': cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell) {\n    if (!cellExists(row, cell)) {\n      return null;\n    }\n\n    var y1 = getRowTop(row);\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n    for (var i = 0; i < cell; i++) {\n      x1 += columns[i].width;\n    }\n    var x2 = x1 + columns[cell].width;\n\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n  function resetActiveCell() {\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus() {\n    if (tabbingDirection == -1) {\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging) {\n    scrollRowIntoView(row, doPaging);\n\n    var colspan = getColspan(row, cell);\n    var left = columnPosLeft[cell],\n        right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n        scrollRight = scrollLeft + viewportW;\n\n    if (left < scrollLeft) {\n      $viewport.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight) {\n      $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n      handleScroll();\n      render();\n    }\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode) {\n    if (activeCellNode !== null) {\n      makeActiveCellNormal();\n      (0, _jquery2.default)(activeCellNode).removeClass('active');\n      if (rowsCache[activeRow]) {\n        (0, _jquery2.default)(rowsCache[activeRow].rowNode).removeClass('active');\n      }\n    }\n\n    var activeCellChanged = activeCellNode !== newCell;\n    activeCellNode = newCell;\n\n    if (activeCellNode != null) {\n      activeRow = getRowFromNode(activeCellNode.parentNode);\n      activeCell = activePosX = getCellFromNode(activeCellNode);\n\n      if (opt_editMode == null) {\n        opt_editMode = activeRow == getDataLength() || options.autoEdit;\n      }\n\n      (0, _jquery2.default)(activeCellNode).addClass('active');\n      (0, _jquery2.default)(rowsCache[activeRow].rowNode).addClass('active');\n\n      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading) {\n          h_editorLoader = setTimeout(function () {\n            makeActiveCellEditable();\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable();\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    }\n\n    if (activeCellChanged) {\n      trigger(self.onActiveCellChanged, getActiveCell());\n    }\n  }\n\n  function clearTextSelection() {\n    if (document.selection && document.selection.empty) {\n      try {\n        // IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e) {}\n    } else if (window.getSelection) {\n      var sel = window.getSelection();\n      if (sel && sel.removeAllRanges) {\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell) {\n    var dataLength = getDataLength();\n    // is the data for this row loaded?\n    if (row < dataLength && !getDataItem(row)) {\n      return false;\n    }\n\n    // are we in the Add New row?  can we create new from this cell?\n    if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n      return false;\n    }\n\n    // does this cell have an editor?\n    if (!getEditor(row, cell)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal() {\n    if (!currentEditor) {\n      return;\n    }\n    trigger(self.onBeforeCellEditorDestroy, { editor: currentEditor, grid: self });\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode) {\n      var d = getDataItem(activeRow);\n      (0, _jquery2.default)(activeCellNode).removeClass('editable invalid');\n      if (d) {\n        var column = columns[activeCell];\n        var formatter = getFormatter(activeRow, column);\n        activeCellNode.innerHTML = formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n        invalidatePostProcessingResults(activeRow);\n      }\n    }\n\n    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n    if (navigator.userAgent.toLowerCase().match(/msie/)) {\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor) {\n    if (!activeCellNode) {\n      return;\n    }\n    if (!options.editable) {\n      throw 'Grid : makeActiveCellEditable : should never get called when options.editable is false';\n    }\n\n    // cancel pending async call if there is one\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (trigger(self.onBeforeEditCell, {\n      row: activeRow,\n      cell: activeCell,\n      item: item,\n      column: columnDef,\n      grid: self\n    }) === false) {\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    (0, _jquery2.default)(activeCellNode).addClass('editable');\n\n    var useEditor = editor || getEditor(activeRow, activeCell);\n\n    // don't clear the cell if a custom editor is passed through\n    if (!editor && !useEditor.suppressClearOnEdit) {\n      activeCellNode.innerHTML = '';\n    }\n\n    currentEditor = new useEditor({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item) {\n      currentEditor.loadValue(item);\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position) {\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus() {\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()) {\n      setFocus();\n      if (options.autoEdit) {\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus() {\n    if (getEditorLock().cancelCurrentEdit()) {\n      setFocus();\n    }\n  }\n\n  function absBox(elem) {\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: (0, _jquery2.default)(elem).outerWidth(),\n      height: (0, _jquery2.default)(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width;\n\n    // walk up the tree\n    var offsetParent = elem.offsetParent;\n    while ((elem = elem.parentNode) != document.body) {\n      if (elem == null) break;\n\n      if (box.visible && elem.scrollHeight != elem.offsetHeight && (0, _jquery2.default)(elem).css('overflowY') != 'visible') {\n        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (box.visible && elem.scrollWidth != elem.offsetWidth && (0, _jquery2.default)(elem).css('overflowX') != 'visible') {\n        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent) {\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition() {\n    return absBox(activeCellNode);\n  }\n\n  function getGridPosition() {\n    return absBox($container[0]);\n  }\n\n  function handleActiveCellPositionChange() {\n    if (!activeCellNode) {\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, { grid: self });\n\n    if (currentEditor) {\n      var cellBox = getActiveCellPosition();\n      if (currentEditor.show && currentEditor.hide) {\n        if (!cellBox.visible) {\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position) {\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor() {\n    return currentEditor;\n  }\n\n  function getActiveCell() {\n    if (!activeCellNode) {\n      return null;\n    } else {\n      return { row: activeRow, cell: activeCell, grid: self };\n    }\n  }\n\n  function getActiveCellNode() {\n    return activeCellNode;\n  }\n\n  function scrollRowIntoView(row, doPaging) {\n    var rowAtTop = row * options.rowHeight;\n    var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n    // need to page down?\n    if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset) {\n      scrollTo(doPaging ? rowAtTop : rowAtBottom);\n      render();\n    }\n    // or page up?\n    else if (row * options.rowHeight < scrollTop + offset) {\n        scrollTo(doPaging ? rowAtBottom : rowAtTop);\n        render();\n      }\n  }\n\n  function scrollRowToTop(row) {\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir) {\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null) {\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      if (row >= dataLengthIncludingAddNew) {\n        row = dataLengthIncludingAddNew - 1;\n      }\n      if (row < 0) {\n        row = 0;\n      }\n\n      var cell = 0,\n          prevCell = null;\n      var prevActivePosX = activePosX;\n      while (cell <= activePosX) {\n        if (canCellBeActive(row, cell)) {\n          prevCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null) {\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown() {\n    scrollPage(1);\n  }\n\n  function navigatePageUp() {\n    scrollPage(-1);\n  }\n\n  function getColspan(row, cell) {\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (!metadata || !metadata.columns) {\n      return 1;\n    }\n\n    var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n    var colspan = columnData && columnData.colspan;\n    if (colspan === '*') {\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row) {\n    var cell = 0;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        return cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return null;\n  }\n\n  function findLastFocusableCell(row) {\n    var cell = 0;\n    var lastFocusableCell = null;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        lastFocusableCell = cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX) {\n    if (cell >= columns.length) {\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    } while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length) {\n      return {\n        'row': row,\n        'cell': cell,\n        'posX': cell\n      };\n    }\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX) {\n    if (cell <= 0) {\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n    if (firstFocusableCell === null || firstFocusableCell >= cell) {\n      return null;\n    }\n\n    var prev = {\n      'row': row,\n      'cell': firstFocusableCell,\n      'posX': firstFocusableCell\n    };\n    var pos;\n    while (true) {\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n      if (!pos) {\n        return null;\n      }\n      if (pos.cell >= cell) {\n        return prev;\n      }\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX) {\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (true) {\n      if (++row >= dataLengthIncludingAddNew) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          'row': row,\n          'cell': prevCell,\n          'posX': posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX) {\n    var prevCell;\n    while (true) {\n      if (--row < 0) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          'row': row,\n          'cell': prevCell,\n          'posX': posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = cell = posX = 0;\n      if (canCellBeActive(row, cell)) {\n        return {\n          'row': row,\n          'cell': cell,\n          'posX': cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n    if (pos) {\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (++row < dataLengthIncludingAddNew) {\n      firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell !== null) {\n        return {\n          'row': row,\n          'cell': firstFocusableCell,\n          'posX': firstFocusableCell\n        };\n      }\n    }\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n      if (canCellBeActive(row, cell)) {\n        return {\n          'row': row,\n          'cell': cell,\n          'posX': cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n    while (!pos) {\n      pos = gotoLeft(row, cell, posX);\n      if (pos) {\n        break;\n      }\n      if (--row < 0) {\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n      if (lastSelectableCell !== null) {\n        pos = {\n          'row': row,\n          'cell': lastSelectableCell,\n          'posX': lastSelectableCell\n        };\n      }\n    }\n    return pos;\n  }\n\n  function navigateRight() {\n    return navigate('right');\n  }\n\n  function navigateLeft() {\n    return navigate('left');\n  }\n\n  function navigateDown() {\n    return navigate('down');\n  }\n\n  function navigateUp() {\n    return navigate('up');\n  }\n\n  function navigateNext() {\n    return navigate('next');\n  }\n\n  function navigatePrev() {\n    return navigate('prev');\n  }\n\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n  function navigate(dir) {\n    if (!options.enableCellNavigation) {\n      return false;\n    }\n\n    if (!activeCellNode && dir != 'prev' && dir != 'next') {\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return true;\n    }\n    setFocus();\n\n    var tabbingDirections = {\n      'up': -1,\n      'down': 1,\n      'left': -1,\n      'right': 1,\n      'prev': -1,\n      'next': 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n\n    var stepFunctions = {\n      'up': gotoUp,\n      'down': gotoDown,\n      'left': gotoLeft,\n      'right': gotoRight,\n      'prev': gotoPrev,\n      'next': gotoNext\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n    if (pos) {\n      var isAddNewRow = pos.row == getDataLength();\n      scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n      setActiveCellInternal(getCellNode(pos.row, pos.cell));\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell) {\n    if (rowsCache[row]) {\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n    return null;\n  }\n\n  function setActiveCell(row, cell) {\n    if (!initialized) {\n      return;\n    }\n    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return;\n    }\n\n    if (!options.enableCellNavigation) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), false);\n  }\n\n  function canCellBeActive(row, cell) {\n    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.focusable === 'boolean') {\n      return rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n    if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === 'boolean') {\n      return columnMetadata[columns[cell].id].focusable;\n    }\n    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === 'boolean') {\n      return columnMetadata[cell].focusable;\n    }\n\n    return columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell) {\n    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.selectable === 'boolean') {\n      return rowMetadata.selectable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n    if (columnMetadata && typeof columnMetadata.selectable === 'boolean') {\n      return columnMetadata.selectable;\n    }\n\n    return columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit) {\n    if (!initialized) {\n      return;\n    }\n    if (!canCellBeActive(row, cell)) {\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n\n    var newCell = getCellNode(row, cell);\n\n    // if selecting the 'add new' row, start editing right away\n    setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit);\n\n    // if no editor was created, set the focus back on the grid\n    if (!currentEditor) {\n      setFocus();\n    }\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n  function commitCurrentEdit() {\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor) {\n      if (currentEditor.isValueChanged()) {\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid) {\n          if (activeRow < getDataLength()) {\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function execute() {\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item,\n                  grid: self\n                });\n              },\n              undo: function undo() {\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item,\n                  grid: self\n                });\n              }\n            };\n\n            if (options.editCommandHandler) {\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, { item: newItem, column: column, grid: self });\n          }\n\n          // check whether the lock has been re-acquired by event handlers\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          (0, _jquery2.default)(activeCellNode).removeClass('invalid');\n          (0, _jquery2.default)(activeCellNode).width(); // force layout\n          (0, _jquery2.default)(activeCellNode).addClass('invalid');\n\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column,\n            grid: self\n          });\n\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n    return true;\n  }\n\n  function cancelCurrentEdit() {\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows) {\n    var ranges = [];\n    var lastCell = columns.length - 1;\n    for (var i = 0; i < rows.length; i++) {\n      ranges.push(new _slick2.default.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getSelectedRows() {\n    if (!selectionModel) {\n      throw 'Selection model is not set';\n    }\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows) {\n    if (!selectionModel) {\n      throw 'Selection model is not set';\n    }\n    selectionModel.setSelectedRanges(rowsToRanges(rows));\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n  this.debug = function () {\n    var s = '';\n\n    s += '\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered;\n    s += '\\n' + 'counter_rows_removed:  ' + counter_rows_removed;\n    s += '\\n' + 'renderedRows:  ' + renderedRows;\n    s += '\\n' + 'numVisibleRows:  ' + numVisibleRows;\n    s += '\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight;\n    s += '\\n' + 'n(umber of pages):  ' + n;\n    s += '\\n' + '(current) page:  ' + page;\n    s += '\\n' + 'page height (ph):  ' + ph;\n    s += '\\n' + 'vScrollDir:  ' + vScrollDir;\n\n    alert(s);\n  };\n\n  // a debug helper to be able to access private members\n  this.eval = function (expr) {\n    return eval(expr);\n  };\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n  _jquery2.default.extend(this, {\n    'slickGridVersion': '2.2.4',\n\n    // Events\n    'onScroll': new _slick2.default.Event(),\n    'onSort': new _slick2.default.Event(),\n    'onHeaderMouseEnter': new _slick2.default.Event(),\n    'onHeaderMouseLeave': new _slick2.default.Event(),\n    'onHeaderContextMenu': new _slick2.default.Event(),\n    'onHeaderClick': new _slick2.default.Event(),\n    'onHeaderCellRendered': new _slick2.default.Event(),\n    'onBeforeHeaderCellDestroy': new _slick2.default.Event(),\n    'onHeaderRowCellRendered': new _slick2.default.Event(),\n    'onFooterRowCellRendered': new _slick2.default.Event(),\n    'onBeforeHeaderRowCellDestroy': new _slick2.default.Event(),\n    'onBeforeFooterRowCellDestroy': new _slick2.default.Event(),\n    'onMouseEnter': new _slick2.default.Event(),\n    'onMouseLeave': new _slick2.default.Event(),\n    'onClick': new _slick2.default.Event(),\n    'onDblClick': new _slick2.default.Event(),\n    'onContextMenu': new _slick2.default.Event(),\n    'onKeyDown': new _slick2.default.Event(),\n    'onAddNewRow': new _slick2.default.Event(),\n    'onValidationError': new _slick2.default.Event(),\n    'onViewportChanged': new _slick2.default.Event(),\n    'onColumnsReordered': new _slick2.default.Event(),\n    'onColumnsResized': new _slick2.default.Event(),\n    'onCellChange': new _slick2.default.Event(),\n    'onBeforeEditCell': new _slick2.default.Event(),\n    'onBeforeCellEditorDestroy': new _slick2.default.Event(),\n    'onBeforeDestroy': new _slick2.default.Event(),\n    'onActiveCellChanged': new _slick2.default.Event(),\n    'onActiveCellPositionChanged': new _slick2.default.Event(),\n    'onDragInit': new _slick2.default.Event(),\n    'onDragStart': new _slick2.default.Event(),\n    'onDrag': new _slick2.default.Event(),\n    'onDragEnd': new _slick2.default.Event(),\n    'onSelectedRowsChanged': new _slick2.default.Event(),\n    'onCellCssStylesChanged': new _slick2.default.Event(),\n\n    // Methods\n    'registerPlugin': registerPlugin,\n    'unregisterPlugin': unregisterPlugin,\n    'getColumns': getColumns,\n    'setColumns': setColumns,\n    'getColumnIndex': getColumnIndex,\n    'updateColumnHeader': updateColumnHeader,\n    'setSortColumn': setSortColumn,\n    'setSortColumns': setSortColumns,\n    'getSortColumns': getSortColumns,\n    'autosizeColumns': autosizeColumns,\n    'getOptions': getOptions,\n    'setOptions': setOptions,\n    'getData': getData,\n    'getDataLength': getDataLength,\n    'getDataItem': getDataItem,\n    'setData': setData,\n    'getSelectionModel': getSelectionModel,\n    'setSelectionModel': setSelectionModel,\n    'getSelectedRows': getSelectedRows,\n    'setSelectedRows': setSelectedRows,\n    'getContainerNode': getContainerNode,\n\n    'render': render,\n    'invalidate': invalidate,\n    'invalidateRow': invalidateRow,\n    'invalidateRows': invalidateRows,\n    'invalidateAllRows': invalidateAllRows,\n    'updateCell': updateCell,\n    'updateRow': updateRow,\n    'getViewport': getVisibleRange,\n    'getRenderedRange': getRenderedRange,\n    'resizeCanvas': resizeCanvas,\n    'updateRowCount': updateRowCount,\n    'scrollRowIntoView': scrollRowIntoView,\n    'scrollRowToTop': scrollRowToTop,\n    'scrollCellIntoView': scrollCellIntoView,\n    'getCanvasNode': getCanvasNode,\n    'focus': setFocus,\n\n    'getCellFromPoint': getCellFromPoint,\n    'getCellFromEvent': getCellFromEvent,\n    'getActiveCell': getActiveCell,\n    'setActiveCell': setActiveCell,\n    'getActiveCellNode': getActiveCellNode,\n    'getActiveCellPosition': getActiveCellPosition,\n    'resetActiveCell': resetActiveCell,\n    'editActiveCell': makeActiveCellEditable,\n    'getCellEditor': getCellEditor,\n    'getCellNode': getCellNode,\n    'getCellNodeBox': getCellNodeBox,\n    'canCellBeSelected': canCellBeSelected,\n    'canCellBeActive': canCellBeActive,\n    'navigatePrev': navigatePrev,\n    'navigateNext': navigateNext,\n    'navigateUp': navigateUp,\n    'navigateDown': navigateDown,\n    'navigateLeft': navigateLeft,\n    'navigateRight': navigateRight,\n    'navigatePageUp': navigatePageUp,\n    'navigatePageDown': navigatePageDown,\n    'gotoCell': gotoCell,\n    'getTopPanel': getTopPanel,\n    'setTopPanelVisibility': setTopPanelVisibility,\n    'setHeaderRowVisibility': setHeaderRowVisibility,\n    'getHeaderRow': getHeaderRow,\n    'getHeaderRowColumn': getHeaderRowColumn,\n    'setFooterRowVisibility': setFooterRowVisibility,\n    'getFooterRow': getFooterRow,\n    'getFooterRowColumn': getFooterRowColumn,\n    'getGridPosition': getGridPosition,\n    'flashCell': flashCell,\n    'addCellCssStyles': addCellCssStyles,\n    'setCellCssStyles': setCellCssStyles,\n    'removeCellCssStyles': removeCellCssStyles,\n    'getCellCssStyles': getCellCssStyles,\n\n    'init': finishInitialization,\n    'destroy': destroy,\n\n    // IEditor implementation\n    'getEditorLock': getEditorLock,\n    'getEditController': getEditController\n  });\n\n  init();\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _interactjs = __webpack_require__(2);\n\nvar _interactjs2 = _interopRequireDefault(_interactjs);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Slick.Grid globals pretense\n_slick2.default.FrozenGrid = SlickGrid; /**\n                                         * @license\n                                         * (c) 2009-2013 Michael Leibman\n                                         * michael{dot}leibman{at}gmail{dot}com\n                                         * http://github.com/mleibman/slickgrid\n                                         *\n                                         * Distributed under MIT license.\n                                         * All rights reserved.\n                                         *\n                                         * SlickGrid v2.2\n                                         *\n                                         * NOTES:\n                                         *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n                                         *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n                                         *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n                                         *     and do proper cleanup.\n                                         */\n\nexports.default = SlickGrid;\n\n// shared across all grids on the page\n\nvar scrollbarDimensions;\nvar maxSupportedCssHeight; // browser's breaking point\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\nfunction SlickGrid(container, data, columns, options) {\n  // settings\n  var defaults = {\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    autoHeight: false,\n    editorLock: _slick2.default.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: \"flashing\",\n    selectedCellCssClass: \"selected\",\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    frozenBottom: false,\n    frozenColumn: -1,\n    frozenRow: -1,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: \"new-row\"\n  };\n\n  var columnDefaults = {\n    name: \"\",\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  };\n\n  // scroller\n  var th; // virtual height\n  var h; // real scrollable height\n  var ph; // page height\n  var n; // number of pages\n  var cj; // \"jumpiness\" coefficient\n\n  var page = 0; // current page\n  var offset = 0; // current page offset\n  var vScrollDir = 1;\n\n  // private\n  var initialized = false;\n  var $container;\n  var uid = \"slickgrid_\" + Math.round(1000000 * Math.random());\n  var self = this;\n  var $focusSink, $focusSink2;\n  var $groupHeaders = (0, _jquery2.default)();\n  var $headerScroller;\n  var $headers;\n  var $headerRow, $headerRowScroller, $headerRowSpacerL, $headerRowSpacerR;\n  var $footerRow, $footerRowScroller, $footerRowSpacerL, $footerRowSpacerR;\n  var $topPanelScroller;\n  var $topPanel;\n  var $viewport;\n  var $canvas;\n  var $style;\n  var $boundAncestors;\n  var treeColumns;\n  var stylesheet, columnCssRulesL, columnCssRulesR;\n  var viewportH, viewportW;\n  var canvasWidth, canvasWidthL, canvasWidthR;\n  var headersWidth, headersWidthL, headersWidthR;\n  var viewportHasHScroll, viewportHasVScroll;\n  var headerColumnWidthDiff = 0,\n      headerColumnHeightDiff = 0,\n      // border+padding\n  cellWidthDiff = 0,\n      cellHeightDiff = 0;\n  var absoluteColumnMinWidth;\n  var hasFrozenRows = false;\n  var frozenRowsHeight = 0;\n  var actualFrozenRow = -1;\n  var paneTopH = 0;\n  var paneBottomH = 0;\n  var viewportTopH = 0;\n  var viewportBottomH = 0;\n  var topPanelH = 0;\n  var headerRowH = 0;\n  var footerRowH = 0;\n\n  var tabbingDirection = 1;\n  var $activeCanvasNode;\n  var $activeViewportNode;\n  var activePosX;\n  var activeRow, activeCell;\n  var activeCellNode = null;\n  var currentEditor = null;\n  var serializedEditorValue;\n  var editController;\n\n  var rowsCache = {};\n  var renderedRows = 0;\n  var numVisibleRows = 0;\n  var prevScrollTop = 0;\n  var scrollTop = 0;\n  var lastRenderedScrollTop = 0;\n  var lastRenderedScrollLeft = 0;\n  var prevScrollLeft = 0;\n  var scrollLeft = 0;\n\n  var selectionModel;\n  var selectedRows = [];\n\n  var plugins = [];\n  var cellCssClasses = {};\n\n  var columnsById = {};\n  var sortColumns = [];\n  var columnPosLeft = [];\n  var columnPosRight = [];\n\n  // async call handles\n  var h_editorLoader = null;\n  var h_render = null;\n  var h_postrender = null;\n  var postProcessedRows = {};\n  var postProcessToRow = null;\n  var postProcessFromRow = null;\n\n  // perf counters\n  var counter_rows_rendered = 0;\n  var counter_rows_removed = 0;\n\n  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n  var rowNodeFromLastMouseWheelEvent; // this node must not be deleted while inertial scrolling\n  var zombieRowNodeFromLastMouseWheelEvent; // node that was hidden instead of getting deleted\n\n  var $paneHeaderL;\n  var $paneHeaderR;\n  var $paneTopL;\n  var $paneTopR;\n  var $paneBottomL;\n  var $paneBottomR;\n\n  var $headerScrollerL;\n  var $headerScrollerR;\n\n  var $headerL;\n  var $headerR;\n\n  var $groupHeadersL;\n  var $groupHeadersR;\n\n  var $headerRowScrollerL;\n  var $headerRowScrollerR;\n\n  var $footerRowScrollerL;\n  var $footerRowScrollerR;\n\n  var $headerRowL;\n  var $headerRowR;\n\n  var $footerRowL;\n  var $footerRowR;\n\n  var $topPanelScrollerL;\n  var $topPanelScrollerR;\n\n  var $topPanelL;\n  var $topPanelR;\n\n  var $viewportTopL;\n  var $viewportTopR;\n  var $viewportBottomL;\n  var $viewportBottomR;\n\n  var $canvasTopL;\n  var $canvasTopR;\n  var $canvasBottomL;\n  var $canvasBottomR;\n\n  var $viewportScrollContainerX;\n  var $viewportScrollContainerY;\n  var $headerScrollContainer;\n  var $headerRowScrollContainer;\n  var $footerRowScrollContainer;\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init() {\n    $container = (0, _jquery2.default)(container);\n    if ($container.length < 1) {\n      throw new Error(\"SlickGrid requires a valid container, \" + container + \" does not exist in the DOM.\");\n    }\n\n    // calculate these only once and share between grid instances\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n    options = _jquery2.default.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n\n    treeColumns = new _slick2.default.TreeColumns(columns);\n    columns = treeColumns.extractColumns();\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    editController = {\n      \"commitCurrentEdit\": commitCurrentEdit,\n      \"cancelCurrentEdit\": cancelCurrentEdit\n    };\n\n    $container.empty().css(\"overflow\", \"hidden\").css(\"outline\", 0).addClass(uid).addClass(\"ui-widget\");\n\n    // set up a positioning container if needed\n    if (!/relative|absolute|fixed/.test($container.css(\"position\"))) {\n      $container.css(\"position\", \"relative\");\n    }\n\n    $focusSink = (0, _jquery2.default)(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n    // Containers used for scrolling frozen columns and rows\n    $paneHeaderL = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-header slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneHeaderR = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-header slick-pane-right' tabIndex='0' />\").appendTo($container);\n    $paneTopL = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-top slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneTopR = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-top slick-pane-right' tabIndex='0' />\").appendTo($container);\n    $paneBottomL = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-bottom slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneBottomR = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-bottom slick-pane-right' tabIndex='0' />\").appendTo($container);\n\n    // Append the header scroller containers\n    $headerScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-header slick-header-left' />\").appendTo($paneHeaderL);\n    $headerScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-header slick-header-right' />\").appendTo($paneHeaderR);\n\n    // Cache the header scroller containers\n    $headerScroller = (0, _jquery2.default)().add($headerScrollerL).add($headerScrollerR);\n\n    if (treeColumns.hasDepth()) {\n      $groupHeadersL = [], $groupHeadersR = [];\n      for (var index = 0; index < treeColumns.getDepth() - 1; index++) {\n        $groupHeadersL[index] = (0, _jquery2.default)(\"<div class='slick-group-header-columns slick-group-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n        $groupHeadersR[index] = (0, _jquery2.default)(\"<div class='slick-group-header-columns slick-group-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n      }\n\n      $groupHeaders = (0, _jquery2.default)().add($groupHeadersL).add($groupHeadersR);\n    }\n\n    // Append the columnn containers to the headers\n    $headerL = (0, _jquery2.default)(\"<div class='slick-header-columns slick-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n    $headerR = (0, _jquery2.default)(\"<div class='slick-header-columns slick-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n\n    // Cache the header columns\n    $headers = (0, _jquery2.default)().add($headerL).add($headerR);\n\n    $headerRowScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopL);\n    $headerRowScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopR);\n\n    $headerRowScroller = (0, _jquery2.default)().add($headerRowScrollerL).add($headerRowScrollerR);\n\n    $headerRowSpacerL = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\").appendTo($headerRowScrollerL);\n    $headerRowSpacerR = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\").appendTo($headerRowScrollerR);\n\n    $headerRowL = (0, _jquery2.default)(\"<div class='slick-headerrow-columns slick-headerrow-columns-left' />\").appendTo($headerRowScrollerL);\n    $headerRowR = (0, _jquery2.default)(\"<div class='slick-headerrow-columns slick-headerrow-columns-right' />\").appendTo($headerRowScrollerR);\n\n    $headerRow = (0, _jquery2.default)().add($headerRowL).add($headerRowR);\n\n    // Append the top panel scroller\n    $topPanelScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopL);\n    $topPanelScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopR);\n\n    $topPanelScroller = (0, _jquery2.default)().add($topPanelScrollerL).add($topPanelScrollerR);\n\n    // Append the top panel\n    $topPanelL = (0, _jquery2.default)(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerL);\n    $topPanelR = (0, _jquery2.default)(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerR);\n\n    $topPanel = (0, _jquery2.default)().add($topPanelL).add($topPanelR);\n\n    if (!options.showTopPanel) {\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow) {\n      $headerRowScroller.hide();\n    }\n\n    // Append the viewport containers\n    $viewportTopL = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-top slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneTopL);\n    $viewportTopR = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-top slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneTopR);\n    $viewportBottomL = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneBottomL);\n    $viewportBottomR = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneBottomR);\n\n    // Cache the viewports\n    $viewport = (0, _jquery2.default)().add($viewportTopL).add($viewportTopR).add($viewportBottomL).add($viewportBottomR);\n\n    // Default the active viewport to the top left\n    $activeViewportNode = $viewportTopL;\n\n    // Append the canvas containers\n    $canvasTopL = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-top grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportTopL);\n    $canvasTopR = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-top grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportTopR);\n    $canvasBottomL = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportBottomL);\n    $canvasBottomR = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportBottomR);\n\n    // Cache the canvases\n    $canvas = (0, _jquery2.default)().add($canvasTopL).add($canvasTopR).add($canvasBottomL).add($canvasBottomR);\n\n    // Default the active canvas to the top left\n    $activeCanvasNode = $canvasTopL;\n\n    // footer Row\n    $footerRowScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopR);\n    $footerRowScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopL);\n\n    $footerRowScroller = (0, _jquery2.default)().add($footerRowScrollerL).add($footerRowScrollerR);\n\n    $footerRowSpacerL = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\").appendTo($footerRowScrollerL);\n    $footerRowSpacerR = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\").appendTo($footerRowScrollerR);\n\n    $footerRowL = (0, _jquery2.default)(\"<div class='slick-footerrow-columns slick-footerrow-columns-left' />\").appendTo($footerRowScrollerL);\n    $footerRowR = (0, _jquery2.default)(\"<div class='slick-footerrow-columns slick-footerrow-columns-right' />\").appendTo($footerRowScrollerR);\n\n    $footerRow = (0, _jquery2.default)().add($footerRowL).add($footerRowR);\n\n    if (!options.showFooterRow) {\n      $footerRowScroller.hide();\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization) {\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization() {\n    if (!initialized) {\n      initialized = true;\n\n      getViewportWidth();\n      getViewportHeight();\n\n      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n      measureCellPaddingAndBorder();\n\n      // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells) {\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.bind(\"selectstart.ui\", function (event) {\n          return (0, _jquery2.default)(event.target).is(\"input,textarea\");\n        });\n      }\n\n      setFrozenOptions();\n      setPaneVisibility();\n      setScroller();\n      setOverflow();\n\n      updateColumnCaches();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n\n      $container.bind(\"resize.slickgrid\", resizeCanvas);\n      $viewport.on(\"scroll\", handleScroll);\n\n      if (_jquery2.default.fn.mousewheel && (options.frozenColumn > -1 || hasFrozenRows)) {\n        $viewport.on(\"mousewheel\", handleMouseWheel);\n      }\n\n      $headerScroller.bind(\"contextmenu\", handleHeaderContextMenu).bind(\"click\", handleHeaderClick).delegate(\".slick-header-column\", \"mouseenter\", handleHeaderMouseEnter).delegate(\".slick-header-column\", \"mouseleave\", handleHeaderMouseLeave);\n      $headerRowScroller.bind(\"scroll\", handleHeaderRowScroll);\n\n      $footerRowScroller.bind(\"scroll\", handleFooterRowScroll);\n\n      $focusSink.add($focusSink2).bind(\"keydown\", handleKeyDown);\n      $canvas.bind(\"keydown\", handleKeyDown).bind(\"click\", handleClick).bind(\"dblclick\", handleDblClick).bind(\"contextmenu\", handleContextMenu).delegate(\".slick-cell\", \"mouseenter\", handleMouseEnter).delegate(\".slick-cell\", \"mouseleave\", handleMouseLeave);\n\n      // legacy support for drag events\n      (0, _interactjs2.default)($canvas[0]).allowFrom('div.slick-cell').draggable({\n        onmove: handleDrag,\n        onstart: handleDragStart,\n        onend: handleDragEnd\n      }).styleCursor(false);\n\n      // Work around http://crbug.com/312427.\n      if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n        $canvas.on(\"mousewheel\", handleMouseWheel);\n      }\n    }\n  }\n\n  function hasFrozenColumns() {\n    return options.frozenColumn > -1;\n  }\n\n  function registerPlugin(plugin) {\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin) {\n    for (var i = plugins.length; i >= 0; i--) {\n      if (plugins[i] === plugin) {\n        if (plugins[i].destroy) {\n          plugins[i].destroy();\n        }\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model) {\n    if (selectionModel) {\n      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n      if (selectionModel.destroy) {\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n    if (selectionModel) {\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n    }\n  }\n\n  function getSelectionModel() {\n    return selectionModel;\n  }\n\n  function getCanvasNode() {\n    return $canvas[0];\n  }\n\n  function getActiveCanvasNode(element) {\n    setActiveCanvasNode(element);\n\n    return $activeCanvasNode[0];\n  }\n\n  function getCanvases() {\n    return $canvas;\n  }\n\n  function setActiveCanvasNode(element) {\n    if (element) {\n      $activeCanvasNode = (0, _jquery2.default)(element.target).closest('.grid-canvas');\n    }\n  }\n\n  function getViewportNode() {\n    return $viewport[0];\n  }\n\n  function getActiveViewportNode(element) {\n    setActiveViewPortNode(element);\n\n    return $activeViewportNode[0];\n  }\n\n  function setActiveViewportNode(element) {\n    if (element) {\n      $activeViewportNode = (0, _jquery2.default)(element.target).closest('.slick-viewport');\n    }\n  }\n\n  function measureScrollbar() {\n    var $c = (0, _jquery2.default)(\"<div class='scrollbar-fix' style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\").appendTo(document.body);\n    var dim = {\n      width: $c.width() - $c[0].clientWidth,\n      height: $c.height() - $c[0].clientHeight\n    };\n    $c.remove();\n    return dim;\n  }\n\n  function getHeadersWidth() {\n    headersWidth = headersWidthL = headersWidthR = 0;\n\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      var width = columns[i].width;\n\n      if (options.frozenColumn > -1 && i > options.frozenColumn) {\n        headersWidthR += width;\n      } else {\n        headersWidthL += width;\n      }\n    }\n\n    if (hasFrozenColumns()) {\n      headersWidthL = headersWidthL + 1000;\n\n      headersWidthR = Math.max(headersWidthR, viewportW) + headersWidthL;\n      headersWidthR += scrollbarDimensions.width;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    headersWidth = headersWidthL + headersWidthR;\n  }\n\n  function getHeadersWidthL() {\n    headersWidthL = 0;\n\n    columns.forEach(function (column, i) {\n      if (!(options.frozenColumn > -1 && i > options.frozenColumn)) headersWidthL += column.width;\n    });\n\n    if (hasFrozenColumns()) {\n      headersWidthL += 1000;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    return headersWidthL;\n  }\n\n  function getHeadersWidthR() {\n    headersWidthR = 0;\n\n    columns.forEach(function (column, i) {\n      if (options.frozenColumn > -1 && i > options.frozenColumn) headersWidthR += column.width;\n    });\n\n    if (hasFrozenColumns()) {\n      headersWidthR = Math.max(headersWidthR, viewportW) + getHeadersWidthL();\n      headersWidthR += scrollbarDimensions.width;\n    }\n\n    return headersWidthR;\n  }\n\n  function getCanvasWidth() {\n    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    var i = columns.length;\n\n    canvasWidthL = canvasWidthR = 0;\n\n    while (i--) {\n      if (hasFrozenColumns() && i > options.frozenColumn) {\n        canvasWidthR += columns[i].width;\n      } else {\n        canvasWidthL += columns[i].width;\n      }\n    }\n\n    var totalRowWidth = canvasWidthL + canvasWidthR;\n\n    return options.fullWidthRows ? Math.max(totalRowWidth, availableWidth) : totalRowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate) {\n    var oldCanvasWidth = canvasWidth;\n    var oldCanvasWidthL = canvasWidthL;\n    var oldCanvasWidthR = canvasWidthR;\n    var widthChanged;\n    canvasWidth = getCanvasWidth();\n\n    widthChanged = canvasWidth !== oldCanvasWidth || canvasWidthL !== oldCanvasWidthL || canvasWidthR !== oldCanvasWidthR;\n\n    if (widthChanged || hasFrozenColumns() || hasFrozenRows) {\n      $canvasTopL.width(canvasWidthL);\n\n      getHeadersWidth();\n\n      $headerL.width(headersWidthL);\n      $headerR.width(headersWidthR);\n\n      if (hasFrozenColumns()) {\n        $canvasTopR.width(canvasWidthR);\n\n        $paneHeaderL.width(canvasWidthL);\n        $paneHeaderR.css('left', canvasWidthL);\n        $paneHeaderR.css('width', viewportW - canvasWidthL);\n\n        $paneTopL.width(canvasWidthL);\n        $paneTopR.css('left', canvasWidthL);\n        $paneTopR.css('width', viewportW - canvasWidthL);\n\n        $headerRowScrollerL.width(canvasWidthL);\n        $headerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $headerRowL.width(canvasWidthL);\n        $headerRowR.width(canvasWidthR);\n\n        $footerRowScrollerL.width(canvasWidthL);\n        $footerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $footerRowL.width(canvasWidthL);\n        $footerRowR.width(canvasWidthR);\n\n        $viewportTopL.width(canvasWidthL);\n        $viewportTopR.width(viewportW - canvasWidthL);\n\n        if (hasFrozenRows) {\n          $paneBottomL.width(canvasWidthL);\n          $paneBottomR.css('left', canvasWidthL);\n\n          $viewportBottomL.width(canvasWidthL);\n          $viewportBottomR.width(viewportW - canvasWidthL);\n\n          $canvasBottomL.width(canvasWidthL);\n          $canvasBottomR.width(canvasWidthR);\n        }\n      } else {\n        $paneHeaderL.width('100%');\n\n        $paneTopL.width('100%');\n\n        $headerRowScrollerL.width('100%');\n\n        $headerRowL.width(canvasWidth);\n\n        $footerRowScrollerL.width('100%');\n\n        $footerRowL.width(canvasWidth);\n\n        $viewportTopL.width('100%');\n\n        if (hasFrozenRows) {\n          $viewportBottomL.width('100%');\n          $canvasBottomL.width(canvasWidthL);\n        }\n      }\n\n      viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n    }\n\n    $headerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n    $headerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\n    $footerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n    $footerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\n    if (widthChanged || forceColumnWidthsUpdate) {\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target) {\n    if ($target && $target.jquery) {\n      $target.attr(\"unselectable\", \"on\").css(\"MozUserSelect\", \"none\").bind(\"selectstart.ui\", function () {\n        return false;\n      }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight() {\n    var supportedHeight = 1000000;\n    // FF reports the height back but still renders blank after ~6M px\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n    var div = (0, _jquery2.default)(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true) {\n      var test = supportedHeight * 2;\n      div.css(\"height\", test);\n      if (test > testUpTo || div.height() !== test) {\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  // TODO:  this is static.  need to handle page mutation.\n  function bindAncestorScrollEvents() {\n    var elem = hasFrozenRows && !options.frozenBottom ? $canvasBottomL[0] : $canvasTopL[0];\n    while ((elem = elem.parentNode) != document.body && elem != null) {\n      // bind to scroll containers only\n      if (elem == $viewportTopL[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n        var $elem = (0, _jquery2.default)(elem);\n        if (!$boundAncestors) {\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n        $elem.bind(\"scroll.\" + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents() {\n    if (!$boundAncestors) {\n      return;\n    }\n    $boundAncestors.unbind(\"scroll.\" + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip) {\n    if (!initialized) {\n      return;\n    }\n    var idx = getColumnIndex(columnId);\n    if (idx == null) {\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n    if ($header) {\n      if (title !== undefined) {\n        columns[idx].name = title;\n      }\n      if (toolTip !== undefined) {\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        \"node\": $header[0],\n        \"column\": columnDef\n      });\n\n      $header.attr(\"title\", toolTip || \"\").children().eq(0).html(title);\n\n      trigger(self.onHeaderCellRendered, {\n        \"node\": $header[0],\n        \"column\": columnDef\n      });\n    }\n  }\n\n  function getHeaderRow() {\n    return hasFrozenColumns() ? $headerRow : $headerRow[0];\n  }\n\n  function getHeaderRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n\n    var $headerRowTarget;\n\n    if (hasFrozenColumns()) {\n      if (idx <= options.frozenColumn) {\n        $headerRowTarget = $headerRowL;\n      } else {\n        $headerRowTarget = $headerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $headerRowTarget = $headerRowL;\n    }\n\n    var $header = $headerRowTarget.children().eq(idx);\n    return $header && $header[0];\n  }\n\n  function getFooterRow() {\n    return hasFrozenColumns() ? $footerRow : $footerRow[0];\n  }\n\n  function getFooterRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n\n    var $footerRowTarget;\n\n    if (hasFrozenColumns()) {\n      if (idx <= options.frozenColumn) {\n        $footerRowTarget = $footerRowL;\n      } else {\n        $footerRowTarget = $footerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $footerRowTarget = $footerRowL;\n    }\n\n    var $footer = $footerRowTarget.children().eq(idx);\n    return $footer && $footer[0];\n  }\n\n  function createColumnFooter() {\n    $footerRow.find(\".slick-footerrow-column\").each(function () {\n      var columnDef = (0, _jquery2.default)(this).data(\"column\");\n      if (columnDef) {\n        trigger(self.onBeforeFooterRowCellDestroy, {\n          \"node\": this,\n          \"column\": columnDef\n        });\n      }\n    });\n\n    $footerRowL.empty();\n    $footerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i];\n\n      var footerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow-column l\" + i + \" r\" + i + \"'></div>\").data(\"column\", m).addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '').appendTo(hasFrozenColumns() && i > options.frozenColumn ? $footerRowR : $footerRowL);\n\n      trigger(self.onFooterRowCellRendered, {\n        \"node\": footerRowCell[0],\n        \"column\": m\n      });\n    }\n  }\n\n  function createColumnGroupHeaders() {\n    var columnsLength = 0;\n    var frozenColumnsValid = false;\n\n    if (!treeColumns.hasDepth()) return;\n\n    for (var index = 0; index < $groupHeadersL.length; index++) {\n\n      $groupHeadersL[index].empty();\n      $groupHeadersR[index].empty();\n\n      var groupColumns = treeColumns.getColumnsInDepth(index);\n\n      for (var indexGroup in groupColumns) {\n        var m = groupColumns[indexGroup];\n\n        columnsLength += m.extractColumns().length;\n\n        if (hasFrozenColumns() && index == 0 && columnsLength - 1 === options.frozenColumn) frozenColumnsValid = true;\n\n        (0, _jquery2.default)(\"<div class='ui-state-default slick-group-header-column' />\").html(\"<span class='slick-column-name'>\" + m.name + \"</span>\").attr(\"id\", \"\" + uid + m.id).attr(\"title\", m.toolTip || \"\").data(\"column\", m).addClass(m.headerCssClass || \"\").addClass(hasFrozenColumns() && columnsLength - 1 <= options.frozenColumn ? 'frozen' : '').appendTo(hasFrozenColumns() && columnsLength - 1 > options.frozenColumn ? $groupHeadersR[index] : $groupHeadersL[index]);\n      }\n\n      if (hasFrozenColumns() && index == 0 && !frozenColumnsValid) {\n        $groupHeadersL[index].empty();\n        $groupHeadersR[index].empty();\n        alert(\"All columns of group should to be grouped!\");\n        break;\n      }\n    }\n\n    applyColumnGroupHeaderWidths();\n  }\n\n  function createColumnHeaders() {\n    function onMouseEnter() {\n      (0, _jquery2.default)(this).addClass(\"ui-state-hover\");\n    }\n\n    function onMouseLeave() {\n      (0, _jquery2.default)(this).removeClass(\"ui-state-hover\");\n    }\n\n    $headers.find(\".slick-header-column\").each(function () {\n      var columnDef = (0, _jquery2.default)(this).data(\"column\");\n      if (columnDef) {\n        trigger(self.onBeforeHeaderCellDestroy, {\n          \"node\": this,\n          \"column\": columnDef\n        });\n      }\n    });\n\n    $headerL.empty();\n    $headerR.empty();\n\n    getHeadersWidth();\n\n    $headerL.width(headersWidthL);\n    $headerR.width(headersWidthR);\n\n    $headerRow.find(\".slick-headerrow-column\").each(function () {\n      var columnDef = (0, _jquery2.default)(this).data(\"column\");\n      if (columnDef) {\n        trigger(self.onBeforeHeaderRowCellDestroy, {\n          \"node\": this,\n          \"column\": columnDef\n        });\n      }\n    });\n\n    $headerRowL.empty();\n    $headerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i];\n\n      var $headerTarget = hasFrozenColumns() ? i <= options.frozenColumn ? $headerL : $headerR : $headerL;\n      var $headerRowTarget = hasFrozenColumns() ? i <= options.frozenColumn ? $headerRowL : $headerRowR : $headerRowL;\n\n      var header = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' />\").html(\"<span class='slick-column-name'>\" + m.name + \"</span>\").width(m.width).attr(\"id\", \"\" + uid + m.id).attr(\"title\", m.toolTip || \"\").data(\"column\", m).addClass(m.headerCssClass || \"\").addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '').appendTo($headerTarget);\n\n      if (options.enableColumnReorder || m.sortable) {\n        header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable) {\n        header.addClass(\"slick-header-sortable\");\n        header.append(\"<span class='slick-sort-indicator' />\");\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        \"node\": header[0],\n        \"column\": m\n      });\n\n      if (options.showHeaderRow) {\n        var headerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow-column l\" + i + \" r\" + i + \"'></div>\").data(\"column\", m).appendTo($headerRowTarget);\n\n        trigger(self.onHeaderRowCellRendered, {\n          \"node\": headerRowCell[0],\n          \"column\": m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n    if (options.enableColumnReorder) {\n      setupColumnReorder();\n    }\n  }\n\n  function setupColumnSort() {\n    $headers.click(function (e) {\n      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ((0, _jquery2.default)(e.target).hasClass(\"slick-resizable-handle\")) {\n        return;\n      }\n\n      var $col = (0, _jquery2.default)(e.target).closest(\".slick-header-column\");\n      if (!$col.length) {\n        return;\n      }\n\n      var column = $col.data(\"column\");\n      if (column.sortable) {\n        if (!getEditorLock().commitCurrentEdit()) {\n          return;\n        }\n\n        var sortOpts = null;\n        var i = 0;\n        for (; i < sortColumns.length; i++) {\n          if (sortColumns[i].columnId == column.id) {\n            sortOpts = sortColumns[i];\n            sortOpts.sortAsc = !sortOpts.sortAsc;\n            break;\n          }\n        }\n\n        if (e.metaKey && options.multiColumnSort) {\n          if (sortOpts) {\n            sortColumns.splice(i, 1);\n          }\n        } else {\n          if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n            sortColumns = [];\n          }\n\n          if (!sortOpts) {\n            sortOpts = {\n              columnId: column.id,\n              sortAsc: column.defaultSortAsc\n            };\n            sortColumns.push(sortOpts);\n          } else if (sortColumns.length == 0) {\n            sortColumns.push(sortOpts);\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort) {\n          trigger(self.onSort, {\n            multiColumnSort: false,\n            sortCol: column,\n            sortAsc: sortOpts.sortAsc\n          }, e);\n        } else {\n          trigger(self.onSort, {\n            multiColumnSort: true,\n            sortCols: _jquery2.default.map(sortColumns, function (col) {\n              return {\n                sortCol: columns[getColumnIndex(col.columnId)],\n                sortAsc: col.sortAsc\n              };\n            })\n          }, e);\n        }\n      }\n    });\n  }\n\n  function currentPositionInHeader(id) {\n    var currentPosition = 0;\n    $headers.find('.slick-header-column').each(function (i) {\n      if (this.id == id) {\n        currentPosition = i;\n        return false;\n      }\n    });\n\n    return currentPosition;\n  }\n\n  function limitPositionInGroup(idColumn) {\n    var groupColumnOfPreviousPosition,\n        startLimit = 0,\n        endLimit = 0;\n\n    treeColumns.getColumnsInDepth($groupHeadersL.length - 1).some(function (groupColumn) {\n      startLimit = endLimit;\n      endLimit += groupColumn.columns.length;\n\n      groupColumn.columns.some(function (column) {\n\n        if (column.id === idColumn) groupColumnOfPreviousPosition = groupColumn;\n\n        return groupColumnOfPreviousPosition;\n      });\n\n      return groupColumnOfPreviousPosition;\n    });\n\n    endLimit--;\n\n    return {\n      start: startLimit,\n      end: endLimit,\n      group: groupColumnOfPreviousPosition\n    };\n  }\n\n  function remove(arr, elem) {\n    var index = arr.lastIndexOf(elem);\n    if (index > -1) {\n      arr.splice(index, 1);\n      remove(arr, elem);\n    }\n  }\n\n  function columnPositionValidInGroup($item) {\n    var currentPosition = currentPositionInHeader($item[0].id);\n    var limit = limitPositionInGroup($item.data('column').id);\n    var positionValid = limit.start <= currentPosition && currentPosition <= limit.end;\n\n    return {\n      limit: limit,\n      valid: positionValid,\n      message: positionValid ? '' : 'Column \"'.concat($item.text(), '\" can be reordered only within the \"', limit.group.name, '\" group!')\n    };\n  }\n\n  function setupColumnReorder() {\n    var x = 0;\n    var delta = 0;\n    var placeholder = document.createElement('div');\n\n    placeholder.className = 'interact-placeholder';\n\n    (0, _interactjs2.default)('.slick-header-column').ignoreFrom('.slick-resizable-handle').draggable({\n      inertia: true,\n      // keep the element within the area of it's parent\n      restrict: {\n        restriction: 'parent',\n        endOnly: true,\n        elementRect: { top: 0, left: 0, bottom: 0, right: 0 }\n      },\n      // enable autoScroll\n      autoScroll: true,\n      axis: 'x',\n      onstart: function onstart(event) {\n        x = 0;\n        delta = event.target.offsetWidth;\n\n        // get old order\n        $headers.find('.slick-header-column').each(function (index) {\n          (0, _jquery2.default)(this).data('index', index);\n        });\n\n        placeholder.style.height = event.target.offsetHeight + 'px';\n        placeholder.style.width = delta + 'px';\n\n        (0, _jquery2.default)(event.target).after(placeholder).css({\n          position: 'absolute',\n          zIndex: 1000,\n          marginLeft: (0, _jquery2.default)(event.target).position().left - 1000\n        });\n      },\n\n      onmove: function onmove(event) {\n        x += event.dx;\n        event.target.style.transform = 'translate3d(' + x + 'px, -3px, 100px)';\n        // event.target.style.marginLeft = x + 'px';\n      },\n\n      onend: function onend(event) {\n        x = 0;\n        delta = 0;\n\n        if (treeColumns.hasDepth()) {\n          var validPositionInGroup = columnPositionValidInGroup((0, _jquery2.default)(event.target));\n          var limit = validPositionInGroup.limit;\n\n          var cancel = !validPositionInGroup.valid;\n\n          if (cancel) alert(validPositionInGroup.message);\n        }\n\n        placeholder.parentNode.removeChild(placeholder);\n\n        if (cancel) {\n          event.target.style.transform = 'none';\n          setColumns(getColumns());\n          return;\n        }\n\n        (0, _jquery2.default)(event.target).css({\n          position: 'relative',\n          zIndex: '',\n          marginLeft: 0,\n          transform: 'none'\n        });\n\n        var newColumns = [];\n        $headers.find('.slick-header-column').each(function (index) {\n          newColumns.push(columns[(0, _jquery2.default)(this).data('index')]);\n          (0, _jquery2.default)(this).removeData('index');\n        });\n\n        setColumns(newColumns);\n\n        trigger(self.onColumnsReordered, { impactedColumns: getImpactedColumns(limit), grid: self });\n        setupColumnResize();\n      }\n    }).dropzone({\n      accept: '.slick-header-column',\n\n      ondragenter: function ondragenter(event) {\n        event.target.classList.add('interact-drop-active');\n        event.relatedTarget.classList.add('interact-can-drop');\n      },\n\n      ondragleave: function ondragleave(event) {\n        event.target.classList.remove('interact-drop-active');\n        event.relatedTarget.classList.remove('interact-can-drop');\n      },\n\n      ondrop: function ondrop(event) {\n        event.target.classList.remove('interact-drop-active');\n        event.relatedTarget.classList.remove('interact-can-drop');\n        (0, _jquery2.default)(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n      }\n    }).styleCursor(false);\n  }\n\n  function getImpactedColumns(limit) {\n    var impactedColumns = [];\n\n    if (limit != undefined) {\n\n      for (var i = limit.start; i <= limit.end; i++) {\n        impactedColumns.push(columns[i]);\n      }\n    } else {\n\n      impactedColumns = columns;\n    }\n\n    return impactedColumns;\n  }\n\n  function setupColumnResize() {\n    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n    columnElements = $headers.children();\n    columnElements.find('.slick-resizable-handle').remove();\n    columnElements.each(function (i, e) {\n      if (columns[i].resizable) {\n        if (firstResizable === undefined) {\n          firstResizable = i;\n        }\n        lastResizable = i;\n      }\n    });\n    if (firstResizable === undefined) {\n      return;\n    }\n    columnElements.each(function (i, element) {\n      if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n        return;\n      }\n      $col = (0, _jquery2.default)(element);\n\n      var $handle = (0, _jquery2.default)(\"<div class='slick-resizable-handle' />\");\n      $handle.appendTo(element);\n\n      if ($col.data('resizable')) return;\n\n      var activeColumn = columns[i];\n      if (activeColumn.resizable) {\n        $col.data('resizable', true);\n        (0, _interactjs2.default)(element).resizable({\n          preserveAspectRatio: false,\n          edges: { left: true, right: true, bottom: false, top: false }\n        }).on('resizestart', function (event) {\n          if (!getEditorLock().commitCurrentEdit()) {\n            return false;\n          }\n          activeColumn.previousWidth = event.rect.width;\n          event.target.classList.add('slick-header-column-active');\n        }).on('resizemove', function (event) {\n          var x = event.dx;\n          var width = activeColumn.width += x;\n\n          if (activeColumn.minWidth > 0 && activeColumn.minWidth > width) width = activeColumn.minWidth;else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width) width = activeColumn.maxWidth;\n\n          activeColumn.width = width;\n\n          if (options.forceFitColumns) {\n            autosizeColumns();\n          }\n          applyColumnHeaderWidths();\n          if (options.syncColumnCellResize) {\n            applyColumnWidths();\n          }\n        }).on('resizeend', function (event) {\n          event.target.classList.remove('slick-header-column-active');\n          if (treeColumns.hasDepth()) createColumnGroupHeaders();\n\n          invalidateAllRows();\n          updateCanvasWidth(true);\n          render();\n          trigger(self.onColumnsResized, { grid: self });\n        });\n      }\n    });\n  }\n\n  function getVBoxDelta($el) {\n    var p = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n    var delta = 0;\n    _jquery2.default.each(p, function (n, val) {\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function setFrozenOptions() {\n    options.frozenColumn = options.frozenColumn >= 0 && options.frozenColumn < columns.length ? parseInt(options.frozenColumn) : -1;\n\n    options.frozenRow = options.frozenRow >= 0 && options.frozenRow < numVisibleRows ? parseInt(options.frozenRow) : -1;\n\n    if (options.frozenRow > -1) {\n      hasFrozenRows = true;\n      frozenRowsHeight = options.frozenRow * options.rowHeight;\n\n      var dataLength = getDataLength() || this.data.length;\n\n      actualFrozenRow = options.frozenBottom ? dataLength - options.frozenRow : options.frozenRow;\n    } else {\n      hasFrozenRows = false;\n    }\n  }\n\n  function setPaneVisibility() {\n    if (hasFrozenColumns()) {\n      $paneHeaderR.show();\n      $paneTopR.show();\n\n      if (hasFrozenRows) {\n        $paneBottomL.show();\n        $paneBottomR.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    } else {\n      $paneHeaderR.hide();\n      $paneTopR.hide();\n      $paneBottomR.hide();\n\n      if (hasFrozenRows) {\n        $paneBottomL.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    }\n  }\n\n  function setOverflow() {\n    $viewportTopL.css({\n      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'scroll' : hasFrozenRows ? 'hidden' : 'auto',\n      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'hidden' : hasFrozenRows ? 'scroll' : 'auto'\n    });\n\n    $viewportTopR.css({\n      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'scroll' : hasFrozenRows ? 'hidden' : 'auto',\n      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'scroll' : 'auto' : hasFrozenRows ? 'scroll' : 'auto'\n    });\n\n    $viewportBottomL.css({\n      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'scroll' : 'auto' : hasFrozenRows ? 'auto' : 'auto',\n      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'hidden' : hasFrozenRows ? 'scroll' : 'auto'\n    });\n\n    $viewportBottomR.css({\n      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'scroll' : 'auto' : hasFrozenRows ? 'auto' : 'auto',\n      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'auto' : 'auto' : hasFrozenRows ? 'auto' : 'auto'\n    });\n  }\n\n  function setScroller() {\n    if (hasFrozenColumns()) {\n      $headerScrollContainer = $headerScrollerR;\n      $headerRowScrollContainer = $headerRowScrollerR;\n      $footerRowScrollContainer = $footerRowScrollerR;\n\n      if (hasFrozenRows) {\n        if (options.frozenBottom) {\n          $viewportScrollContainerX = $viewportBottomR;\n          $viewportScrollContainerY = $viewportTopR;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomR;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopR;\n      }\n    } else {\n      $headerScrollContainer = $headerScrollerL;\n      $headerRowScrollContainer = $headerRowScrollerL;\n      $footerRowScrollContainer = $footerRowScrollerL;\n\n      if (hasFrozenRows) {\n        if (options.frozenBottom) {\n          $viewportScrollContainerX = $viewportBottomL;\n          $viewportScrollContainerY = $viewportTopL;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomL;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopL;\n      }\n    }\n  }\n\n  function measureCellPaddingAndBorder() {\n    var el;\n    var h = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"];\n    var v = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n\n    el = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\n      _jquery2.default.each(h, function (n, val) {\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      _jquery2.default.each(v, function (n, val) {\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    el.remove();\n\n    var r = (0, _jquery2.default)(\"<div class='slick-row' />\").appendTo($canvas);\n    el = (0, _jquery2.default)(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\n      _jquery2.default.each(h, function (n, val) {\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      _jquery2.default.each(v, function (n, val) {\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    r.remove();\n\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules() {\n    $style = (0, _jquery2.default)(\"<style type='text/css' rel='stylesheet' />\").appendTo((0, _jquery2.default)(\"head\"));\n\n    var getRule = function getRule(rule) {\n      return '.' + uid + ' ' + rule;\n    };\n\n    var rowHeight = options.rowHeight - cellHeightDiff;\n    var rules = [getRule('.slick-group-header-column { left: 1000px; }'), getRule('.slick-header-column { left: 1000px; }'), getRule('.slick-top-panel { height: ' + options.topPanelHeight + 'px; }'), getRule('.slick-headerrow-columns, .' + uid + ' .slick-header-columns { height: ' + options.headerRowHeight + 'px; }'), getRule('.slick-cell { height: ' + rowHeight + 'px; }'), getRule('.slick-row { height: ' + options.rowHeight + 'px; }'), getRule('.slick-footerrow-columns, ' + uid + ' .slick-footer-columns  { height: ' + options.footerRowHeight + 'px; }')];\n\n    for (var i = 0; i < columns.length; i++) {\n      rules.push('.' + uid + ' .l' + i + ' { }');\n      rules.push('.' + uid + ' .r' + i + ' { }');\n    }\n\n    if ($style[0].styleSheet) {\n      // IE\n      $style[0].styleSheet.cssText = rules.join(' ');\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n    }\n  }\n\n  function getColumnCssRules(idx) {\n    if (!stylesheet) {\n      var sheets = document.styleSheets;\n      for (var i = 0; i < sheets.length; i++) {\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet) {\n        throw new Error(\"Cannot find stylesheet.\");\n      }\n\n      // find and cache column CSS rules\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = stylesheet.cssRules || stylesheet.rules;\n      var matches, columnIdx;\n      for (var i = 0; i < cssRules.length; i++) {\n        var selector = cssRules[i].selectorText;\n        if (matches = /\\.l\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if (matches = /\\.r\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      \"left\": columnCssRulesL[idx],\n      \"right\": columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules() {\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy() {\n    getEditorLock().cancelCurrentEdit();\n\n    trigger(self.onBeforeDestroy, {});\n\n    var i = plugins.length;\n    while (i--) {\n      unregisterPlugin(plugins[i]);\n    }\n\n    unbindAncestorScrollEvents();\n    $container.unbind(\".slickgrid\");\n    removeCssRules();\n\n    $container.empty().removeClass(uid);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n  function trigger(evt, args, e) {\n    e = e || new _slick2.default.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock() {\n    return options.editorLock;\n  }\n\n  function getEditController() {\n    return editController;\n  }\n\n  function getColumnIndex(id) {\n    return columnsById[id];\n  }\n\n  function autosizeColumns() {\n    var i,\n        c,\n        widths = [],\n        shrinkLeeway = 0,\n        total = 0,\n        prevTotal,\n        availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    for (i = 0; i < columns.length; i++) {\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n      if (c.resizable) {\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    }\n\n    // shrink\n    prevTotal = total;\n    while (total > availWidth && shrinkLeeway) {\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n      for (i = 0; i < columns.length && total > availWidth; i++) {\n        c = columns[i];\n        var width = widths[i];\n        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n          continue;\n        }\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n      if (prevTotal <= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    // grow\n    prevTotal = total;\n    while (total < availWidth) {\n      var growProportion = availWidth / total;\n      for (i = 0; i < columns.length && total < availWidth; i++) {\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth) {\n          growSize = 0;\n        } else {\n          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n        }\n        total += growSize;\n        widths[i] += growSize;\n      }\n      if (prevTotal >= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    var reRender = false;\n    for (i = 0; i < columns.length; i++) {\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n        reRender = true;\n      }\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    applyColumnGroupHeaderWidths();\n    updateCanvasWidth(true);\n    if (reRender) {\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnGroupHeaderWidths() {\n    if (!treeColumns.hasDepth()) return;\n\n    for (var depth = $groupHeadersL.length - 1; depth >= 0; depth--) {\n\n      var groupColumns = treeColumns.getColumnsInDepth(depth);\n\n      (0, _jquery2.default)().add($groupHeadersL[depth]).add($groupHeadersR[depth]).each(function (i) {\n        var $groupHeader = (0, _jquery2.default)(this),\n            currentColumnIndex = 0;\n\n        $groupHeader.width(i == 0 ? getHeadersWidthL() : getHeadersWidthR());\n\n        $groupHeader.children().each(function () {\n          var $groupHeaderColumn = (0, _jquery2.default)(this);\n\n          var m = (0, _jquery2.default)(this).data('column');\n\n          m.width = 0;\n\n          m.columns.forEach(function () {\n            var $headerColumn = $groupHeader.next().children(':eq(' + currentColumnIndex++ + ')');\n            m.width += $headerColumn.outerWidth();\n          });\n\n          $groupHeaderColumn.width(m.width - headerColumnWidthDiff);\n        });\n      });\n    }\n  }\n\n  function applyColumnHeaderWidths() {\n    if (!initialized) {\n      return;\n    }\n    var h;\n    for (var i = 0, headers = $headers.children(), ii = headers.length; i < ii; i++) {\n      h = (0, _jquery2.default)(headers[i]);\n      if (h.css('width') !== columns[i].width - headerColumnWidthDiff) {\n        h.css('width', columns[i].width - headerColumnWidthDiff);\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths() {\n    var x = 0,\n        w,\n        rule;\n    for (var i = 0; i < columns.length; i++) {\n      w = columns[i].width;\n\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + \"px\";\n      rule.right.style.right = (options.frozenColumn != -1 && i > options.frozenColumn ? canvasWidthR : canvasWidthL) - x - w + \"px\";\n\n      // If this column is frozen, reset the css left value since the\n      // column starts in a new viewport.\n      if (options.frozenColumn == i) {\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setSortColumn(columnId, ascending) {\n    setSortColumns([{\n      columnId: columnId,\n      sortAsc: ascending\n    }]);\n  }\n\n  function setSortColumns(cols) {\n    sortColumns = cols;\n\n    var headerColumnEls = $headers.children();\n    headerColumnEls.removeClass(\"slick-header-column-sorted\").find(\".slick-sort-indicator\").removeClass(\"slick-sort-indicator-asc slick-sort-indicator-desc\");\n\n    _jquery2.default.each(sortColumns, function (i, col) {\n      if (col.sortAsc == null) {\n        col.sortAsc = true;\n      }\n      var columnIndex = getColumnIndex(col.columnId);\n      if (columnIndex != null) {\n        headerColumnEls.eq(columnIndex).addClass(\"slick-header-column-sorted\").find(\".slick-sort-indicator\").addClass(col.sortAsc ? \"slick-sort-indicator-asc\" : \"slick-sort-indicator-desc\");\n      }\n    });\n  }\n\n  function getSortColumns() {\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges) {\n    selectedRows = [];\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        if (!hash[j]) {\n          // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n          if (canCellBeSelected(j, k)) {\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n\n    trigger(self.onSelectedRowsChanged, {\n      rows: getSelectedRows()\n    }, e);\n  }\n\n  function getColumns() {\n    return columns;\n  }\n\n  function updateColumnCaches() {\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n\n      if (options.frozenColumn == i) {\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setColumns(columnDefinitions) {\n    var _treeColumns = new _slick2.default.TreeColumns(columnDefinitions);\n    if (_treeColumns.hasDepth()) {\n      treeColumns = _treeColumns;\n      columns = treeColumns.extractColumns();\n    } else {\n      columns = columnDefinitions;\n    }\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized) {\n      setPaneVisibility();\n      setOverflow();\n\n      invalidateAllRows();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      updateCanvasWidth();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions() {\n    return options;\n  }\n\n  function setOptions(args) {\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow) {\n      invalidateRow(getDataLength());\n    }\n\n    options = _jquery2.default.extend(options, args);\n    validateAndEnforceOptions();\n\n    setFrozenOptions();\n    setScroller();\n    zombieRowNodeFromLastMouseWheelEvent = null;\n\n    setColumns(treeColumns.extractColumns());\n    render();\n  }\n\n  function validateAndEnforceOptions() {\n    if (options.autoHeight) {\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop) {\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n    if (scrollToTop) {\n      scrollTo(0);\n    }\n  }\n\n  function getData() {\n    return data;\n  }\n\n  function getDataLength() {\n    if (data.getLength) {\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew() {\n    return getDataLength() + (options.enableAddRow ? 1 : 0);\n  }\n\n  function getDataItem(i) {\n    if (data.getItem) {\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel() {\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible) {\n    if (options.showTopPanel != visible) {\n      options.showTopPanel = visible;\n      if (visible) {\n        $topPanelScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible) {\n    if (options.showHeaderRow != visible) {\n      options.showHeaderRow = visible;\n      if (visible) {\n        $headerRowScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible) {\n    if (options.showFooterRow != visible) {\n      options.showFooterRow = visible;\n      if (visible) {\n        $footerRowScroller.fadeIn(\"fast\", resizeCanvas);\n      } else {\n        $footerRowScroller.slideDown(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode() {\n    return $container.get(0);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n  function getRowTop(row) {\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y) {\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y) {\n    y = Math.max(y, 0);\n    y = Math.min(y, th - $viewportScrollContainerY.height() + (viewportHasHScroll || hasFrozenColumns() ? scrollbarDimensions.height : 0));\n\n    var oldOffset = offset;\n\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset) {\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop) {\n      vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n\n      lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n\n      if (hasFrozenColumns()) {\n        $viewportTopL[0].scrollTop = newScrollTop;\n      }\n\n      if (hasFrozenRows) {\n        $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\n      }\n\n      $viewportScrollContainerY[0].scrollTop = newScrollTop;\n\n      trigger(self.onViewportChanged, {});\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext) {\n    if (value == null) {\n      return \"\";\n    } else {\n      return (value + \"\").replace(/&/g, \"&\").replace(/</g, \"<\").replace(/>/g, \">\");\n    }\n  }\n\n  function getFormatter(row, column) {\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    // look up by id, then index\n    var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\n    return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n  }\n\n  function callFormatter(row, cell, value, m, item) {\n\n    var result;\n\n    // pass metadata to formatter\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    metadata = metadata && metadata.columns;\n\n    if (metadata) {\n      var columnData = metadata[m.id] || metadata[cell];\n      result = getFormatter(row, m)(row, cell, value, m, item, columnData);\n    } else {\n      result = getFormatter(row, m)(row, cell, value, m, item);\n    }\n\n    return result;\n  }\n\n  function getEditor(row, cell) {\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n      return columnMetadata[column.id].editor;\n    }\n    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n      return columnMetadata[cell].editor;\n    }\n\n    return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n  }\n\n  function getDataItemValueForColumn(item, columnDef) {\n    if (options.dataItemColumnValueExtractor) {\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArrayL, stringArrayR, row, range, dataLength) {\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss = \"slick-row\" + (hasFrozenRows && row < options.frozenRow ? ' frozen' : '') + (dataLoading ? \" loading\" : \"\") + (row === activeRow ? \" active\" : \"\") + (row % 2 == 1 ? \" odd\" : \" even\");\n\n    if (!d) {\n      rowCss += \" \" + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses) {\n      rowCss += \" \" + metadata.cssClasses;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var rowHtml = \"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + (getRowTop(row) - frozenRowOffset) + \"px'>\";\n\n    stringArrayL.push(rowHtml);\n\n    if (hasFrozenColumns()) {\n      stringArrayR.push(rowHtml);\n    }\n\n    var colspan, m;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      m = columns[i];\n      colspan = 1;\n      if (metadata && metadata.columns) {\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = columnData && columnData.colspan || 1;\n        if (colspan === \"*\") {\n          colspan = ii - i;\n        }\n      }\n\n      // Do not render cells outside of the viewport.\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n        if (columnPosLeft[i] > range.rightPx) {\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        if (hasFrozenColumns() && i > options.frozenColumn) {\n          appendCellHtml(stringArrayR, row, i, colspan, d);\n        } else {\n          appendCellHtml(stringArrayL, row, i, colspan, d);\n        }\n      } else if (hasFrozenColumns() && i <= options.frozenColumn) {\n        appendCellHtml(stringArrayL, row, i, colspan, d);\n      }\n\n      if (colspan > 1) {\n        i += colspan - 1;\n      }\n    }\n\n    stringArrayL.push(\"</div>\");\n\n    if (hasFrozenColumns()) {\n      stringArrayR.push(\"</div>\");\n    }\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item) {\n    var m = columns[cell];\n    var cellCss = \"slick-cell l\" + cell + \" r\" + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? \" \" + m.cssClass : \"\");\n\n    if (hasFrozenColumns() && cell <= options.frozenColumn) cellCss += ' frozen';\n\n    if (row === activeRow && cell === activeCell) cellCss += \" active\";\n\n    // TODO:  merge them together in the setter\n    for (var key in cellCssClasses) {\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n        cellCss += \" \" + cellCssClasses[key][row][m.id];\n      }\n    }\n\n    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\n    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n    if (item) {\n      var value = getDataItemValueForColumn(item, m);\n      stringArray.push(callFormatter(row, cell, value, m, item));\n    }\n\n    stringArray.push(\"</div>\");\n\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep) {\n    for (var i in rowsCache) {\n      var removeFrozenRow = true;\n\n      if (hasFrozenRows && (options.frozenBottom && i >= actualFrozenRow || // Frozen bottom rows\n      !options.frozenBottom && i <= actualFrozenRow // Frozen top rows\n      )) {\n        removeFrozenRow = false;\n      }\n\n      if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom) && removeFrozenRow) {\n        removeRowFromCache(i);\n      }\n    }\n  }\n\n  function invalidate() {\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows() {\n    if (currentEditor) {\n      makeActiveCellNormal();\n    }\n    for (var row in rowsCache) {\n      removeRowFromCache(row);\n    }\n  }\n\n  function removeRowFromCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    if (rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[0] || hasFrozenColumns() && rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[1]) {\n\n      cacheEntry.rowNode.hide();\n\n      zombieRowNodeFromLastMouseWheelEvent = cacheEntry.rowNode;\n    } else {\n\n      cacheEntry.rowNode.each(function () {\n        this.parentElement.removeChild(this);\n      });\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows) {\n    var i, rl;\n    if (!rows || !rows.length) {\n      return;\n    }\n    vScrollDir = 0;\n    for (i = 0, rl = rows.length; i < rl; i++) {\n      if (currentEditor && activeRow === rows[i]) {\n        makeActiveCellNormal();\n      }\n      if (rowsCache[rows[i]]) {\n        removeRowFromCache(rows[i]);\n      }\n    }\n  }\n\n  function invalidateRow(row) {\n    invalidateRows([row]);\n  }\n\n  function updateCell(row, cell) {\n    var cellNode = getCellNode(row, cell);\n    if (!cellNode) {\n      return;\n    }\n\n    var m = columns[cell],\n        d = getDataItem(row);\n    if (currentEditor && activeRow === row && activeCell === cell) {\n      currentEditor.loadValue(d);\n    } else {\n      cellNode.innerHTML = d ? callFormatter(row, cell, getDataItemValueForColumn(d, m), m, d) : \"\";\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n\n    var d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n          node = cacheEntry.cellNodesByColumnIdx[columnIdx][0];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor) {\n        currentEditor.loadValue(d);\n      } else if (d) {\n        node.innerHTML = callFormatter(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n      } else {\n        node.innerHTML = \"\";\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight() {\n    if (options.autoHeight) {\n      viewportH = options.rowHeight * getDataLengthIncludingAddNew() + (options.frozenColumn == -1 ? $headers.outerHeight() : 0);\n    } else {\n      topPanelH = options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0;\n\n      headerRowH = options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0;\n\n      footerRowH = options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0;\n\n      viewportH = parseFloat(_jquery2.default.css($container[0], \"height\", true)) - parseFloat(_jquery2.default.css($container[0], \"paddingTop\", true)) - parseFloat(_jquery2.default.css($container[0], \"paddingBottom\", true)) - parseFloat(_jquery2.default.css($headerScroller[0], \"height\")) - getVBoxDelta($headerScroller) - topPanelH - headerRowH - footerRowH;\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n  }\n\n  function getViewportWidth() {\n    viewportW = parseFloat(_jquery2.default.css($container[0], \"width\", true));\n  }\n\n  function resizeCanvas() {\n    if (!initialized) {\n      return;\n    }\n\n    paneTopH = 0;\n    paneBottomH = 0;\n    viewportTopH = 0;\n    viewportBottomH = 0;\n\n    getViewportWidth();\n    getViewportHeight();\n\n    // Account for Frozen Rows\n    if (hasFrozenRows) {\n      if (options.frozenBottom) {\n        paneTopH = viewportH - frozenRowsHeight - scrollbarDimensions.height;\n\n        paneBottomH = frozenRowsHeight + scrollbarDimensions.height;\n      } else {\n        paneTopH = frozenRowsHeight;\n        paneBottomH = viewportH - frozenRowsHeight;\n      }\n    } else {\n      paneTopH = viewportH;\n    }\n\n    // The top pane includes the top panel and the header row\n    paneTopH += topPanelH + headerRowH + footerRowH;\n\n    if (hasFrozenColumns() && options.autoHeight) {\n      paneTopH += scrollbarDimensions.height;\n    }\n\n    // The top viewport does not contain the top panel or header row\n    viewportTopH = paneTopH - topPanelH - headerRowH - footerRowH;\n\n    if (options.autoHeight) {\n      if (hasFrozenColumns()) {\n        $container.height(paneTopH + parseFloat(_jquery2.default.css($headerScrollerL[0], \"height\")));\n      }\n\n      $paneTopL.css('position', 'relative');\n    }\n\n    $paneTopL.css({\n      'top': $paneHeaderL.height(),\n      'height': paneTopH\n    });\n\n    var paneBottomTop = $paneTopL.position().top + paneTopH;\n\n    $viewportTopL.height(viewportTopH);\n\n    if (hasFrozenColumns()) {\n      $paneTopR.css({\n        'top': $paneHeaderL.height(),\n        'height': paneTopH\n      });\n\n      $viewportTopR.height(viewportTopH);\n\n      if (hasFrozenRows) {\n        $paneBottomL.css({\n          'top': paneBottomTop,\n          'height': paneBottomH\n        });\n\n        $paneBottomR.css({\n          'top': paneBottomTop,\n          'height': paneBottomH\n        });\n\n        $viewportBottomR.height(paneBottomH);\n      }\n    } else {\n      if (hasFrozenRows) {\n        $paneBottomL.css({\n          'width': '100%',\n          'height': paneBottomH\n        });\n\n        $paneBottomL.css('top', paneBottomTop);\n      }\n    }\n\n    if (hasFrozenRows) {\n      $viewportBottomL.height(paneBottomH);\n\n      if (options.frozenBottom) {\n        $canvasBottomL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()) {\n          $canvasBottomR.height(frozenRowsHeight);\n        }\n      } else {\n        $canvasTopL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()) {\n          $canvasTopR.height(frozenRowsHeight);\n        }\n      }\n    } else {\n      $viewportTopR.height(viewportTopH);\n    }\n\n    if (options.forceFitColumns) {\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll();\n    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updateRowCount() {\n    if (!initialized) {\n      return;\n    }\n\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = 0;\n    var oldH = hasFrozenRows && !options.frozenBottom ? $canvasBottomL.height() : $canvasTopL.height();\n\n    if (hasFrozenRows) {\n      var numberOfRows = getDataLength() - options.frozenRow;\n    } else {\n      var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n    }\n\n    var tempViewportH = $viewportScrollContainerY.height();\n    var oldViewportHasVScroll = viewportHasVScroll;\n    // with autoHeight, we do not need to accommodate the vertical scroll bar\n    viewportHasVScroll = !options.autoHeight && numberOfRows * options.rowHeight > tempViewportH;\n\n    makeActiveCellNormal();\n\n    // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n    var l = dataLengthIncludingAddNew - 1;\n    for (var i in rowsCache) {\n      if (i >= l) {\n        removeRowFromCache(i);\n      }\n    }\n\n    th = Math.max(options.rowHeight * numberOfRows, tempViewportH - scrollbarDimensions.height);\n\n    if (activeCellNode && activeRow > l) {\n      resetActiveCell();\n    }\n\n    if (th < maxSupportedCssHeight) {\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH) {\n      if (hasFrozenRows && !options.frozenBottom) {\n        $canvasBottomL.css(\"height\", h);\n\n        if (hasFrozenColumns()) {\n          $canvasBottomR.css(\"height\", h);\n        }\n      } else {\n        $canvasTopL.css(\"height\", h);\n        $canvasTopR.css(\"height\", h);\n      }\n\n      scrollTop = $viewportScrollContainerY[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = scrollTop + offset <= th - tempViewportH;\n\n    if (th == 0 || scrollTop == 0) {\n      page = offset = 0;\n    } else if (oldScrollTopInRange) {\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - tempViewportH);\n    }\n\n    if (h != oldH && options.autoHeight) {\n      resizeCanvas();\n    }\n\n    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n      autosizeColumns();\n    }\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft) {\n    if (viewportTop == null) {\n      viewportTop = scrollTop;\n    }\n    if (viewportLeft == null) {\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft) {\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = 3;\n\n    if (vScrollDir == -1) {\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1) {\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (cacheEntry) {\n      if (cacheEntry.cellRenderQueue.length) {\n        var $lastNode = cacheEntry.rowNode.children().last();\n        while (cacheEntry.cellRenderQueue.length) {\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = $lastNode;\n          $lastNode = $lastNode.prev();\n\n          // Hack to retrieve the frozen columns because\n          if ($lastNode.length == 0) {\n            $lastNode = (0, _jquery2.default)(cacheEntry.rowNode[0]).children().last();\n          }\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row) {\n    // Ignore frozen rows\n    if (hasFrozenRows && (options.frozenBottom && row > actualFrozenRow || // Frozen bottom rows\n    row <= actualFrozenRow // Frozen top rows\n    )) {\n      return;\n    }\n\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row];\n\n    // Remove cells outside the range.\n    var cellsToRemove = [];\n    for (var i in cacheEntry.cellNodesByColumnIdx) {\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n        continue;\n      }\n\n      // This is a string, so it needs to be cast back to a number.\n      i = i | 0;\n\n      // Ignore frozen columns\n      if (i <= options.frozenColumn) {\n        continue;\n      }\n\n      var colspan = cacheEntry.cellColSpans[i];\n      if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n        if (!(row == activeRow && i == activeCell)) {\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove;\n    while ((cellToRemove = cellsToRemove.pop()) != null) {\n      cacheEntry.cellNodesByColumnIdx[cellToRemove][0].parentElement.removeChild(cacheEntry.cellNodesByColumnIdx[cellToRemove][0]);\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (postProcessedRows[row]) {\n        delete postProcessedRows[row][cellToRemove];\n      }\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range) {\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n      cacheEntry = rowsCache[row];\n      if (!cacheEntry) {\n        continue;\n      }\n\n      // cellRenderQueue populated in renderRows() needs to be cleared first\n      ensureCellNodesInRowsCache(row);\n\n      cleanUpCells(range, row);\n\n      // Render missing cells.\n      cellsAdded = 0;\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n\n      var d = getDataItem(row);\n\n      // TODO:  shorten this loop (index? heuristics? binary search?)\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx) {\n          break;\n        }\n\n        // Already rendered.\n        if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n          i += colspan > 1 ? colspan - 1 : 0;\n          continue;\n        }\n\n        colspan = 1;\n        if (metadata) {\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = columnData && columnData.colspan || 1;\n          if (colspan === \"*\") {\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += colspan > 1 ? colspan - 1 : 0;\n      }\n\n      if (cellsAdded) {\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length) {\n      return;\n    }\n\n    var x = document.createElement(\"div\");\n    x.innerHTML = stringArray.join(\"\");\n\n    var processedRow;\n    var $node;\n    while ((processedRow = processedRows.pop()) != null) {\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n        $node = (0, _jquery2.default)(x).children().last();\n\n        if (hasFrozenColumns() && columnIdx > options.frozenColumn) {\n          (0, _jquery2.default)(cacheEntry.rowNode[1]).append($node);\n        } else {\n          (0, _jquery2.default)(cacheEntry.rowNode[0]).append($node);\n        }\n\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = $node;\n      }\n    }\n  }\n\n  function renderRows(range) {\n    var stringArrayL = [],\n        stringArrayR = [],\n        rows = [],\n        needToReselectCell = false,\n        dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n      if (rowsCache[i] || hasFrozenRows && options.frozenBottom && i == getDataLength()) {\n        continue;\n      }\n      renderedRows++;\n      rows.push(i);\n\n      // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n      rowsCache[i] = {\n        \"rowNode\": null,\n\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        \"cellColSpans\": [],\n\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        \"cellNodesByColumnIdx\": [],\n\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        \"cellRenderQueue\": []\n      };\n\n      appendRowHtml(stringArrayL, stringArrayR, i, range, dataLength);\n      if (activeCellNode && activeRow === i) {\n        needToReselectCell = true;\n      }\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length) {\n      return;\n    }\n\n    var x = document.createElement(\"div\"),\n        xRight = document.createElement(\"div\");\n\n    x.innerHTML = stringArrayL.join(\"\");\n    xRight.innerHTML = stringArrayR.join(\"\");\n\n    for (var i = 0, ii = rows.length; i < ii; i++) {\n      if (hasFrozenRows && rows[i] >= actualFrozenRow) {\n        if (hasFrozenColumns()) {\n          rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasBottomL)).add((0, _jquery2.default)(xRight.firstChild).appendTo($canvasBottomR));\n        } else {\n          rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasBottomL));\n        }\n      } else if (hasFrozenColumns()) {\n        rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasTopL)).add((0, _jquery2.default)(xRight.firstChild).appendTo($canvasTopR));\n      } else {\n        rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasTopL));\n      }\n    }\n\n    if (needToReselectCell) {\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing() {\n    if (!options.enableAsyncPostRender) {\n      return;\n    }\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n  }\n\n  function invalidatePostProcessingResults(row) {\n    delete postProcessedRows[row];\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions() {\n    for (var row in rowsCache) {\n      rowsCache[row].rowNode.css('top', getRowTop(row) + \"px\");\n    }\n  }\n\n  function render() {\n    if (!initialized) {\n      return;\n    }\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange();\n\n    // remove rows no longer in the viewport\n    cleanupRows(rendered);\n\n    // add new rows & missing cells in existing rows\n    if (lastRenderedScrollLeft != scrollLeft) {\n\n      if (hasFrozenRows) {\n\n        var renderedFrozenRows = _jquery2.default.extend(true, {}, rendered);\n\n        if (options.frozenBottom) {\n\n          renderedFrozenRows.top = actualFrozenRow;\n          renderedFrozenRows.bottom = getDataLength();\n        } else {\n\n          renderedFrozenRows.top = 0;\n          renderedFrozenRows.bottom = options.frozenRow;\n        }\n\n        cleanUpAndRenderCells(renderedFrozenRows);\n      }\n\n      cleanUpAndRenderCells(rendered);\n    }\n\n    // render missing rows\n    renderRows(rendered);\n\n    // Render frozen rows\n    if (hasFrozenRows) {\n      if (options.frozenBottom) {\n        renderRows({\n          top: actualFrozenRow,\n          bottom: getDataLength() - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      } else {\n        renderRows({\n          top: 0,\n          bottom: options.frozenRow - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      }\n    }\n\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n    startPostProcessing();\n\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n  }\n\n  function handleHeaderRowScroll() {\n    var scrollLeft = $headerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleFooterRowScroll() {\n    var scrollLeft = $footerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleMouseWheel(e, delta, deltaX, deltaY) {\n    var $rowNode = (0, _jquery2.default)(e.target).closest(\".slick-row\");\n    var rowNode = $rowNode[0];\n\n    if (rowNode != rowNodeFromLastMouseWheelEvent) {\n\n      var $gridCanvas = $rowNode.parents('.grid-canvas');\n      var left = $gridCanvas.hasClass('grid-canvas-left');\n\n      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent[left ? 0 : 1] != rowNode) {\n        var zombieRow = zombieRowNodeFromLastMouseWheelEvent[left || zombieRowNodeFromLastMouseWheelEvent.length == 1 ? 0 : 1];\n        zombieRow.parentElement.removeChild(zombieRow);\n\n        zombieRowNodeFromLastMouseWheelEvent = null;\n      }\n\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n\n    scrollTop = Math.max(0, $viewportScrollContainerY[0].scrollTop - deltaY * options.rowHeight);\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft + deltaX * 10;\n    var handled = _handleScroll(true);\n    if (handled) e.preventDefault();\n  }\n\n  function handleScroll() {\n    scrollTop = $viewportScrollContainerY[0].scrollTop;\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft;\n    return _handleScroll(false);\n  }\n\n  function _handleScroll(isMouseWheel) {\n    var maxScrollDistanceY = $viewportScrollContainerY[0].scrollHeight - $viewportScrollContainerY[0].clientHeight;\n    var maxScrollDistanceX = $viewportScrollContainerY[0].scrollWidth - $viewportScrollContainerY[0].clientWidth;\n    var hasFrozenCols = hasFrozenColumns();\n\n    // Ceiling the max scroll values\n    if (scrollTop > maxScrollDistanceY) {\n      scrollTop = maxScrollDistanceY;\n    }\n    if (scrollLeft > maxScrollDistanceX) {\n      scrollLeft = maxScrollDistanceX;\n    }\n\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist) {\n      prevScrollLeft = scrollLeft;\n\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n      $headerScrollContainer[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScrollContainer[0].scrollLeft = scrollLeft;\n      $footerRowScrollContainer[0].scrollLeft = scrollLeft;\n\n      if (hasFrozenCols) {\n        if (hasFrozenRows) {\n          $viewportTopR[0].scrollLeft = scrollLeft;\n        }\n      } else {\n        if (hasFrozenRows) {\n          $viewportTopL[0].scrollLeft = scrollLeft;\n        }\n      }\n    }\n\n    if (vScrollDist) {\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop;\n\n      if (isMouseWheel) {\n        $viewportScrollContainerY[0].scrollTop = scrollTop;\n      }\n\n      if (hasFrozenCols) {\n        if (hasFrozenRows && !options.frozenBottom) {\n          $viewportBottomL[0].scrollTop = scrollTop;\n        } else {\n          $viewportTopL[0].scrollTop = scrollTop;\n        }\n      }\n\n      // switch virtual pages if needed\n      if (vScrollDist < viewportH) {\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n        if (h == viewportH) {\n          page = 0;\n        } else {\n          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n        }\n        offset = Math.round(page * cj);\n        if (oldOffset != offset) {\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist) {\n      if (h_render) {\n        clearTimeout(h_render);\n      }\n\n      if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20) {\n        if (options.forceSyncScrolling || Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW) {\n          render();\n        } else {\n          h_render = setTimeout(render, 50);\n        }\n\n        trigger(self.onViewportChanged, {});\n      }\n    }\n\n    trigger(self.onScroll, {\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    if (hScrollDist || vScrollDist) return true;\n    return false;\n  }\n\n  function asyncPostProcessRows() {\n    var dataLength = getDataLength();\n    while (postProcessFromRow <= postProcessToRow) {\n      var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry || row >= dataLength) {\n        continue;\n      }\n\n      if (!postProcessedRows[row]) {\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n\n        var m = columns[columnIdx];\n        if (m.asyncPostRender && !postProcessedRows[row][columnIdx]) {\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n          if (node) {\n            m.asyncPostRender(node, row, getDataItem(row), m);\n          }\n          postProcessedRows[row][columnIdx] = true;\n        }\n      }\n\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n      return;\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n    var node, columnId, addedRowHash, removedRowHash;\n    for (var row in rowsCache) {\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash) {\n        for (columnId in removedRowHash) {\n          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              (0, _jquery2.default)(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash) {\n        for (columnId in addedRowHash) {\n          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              (0, _jquery2.default)(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash) {\n    if (cellCssClasses[key]) {\n      throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash\n    });\n  }\n\n  function removeCellCssStyles(key) {\n    if (!cellCssClasses[key]) {\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": null\n    });\n  }\n\n  function setCellCssStyles(key, hash) {\n    var prevHash = cellCssClasses[key];\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash\n    });\n  }\n\n  function getCellCssStyles(key) {\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed) {\n    speed = speed || 100;\n    if (rowsCache[row]) {\n      var toggleCellClass = function toggleCellClass(times) {\n        if (!times) {\n          return;\n        }\n        setTimeout(function () {\n          $cell.queue(function () {\n            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n            toggleCellClass(times - 1);\n          });\n        }, speed);\n      };\n\n      var $cell = (0, _jquery2.default)(getCellNode(row, cell));\n\n      toggleCellClass(4);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n  function handleDragInit(e, dd) {\n    var cell = getCellFromEvent(e);\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragInit, dd, e);\n    if (e.isImmediatePropagationStopped()) {\n      return retval;\n    }\n\n    // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n    // cancel out of it\n    return false;\n  }\n\n  function handleDragStart(interactEvent) {\n    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    var cell = getCellFromEvent(event);\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, interactEvent, event);\n    if (event.isImmediatePropagationStopped()) {\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(interactEvent) {\n    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    return trigger(self.onDrag, interactEvent, event);\n  }\n\n  function handleDragEnd(interactEvent) {\n    trigger(self.onDragEnd, interactEvent, _jquery2.default.Event('mousedown'));\n  }\n\n  function handleKeyDown(e) {\n    trigger(self.onKeyDown, {\n      row: activeRow,\n      cell: activeCell\n    }, e);\n    var handled = e.isImmediatePropagationStopped();\n\n    if (!handled) {\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n        if (e.which == 27) {\n          if (!getEditorLock().isActive()) {\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n          cancelEditAndSetFocus();\n        } else if (e.which == 34) {\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == 33) {\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == 37) {\n          handled = navigateLeft();\n        } else if (e.which == 39) {\n          handled = navigateRight();\n        } else if (e.which == 38) {\n          handled = navigateUp();\n        } else if (e.which == 40) {\n          handled = navigateDown();\n        } else if (e.which == 9) {\n          handled = navigateNext();\n        } else if (e.which == 13) {\n          if (options.editable) {\n            if (currentEditor) {\n              // adding new row\n              if (activeRow === getDataLength()) {\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()) {\n                makeActiveCellEditable();\n              }\n            }\n          }\n          handled = true;\n        }\n      } else if (e.which == 9 && e.shiftKey && !e.ctrlKey && !e.altKey) {\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled) {\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      }\n      // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n      // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      catch (error) {}\n    }\n  }\n\n  function handleClick(e) {\n    if (!currentEditor) {\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (e.target != document.activeElement || (0, _jquery2.default)(e.target).hasClass(\"slick-cell\")) {\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n\n        scrollRowIntoView(cell.row, false);\n        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n      }\n    }\n  }\n\n  function handleContextMenu(e) {\n    var $cell = (0, _jquery2.default)(e.target).closest(\".slick-cell\", $canvas);\n    if ($cell.length === 0) {\n      return;\n    }\n\n    // are we editing this cell?\n    if (activeCellNode === $cell[0] && currentEditor !== null) {\n      return;\n    }\n\n    trigger(self.onContextMenu, {}, e);\n  }\n\n  function handleDblClick(e) {\n    var cell = getCellFromEvent(e);\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onDblClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if (options.editable) {\n      gotoCell(cell.row, cell.cell, true);\n    }\n  }\n\n  function handleHeaderMouseEnter(e) {\n    trigger(self.onHeaderMouseEnter, {\n      \"column\": (0, _jquery2.default)(this).data(\"column\")\n    }, e);\n  }\n\n  function handleHeaderMouseLeave(e) {\n    trigger(self.onHeaderMouseLeave, {\n      \"column\": (0, _jquery2.default)(this).data(\"column\")\n    }, e);\n  }\n\n  function handleHeaderContextMenu(e) {\n    var $header = (0, _jquery2.default)(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n    trigger(self.onHeaderContextMenu, {\n      column: column\n    }, e);\n  }\n\n  function handleHeaderClick(e) {\n    var $header = (0, _jquery2.default)(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n    if (column) {\n      trigger(self.onHeaderClick, {\n        column: column\n      }, e);\n    }\n  }\n\n  function handleMouseEnter(e) {\n    trigger(self.onMouseEnter, {}, e);\n  }\n\n  function handleMouseLeave(e) {\n    trigger(self.onMouseLeave, {}, e);\n  }\n\n  function cellExists(row, cell) {\n    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n  }\n\n  function getCellFromPoint(x, y) {\n    var row = getRowFromPosition(y);\n    var cell = 0;\n\n    var w = 0;\n    for (var i = 0; i < columns.length && w < x; i++) {\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0) {\n      cell = 0;\n    }\n\n    return {\n      row: row,\n      cell: cell - 1\n    };\n  }\n\n  function getCellFromNode(cellNode) {\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n    if (!cls) {\n      throw \"getCellFromNode: cannot get cell - \" + cellNode.className;\n    }\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode) {\n    for (var row in rowsCache) {\n      for (var i in rowsCache[row].rowNode) {\n        if (rowsCache[row].rowNode[i] === rowNode) return row | 0;\n      }\n    }return null;\n  }\n\n  function getFrozenRowOffset(row) {\n    var offset = hasFrozenRows ? options.frozenBottom ? row >= actualFrozenRow ? h < viewportTopH ? actualFrozenRow * options.rowHeight : h : 0 : row >= actualFrozenRow ? frozenRowsHeight : 0 : 0;\n\n    return offset;\n  }\n\n  function getCellFromEvent(e) {\n    var row, cell;\n    var $cell = (0, _jquery2.default)(e.target).closest(\".slick-cell\", $canvas);\n    if (!$cell.length) {\n      return null;\n    }\n\n    row = getRowFromNode($cell[0].parentNode);\n\n    if (hasFrozenRows) {\n\n      var c = $cell.parents('.grid-canvas').offset();\n\n      var rowOffset = 0;\n      var isBottom = $cell.parents('.grid-canvas-bottom').length;\n\n      if (isBottom) {\n        rowOffset = options.frozenBottom ? $canvasTopL.height() : frozenRowsHeight;\n      }\n\n      row = getCellFromPoint(e.clientX - c.left, e.clientY - c.top + rowOffset + (0, _jquery2.default)(document).scrollTop()).row;\n    }\n\n    cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null) {\n      return null;\n    } else {\n      return {\n        \"row\": row,\n        \"cell\": cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell) {\n    if (!cellExists(row, cell)) {\n      return null;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var y1 = getRowTop(row) - frozenRowOffset;\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n    for (var i = 0; i < cell; i++) {\n      x1 += columns[i].width;\n\n      if (options.frozenColumn == i) {\n        x1 = 0;\n      }\n    }\n    var x2 = x1 + columns[cell].width;\n\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n  function resetActiveCell() {\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus() {\n    if (tabbingDirection == -1) {\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging) {\n    // Don't scroll to frozen cells\n    if (cell <= options.frozenColumn) {\n      return;\n    }\n\n    if (row < actualFrozenRow) {\n      scrollRowIntoView(row, doPaging);\n    }\n\n    var colspan = getColspan(row, cell);\n    var left = columnPosLeft[cell],\n        right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n        scrollRight = scrollLeft + $viewportScrollContainerX.width();\n\n    if (left < scrollLeft) {\n      $viewportScrollContainerX.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight) {\n      $viewportScrollContainerX.scrollLeft(Math.min(left, right - $viewportScrollContainerX[0].clientWidth));\n      handleScroll();\n      render();\n    }\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode) {\n    if (activeCellNode !== null) {\n      makeActiveCellNormal();\n      (0, _jquery2.default)(activeCellNode).removeClass(\"active\");\n      if (rowsCache[activeRow]) {\n        (0, _jquery2.default)(rowsCache[activeRow].rowNode).removeClass(\"active\");\n      }\n    }\n\n    var activeCellChanged = activeCellNode !== newCell;\n    activeCellNode = newCell;\n\n    if (activeCellNode != null) {\n      var $activeCellNode = (0, _jquery2.default)(activeCellNode);\n      var $activeCellOffset = $activeCellNode.offset();\n\n      var rowOffset = Math.floor($activeCellNode.parents('.grid-canvas').offset().top);\n      var isBottom = $activeCellNode.parents('.grid-canvas-bottom').length;\n\n      if (hasFrozenRows && isBottom) {\n        rowOffset -= options.frozenBottom ? $canvasTopL.height() : frozenRowsHeight;\n      }\n\n      var cell = getCellFromPoint($activeCellOffset.left, Math.ceil($activeCellOffset.top) - rowOffset);\n\n      activeRow = cell.row;\n      activeCell = activePosX = activeCell = activePosX = getCellFromNode(activeCellNode[0]);\n\n      $activeCellNode.addClass(\"active\");\n      if (rowsCache[activeRow]) {\n        (0, _jquery2.default)(rowsCache[activeRow].rowNode).addClass('active');\n      }\n\n      if (opt_editMode == null) {\n        opt_editMode = activeRow == getDataLength() || options.autoEdit;\n      }\n\n      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading) {\n          h_editorLoader = setTimeout(function () {\n            makeActiveCellEditable();\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable();\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    }\n\n    if (activeCellChanged) {\n      setTimeout(scrollActiveCellIntoView, 50);\n      trigger(self.onActiveCellChanged, getActiveCell());\n    }\n  }\n\n  function clearTextSelection() {\n    if (document.selection && document.selection.empty) {\n      try {\n        //IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e) {}\n    } else if (window.getSelection) {\n      var sel = window.getSelection();\n      if (sel && sel.removeAllRanges) {\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell) {\n    var dataLength = getDataLength();\n    // is the data for this row loaded?\n    if (row < dataLength && !getDataItem(row)) {\n      return false;\n    }\n\n    // are we in the Add New row?  can we create new from this cell?\n    if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n      return false;\n    }\n\n    // does this cell have an editor?\n    if (!getEditor(row, cell)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal() {\n    if (!currentEditor) {\n      return;\n    }\n    trigger(self.onBeforeCellEditorDestroy, {\n      editor: currentEditor\n    });\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode) {\n      var d = getDataItem(activeRow);\n      (0, _jquery2.default)(activeCellNode).removeClass(\"editable invalid\");\n      if (d) {\n        var column = columns[activeCell];\n        activeCellNode[0].innerHTML = callFormatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d);\n        invalidatePostProcessingResults(activeRow);\n      }\n    }\n\n    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n    if (navigator.userAgent.toLowerCase().match(/msie/)) {\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor) {\n    if (!activeCellNode) {\n      return;\n    }\n    if (!options.editable) {\n      throw \"Grid : makeActiveCellEditable : should never get called when options.editable is false\";\n    }\n\n    // cancel pending async call if there is one\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (trigger(self.onBeforeEditCell, {\n      row: activeRow,\n      cell: activeCell,\n      item: item,\n      column: columnDef\n    }) === false) {\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    (0, _jquery2.default)(activeCellNode).addClass(\"editable\");\n\n    // don't clear the cell if a custom editor is passed through\n    if (!editor) {\n      activeCellNode[0].innerHTML = \"\";\n    }\n\n    currentEditor = new (editor || getEditor(activeRow, activeCell))({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode[0]),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item) {\n      currentEditor.loadValue(item);\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position) {\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus() {\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()) {\n      setFocus();\n      if (options.autoEdit) {\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus() {\n    if (getEditorLock().cancelCurrentEdit()) {\n      setFocus();\n    }\n  }\n\n  function absBox(elem) {\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: (0, _jquery2.default)(elem).outerWidth(),\n      height: (0, _jquery2.default)(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width;\n\n    // walk up the tree\n    var offsetParent = elem.offsetParent;\n    while ((elem = elem.parentNode) != document.body) {\n      if (box.visible && elem.scrollHeight != elem.offsetHeight && (0, _jquery2.default)(elem).css(\"overflowY\") != \"visible\") {\n        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (box.visible && elem.scrollWidth != elem.offsetWidth && (0, _jquery2.default)(elem).css(\"overflowX\") != \"visible\") {\n        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent) {\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition() {\n    return absBox(activeCellNode[0]);\n  }\n\n  function getGridPosition() {\n    return absBox($container[0]);\n  }\n\n  function handleActiveCellPositionChange() {\n    if (!activeCellNode) {\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, {});\n\n    if (currentEditor) {\n      var cellBox = getActiveCellPosition();\n      if (currentEditor.show && currentEditor.hide) {\n        if (!cellBox.visible) {\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position) {\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor() {\n    return currentEditor;\n  }\n\n  function getActiveCell() {\n    if (!activeCellNode) {\n      return null;\n    } else {\n      return {\n        row: activeRow,\n        cell: activeCell\n      };\n    }\n  }\n\n  function getActiveCellNode() {\n    return activeCellNode;\n  }\n\n  function scrollActiveCellIntoView() {\n    if (activeRow != null && activeCell != null) {\n      scrollCellIntoView(activeRow, activeCell);\n    }\n  }\n\n  function scrollRowIntoView(row, doPaging) {\n\n    if (!hasFrozenRows || !options.frozenBottom && row > actualFrozenRow - 1 || options.frozenBottom && row < actualFrozenRow - 1) {\n\n      var viewportScrollH = $viewportScrollContainerY.height();\n\n      var rowAtTop = row * options.rowHeight;\n      var rowAtBottom = (row + 1) * options.rowHeight - viewportScrollH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n      // need to page down?\n      if ((row + 1) * options.rowHeight > scrollTop + viewportScrollH + offset) {\n        scrollTo(doPaging ? rowAtTop : rowAtBottom);\n        render();\n      }\n      // or page up?\n      else if (row * options.rowHeight < scrollTop + offset) {\n          scrollTo(doPaging ? rowAtBottom : rowAtTop);\n          render();\n        }\n    }\n  }\n\n  function scrollRowToTop(row) {\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir) {\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null) {\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      if (row >= dataLengthIncludingAddNew) {\n        row = dataLengthIncludingAddNew - 1;\n      }\n      if (row < 0) {\n        row = 0;\n      }\n\n      var cell = 0,\n          prevCell = null;\n      var prevActivePosX = activePosX;\n      while (cell <= activePosX) {\n        if (canCellBeActive(row, cell)) {\n          prevCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null) {\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown() {\n    scrollPage(1);\n  }\n\n  function navigatePageUp() {\n    scrollPage(-1);\n  }\n\n  function getColspan(row, cell) {\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (!metadata || !metadata.columns) {\n      return 1;\n    }\n\n    var columnData = columns[cell] && (metadata.columns[columns[cell].id] || metadata.columns[cell]);\n    var colspan = columnData && columnData.colspan;\n    if (colspan === \"*\") {\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row) {\n    var cell = 0;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        return cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return null;\n  }\n\n  function findLastFocusableCell(row) {\n    var cell = 0;\n    var lastFocusableCell = null;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        lastFocusableCell = cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX) {\n    if (cell >= columns.length) {\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    } while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length) {\n      return {\n        \"row\": row,\n        \"cell\": cell,\n        \"posX\": cell\n      };\n    }\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX) {\n    if (cell <= 0) {\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n    if (firstFocusableCell === null || firstFocusableCell >= cell) {\n      return null;\n    }\n\n    var prev = {\n      \"row\": row,\n      \"cell\": firstFocusableCell,\n      \"posX\": firstFocusableCell\n    };\n    var pos;\n    while (true) {\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n      if (!pos) {\n        return null;\n      }\n      if (pos.cell >= cell) {\n        return prev;\n      }\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX) {\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (true) {\n      if (++row >= dataLengthIncludingAddNew) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX) {\n    var prevCell;\n    while (true) {\n      if (--row < 0) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = cell = posX = 0;\n      if (canCellBeActive(row, cell)) {\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n    if (pos) {\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (++row < dataLengthIncludingAddNew) {\n      firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell !== null) {\n        return {\n          \"row\": row,\n          \"cell\": firstFocusableCell,\n          \"posX\": firstFocusableCell\n        };\n      }\n    }\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n      if (canCellBeActive(row, cell)) {\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n    while (!pos) {\n      pos = gotoLeft(row, cell, posX);\n      if (pos) {\n        break;\n      }\n      if (--row < 0) {\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n      if (lastSelectableCell !== null) {\n        pos = {\n          \"row\": row,\n          \"cell\": lastSelectableCell,\n          \"posX\": lastSelectableCell\n        };\n      }\n    }\n    return pos;\n  }\n\n  function navigateRight() {\n    return navigate(\"right\");\n  }\n\n  function navigateLeft() {\n    return navigate(\"left\");\n  }\n\n  function navigateDown() {\n    return navigate(\"down\");\n  }\n\n  function navigateUp() {\n    return navigate(\"up\");\n  }\n\n  function navigateNext() {\n    return navigate(\"next\");\n  }\n\n  function navigatePrev() {\n    return navigate(\"prev\");\n  }\n\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n  function navigate(dir) {\n    if (!options.enableCellNavigation) {\n      return false;\n    }\n\n    if (!activeCellNode && dir != \"prev\" && dir != \"next\") {\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return true;\n    }\n    setFocus();\n\n    var tabbingDirections = {\n      \"up\": -1,\n      \"down\": 1,\n      \"left\": -1,\n      \"right\": 1,\n      \"prev\": -1,\n      \"next\": 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n\n    var stepFunctions = {\n      \"up\": gotoUp,\n      \"down\": gotoDown,\n      \"left\": gotoLeft,\n      \"right\": gotoRight,\n      \"prev\": gotoPrev,\n      \"next\": gotoNext\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n    if (pos) {\n      if (hasFrozenRows && options.frozenBottom & pos.row == getDataLength()) {\n        return;\n      }\n\n      var isAddNewRow = pos.row == getDataLength();\n\n      if (!options.frozenBottom && pos.row >= actualFrozenRow || options.frozenBottom && pos.row < actualFrozenRow) {\n        scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n      }\n\n      setActiveCellInternal(getCellNode(pos.row, pos.cell));\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell) {\n    if (rowsCache[row]) {\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n    return null;\n  }\n\n  function setActiveCell(row, cell) {\n    if (!initialized) {\n      return;\n    }\n    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return;\n    }\n\n    if (!options.enableCellNavigation) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), false);\n  }\n\n  function canCellBeActive(row, cell) {\n    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.focusable === \"boolean\") {\n      return rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n    if (columnMetadata && columns[cell] && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === \"boolean\") {\n      return columnMetadata[columns[cell].id].focusable;\n    }\n    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === \"boolean\") {\n      return columnMetadata[cell].focusable;\n    }\n\n    return columns[cell] && columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell) {\n    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.selectable === \"boolean\") {\n      return rowMetadata.selectable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n    if (columnMetadata && typeof columnMetadata.selectable === \"boolean\") {\n      return columnMetadata.selectable;\n    }\n\n    return columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit) {\n    if (!initialized) {\n      return;\n    }\n    if (!canCellBeActive(row, cell)) {\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n\n    var newCell = getCellNode(row, cell);\n\n    // if selecting the 'add new' row, start editing right away\n    setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit);\n\n    // if no editor was created, set the focus back on the grid\n    if (!currentEditor) {\n      setFocus();\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n  function commitCurrentEdit() {\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor) {\n      if (currentEditor.isValueChanged()) {\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid) {\n          if (activeRow < getDataLength()) {\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function execute() {\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              },\n              undo: function undo() {\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              }\n            };\n\n            if (options.editCommandHandler) {\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, {\n              item: newItem,\n              column: column\n            });\n          }\n\n          // check whether the lock has been re-acquired by event handlers\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          (0, _jquery2.default)(activeCellNode).removeClass(\"invalid\");\n          (0, _jquery2.default)(activeCellNode).width(); // force layout\n          (0, _jquery2.default)(activeCellNode).addClass(\"invalid\");\n\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column\n          });\n\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n    return true;\n  }\n\n  function cancelCurrentEdit() {\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows) {\n    var ranges = [];\n    var lastCell = columns.length - 1;\n    for (var i = 0; i < rows.length; i++) {\n      ranges.push(new _slick2.default.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getSelectedRows() {\n    if (!selectionModel) {\n      throw \"Selection model is not set\";\n    }\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows) {\n    if (!selectionModel) {\n      throw \"Selection model is not set\";\n    }\n    selectionModel.setSelectedRanges(rowsToRanges(rows));\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n  this.debug = function () {\n    var s = \"\";\n\n    s += \"\\n\" + \"counter_rows_rendered:  \" + counter_rows_rendered;\n    s += \"\\n\" + \"counter_rows_removed:  \" + counter_rows_removed;\n    s += \"\\n\" + \"renderedRows:  \" + renderedRows;\n    s += \"\\n\" + \"numVisibleRows:  \" + numVisibleRows;\n    s += \"\\n\" + \"maxSupportedCssHeight:  \" + maxSupportedCssHeight;\n    s += \"\\n\" + \"n(umber of pages):  \" + n;\n    s += \"\\n\" + \"(current) page:  \" + page;\n    s += \"\\n\" + \"page height (ph):  \" + ph;\n    s += \"\\n\" + \"vScrollDir:  \" + vScrollDir;\n\n    alert(s);\n  };\n\n  // a debug helper to be able to access private members\n  this.eval = function (expr) {\n    return eval(expr);\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n  _jquery2.default.extend(this, {\n    \"slickGridVersion\": \"2.1\",\n\n    // Events\n    \"onScroll\": new _slick2.default.Event(),\n    \"onSort\": new _slick2.default.Event(),\n    \"onHeaderMouseEnter\": new _slick2.default.Event(),\n    \"onHeaderMouseLeave\": new _slick2.default.Event(),\n    \"onHeaderContextMenu\": new _slick2.default.Event(),\n    \"onHeaderClick\": new _slick2.default.Event(),\n    \"onHeaderCellRendered\": new _slick2.default.Event(),\n    \"onBeforeHeaderCellDestroy\": new _slick2.default.Event(),\n    \"onHeaderRowCellRendered\": new _slick2.default.Event(),\n    \"onFooterRowCellRendered\": new _slick2.default.Event(),\n    \"onBeforeHeaderRowCellDestroy\": new _slick2.default.Event(),\n    \"onBeforeFooterRowCellDestroy\": new _slick2.default.Event(),\n    \"onMouseEnter\": new _slick2.default.Event(),\n    \"onMouseLeave\": new _slick2.default.Event(),\n    \"onClick\": new _slick2.default.Event(),\n    \"onDblClick\": new _slick2.default.Event(),\n    \"onContextMenu\": new _slick2.default.Event(),\n    \"onKeyDown\": new _slick2.default.Event(),\n    \"onAddNewRow\": new _slick2.default.Event(),\n    \"onValidationError\": new _slick2.default.Event(),\n    \"onViewportChanged\": new _slick2.default.Event(),\n    \"onColumnsReordered\": new _slick2.default.Event(),\n    \"onColumnsResized\": new _slick2.default.Event(),\n    \"onCellChange\": new _slick2.default.Event(),\n    \"onBeforeEditCell\": new _slick2.default.Event(),\n    \"onBeforeCellEditorDestroy\": new _slick2.default.Event(),\n    \"onBeforeDestroy\": new _slick2.default.Event(),\n    \"onActiveCellChanged\": new _slick2.default.Event(),\n    \"onActiveCellPositionChanged\": new _slick2.default.Event(),\n    \"onDragInit\": new _slick2.default.Event(),\n    \"onDragStart\": new _slick2.default.Event(),\n    \"onDrag\": new _slick2.default.Event(),\n    \"onDragEnd\": new _slick2.default.Event(),\n    \"onSelectedRowsChanged\": new _slick2.default.Event(),\n    \"onCellCssStylesChanged\": new _slick2.default.Event(),\n\n    // Methods\n    \"registerPlugin\": registerPlugin,\n    \"unregisterPlugin\": unregisterPlugin,\n    \"getColumns\": getColumns,\n    \"setColumns\": setColumns,\n    \"getColumnIndex\": getColumnIndex,\n    \"updateColumnHeader\": updateColumnHeader,\n    \"setSortColumn\": setSortColumn,\n    \"setSortColumns\": setSortColumns,\n    \"getSortColumns\": getSortColumns,\n    \"autosizeColumns\": autosizeColumns,\n    \"getOptions\": getOptions,\n    \"setOptions\": setOptions,\n    \"getData\": getData,\n    \"getDataLength\": getDataLength,\n    \"getDataItem\": getDataItem,\n    \"setData\": setData,\n    \"getSelectionModel\": getSelectionModel,\n    \"setSelectionModel\": setSelectionModel,\n    \"getSelectedRows\": getSelectedRows,\n    \"setSelectedRows\": setSelectedRows,\n    \"getContainerNode\": getContainerNode,\n\n    \"render\": render,\n    \"invalidate\": invalidate,\n    \"invalidateRow\": invalidateRow,\n    \"invalidateRows\": invalidateRows,\n    \"invalidateAllRows\": invalidateAllRows,\n    \"updateCell\": updateCell,\n    \"updateRow\": updateRow,\n    \"getViewport\": getVisibleRange,\n    \"getRenderedRange\": getRenderedRange,\n    \"resizeCanvas\": resizeCanvas,\n    \"updateRowCount\": updateRowCount,\n    \"scrollRowIntoView\": scrollRowIntoView,\n    \"scrollRowToTop\": scrollRowToTop,\n    \"scrollCellIntoView\": scrollCellIntoView,\n    \"getCanvasNode\": getCanvasNode,\n    \"getCanvases\": getCanvases,\n    \"getActiveCanvasNode\": getActiveCanvasNode,\n    \"setActiveCanvasNode\": setActiveCanvasNode,\n    \"getViewportNode\": getViewportNode,\n    \"getActiveViewportNode\": getActiveViewportNode,\n    \"setActiveViewportNode\": setActiveViewportNode,\n    \"focus\": setFocus,\n\n    \"getCellFromPoint\": getCellFromPoint,\n    \"getCellFromEvent\": getCellFromEvent,\n    \"getActiveCell\": getActiveCell,\n    \"setActiveCell\": setActiveCell,\n    \"getActiveCellNode\": getActiveCellNode,\n    \"getActiveCellPosition\": getActiveCellPosition,\n    \"resetActiveCell\": resetActiveCell,\n    \"editActiveCell\": makeActiveCellEditable,\n    \"getCellEditor\": getCellEditor,\n    \"getCellNode\": getCellNode,\n    \"getCellNodeBox\": getCellNodeBox,\n    \"canCellBeSelected\": canCellBeSelected,\n    \"canCellBeActive\": canCellBeActive,\n    \"navigatePrev\": navigatePrev,\n    \"navigateNext\": navigateNext,\n    \"navigateUp\": navigateUp,\n    \"navigateDown\": navigateDown,\n    \"navigateLeft\": navigateLeft,\n    \"navigateRight\": navigateRight,\n    \"navigatePageUp\": navigatePageUp,\n    \"navigatePageDown\": navigatePageDown,\n    \"gotoCell\": gotoCell,\n    \"getTopPanel\": getTopPanel,\n    \"setTopPanelVisibility\": setTopPanelVisibility,\n    \"setHeaderRowVisibility\": setHeaderRowVisibility,\n    \"getHeaderRow\": getHeaderRow,\n    \"getHeaderRowColumn\": getHeaderRowColumn,\n    \"setFooterRowVisibility\": setFooterRowVisibility,\n    \"getFooterRow\": getFooterRow,\n    \"getFooterRowColumn\": getFooterRowColumn,\n    \"getGridPosition\": getGridPosition,\n    \"flashCell\": flashCell,\n    \"addCellCssStyles\": addCellCssStyles,\n    \"setCellCssStyles\": setCellCssStyles,\n    \"removeCellCssStyles\": removeCellCssStyles,\n    \"getCellCssStyles\": getCellCssStyles,\n    \"getFrozenRowOffset\": getFrozenRowOffset,\n\n    \"init\": finishInitialization,\n    \"destroy\": destroy,\n\n    // IEditor implementation\n    \"getEditorLock\": getEditorLock,\n    \"getEditController\": getEditController\n  });\n\n  init();\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar percentCompleteFormatter = function percentCompleteFormatter(row, cell, value, columnDef, dataContext) {\n  if (value == null || value === '') {\n    return '-';\n  } else if (value < 50) {\n    return '<span style=\\'color:red;font-weight:bold;\\'>' + value + '%</span>';\n  } else {\n    return '<span style=\\'color:green\\'>' + value + '%</span>';\n  }\n};\n\nvar percentCompleteBarFormatter = function percentCompleteBarFormatter(row, cell, value, columnDef, dataContext) {\n  if (value == null || value === '') {\n    return '';\n  }\n\n  var color = void 0;\n\n  if (value < 30) {\n    color = 'red';\n  } else if (value < 70) {\n    color = 'silver';\n  } else {\n    color = 'green';\n  }\n\n  return '<span class=\"percent-complete-bar\" style=\"background: ' + color + ';width:' + value + '%\"></span>';\n};\n\nvar yesNoFormatter = function yesNoFormatter(row, cell, value) {\n  return value ? 'Yes' : 'No';\n};\nvar checkmarkFormatter = function checkmarkFormatter(row, cell, value) {\n  return value ? '✔' : '';\n};\n\nexports.default = {\n  PercentComplete: percentCompleteFormatter,\n  PercentCompleteBar: percentCompleteBarFormatter,\n  YesNo: yesNoFormatter,\n  Checkmark: checkmarkFormatter\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RowSelectionModel = exports.RowMoveManager = exports.HeaderMenu = exports.HeaderButtons = exports.CheckboxSelectColumn = exports.CellSelectionModel = exports.CellRangeSelector = exports.CellRangeDecorator = exports.CellCopyManager = exports.AutoTooltips = undefined;\n\nvar _slick = __webpack_require__(15);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _slick3 = __webpack_require__(17);\n\nvar _slick4 = _interopRequireDefault(_slick3);\n\nvar _slick5 = __webpack_require__(19);\n\nvar _slick6 = _interopRequireDefault(_slick5);\n\nvar _slick7 = __webpack_require__(20);\n\nvar _slick8 = _interopRequireDefault(_slick7);\n\nvar _slick9 = __webpack_require__(21);\n\nvar _slick10 = _interopRequireDefault(_slick9);\n\nvar _slick11 = __webpack_require__(23);\n\nvar _slick12 = _interopRequireDefault(_slick11);\n\nvar _slick13 = __webpack_require__(25);\n\nvar _slick14 = _interopRequireDefault(_slick13);\n\nvar _slick15 = __webpack_require__(27);\n\nvar _slick16 = _interopRequireDefault(_slick15);\n\nvar _slick17 = __webpack_require__(29);\n\nvar _slick18 = _interopRequireDefault(_slick17);\n\nvar _slick19 = __webpack_require__(31);\n\nvar _slick20 = _interopRequireDefault(_slick19);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.AutoTooltips = _slick2.default;\nexports.CellCopyManager = _slick4.default;\nexports.CellRangeDecorator = _slick6.default;\nexports.CellRangeSelector = _slick8.default;\nexports.CellSelectionModel = _slick10.default;\nexports.CheckboxSelectColumn = _slick12.default;\nexports.HeaderButtons = _slick14.default;\nexports.HeaderMenu = _slick16.default;\nexports.RowMoveManager = _slick18.default;\nexports.RowSelectionModel = _slick20.default;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(16);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = AutoTooltips;\n\n/**\n * AutoTooltips plugin to show/hide tooltips when columns are too narrow to fit content.\n * @constructor\n * @param {boolean} [options.enableForCells=true]        - Enable tooltip for grid cells\n * @param {boolean} [options.enableForHeaderCells=false] - Enable tooltip for header cells\n * @param {number}  [options.maxToolTipLength=null]      - The maximum length for a tooltip\n */\n\nfunction AutoTooltips(options) {\n  var _grid = void 0;\n  var _self = this;\n  var _defaults = {\n    enableForCells: true,\n    enableForHeaderCells: false,\n    maxToolTipLength: null\n  };\n\n  /**\n   * Initialize plugin.\n   */\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    if (options.enableForCells) _grid.onMouseEnter.subscribe(handleMouseEnter);\n    if (options.enableForHeaderCells) _grid.onHeaderMouseEnter.subscribe(handleHeaderMouseEnter);\n  }\n\n  /**\n   * Destroy plugin.\n   */\n  function destroy() {\n    if (options.enableForCells) _grid.onMouseEnter.unsubscribe(handleMouseEnter);\n    if (options.enableForHeaderCells) _grid.onHeaderMouseEnter.unsubscribe(handleHeaderMouseEnter);\n  }\n\n  /**\n   * Handle mouse entering grid cell to add/remove tooltip.\n   * @param {jQuery.Event} e - The event\n   */\n  function handleMouseEnter(e) {\n    var cell = _grid.getCellFromEvent(e);\n    if (cell) {\n      var $node = (0, _jquery2.default)(_grid.getCellNode(cell.row, cell.cell));\n      var text = void 0;\n      if ($node.innerWidth() < $node[0].scrollWidth) {\n        text = _jquery2.default.trim($node.text());\n        if (options.maxToolTipLength && text.length > options.maxToolTipLength) {\n          text = text.substr(0, options.maxToolTipLength - 3) + '...';\n        }\n      } else {\n        text = '';\n      }\n      $node.attr('title', text);\n    }\n  }\n\n  /**\n   * Handle mouse entering header cell to add/remove tooltip.\n   * @param {jQuery.Event} e     - The event\n   * @param {object} args.column - The column definition\n   */\n  function handleHeaderMouseEnter(e, args) {\n    var column = args.column,\n        $node = (0, _jquery2.default)(e.target).closest('.slick-header-column');\n    if (column && !column.toolTip) {\n      $node.attr('title', $node.innerWidth() < $node[0].scrollWidth ? column.name : '');\n    }\n  }\n\n  // Public API\n  Object.assign(this, {\n    init: init,\n    destroy: destroy\n  });\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(18);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar keyCode = _slick2.default.keyCode;\nexports.default = CellCopyManager;\n\n\nfunction CellCopyManager() {\n  var _grid;\n  var _self = this;\n  var _copiedRanges;\n\n  function init(grid) {\n    _grid = grid;\n    _grid.onKeyDown.subscribe(handleKeyDown);\n  }\n\n  function destroy() {\n    _grid.onKeyDown.unsubscribe(handleKeyDown);\n  }\n\n  function handleKeyDown(e, args) {\n    var ranges;\n    if (!_grid.getEditorLock().isActive()) {\n      if (e.which == keyCode.ESCAPE) {\n        if (_copiedRanges) {\n          e.preventDefault();\n          clearCopySelection();\n          _self.onCopyCancelled.notify({ ranges: _copiedRanges });\n          _copiedRanges = null;\n        }\n      }\n\n      if (e.which == 67 && (e.ctrlKey || e.metaKey)) {\n        ranges = _grid.getSelectionModel().getSelectedRanges();\n        if (ranges.length != 0) {\n          e.preventDefault();\n          _copiedRanges = ranges;\n          markCopySelection(ranges);\n          _self.onCopyCells.notify({ ranges: ranges });\n        }\n      }\n\n      if (e.which == 86 && (e.ctrlKey || e.metaKey)) {\n        if (_copiedRanges) {\n          e.preventDefault();\n          clearCopySelection();\n          ranges = _grid.getSelectionModel().getSelectedRanges();\n          _self.onPasteCells.notify({ from: _copiedRanges, to: ranges });\n          _copiedRanges = null;\n        }\n      }\n    }\n  }\n\n  function markCopySelection(ranges) {\n    var columns = _grid.getColumns();\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        hash[j] = {};\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n          hash[j][columns[k].id] = 'copied';\n        }\n      }\n    }\n    _grid.setCellCssStyles('copy-manager', hash);\n  }\n\n  function clearCopySelection() {\n    _grid.removeCellCssStyles('copy-manager');\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n    clearCopySelection: clearCopySelection,\n\n    onCopyCells: new _slick2.default.Event(),\n    onCopyCancelled: new _slick2.default.Event(),\n    onPasteCells: new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(3);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(4);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(22);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _slick3 = __webpack_require__(4);\n\nvar _slick4 = _interopRequireDefault(_slick3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = CellSelectionModel;\n\n\nfunction CellSelectionModel() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    selectActiveCell: true\n  };\n\n  var _grid = void 0;\n  var _canvas = void 0;\n  var _ranges = [];\n  var _self = this;\n  var _selector = new _slick4.default({\n    selectionCss: {\n      border: '2px solid black'\n    }\n  });\n  var _options = void 0;\n  var _defaults = {\n    selectActiveCell: true\n  };\n\n  function init(grid) {\n    _options = Object.assign({}, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _grid.onActiveCellChanged.subscribe(handleActiveCellChange);\n    _grid.onKeyDown.subscribe(handleKeyDown);\n    grid.registerPlugin(_selector);\n    _selector.onCellRangeSelected.subscribe(handleCellRangeSelected);\n    _selector.onBeforeCellRangeSelected.subscribe(handleBeforeCellRangeSelected);\n  }\n\n  function destroy() {\n    _grid.onActiveCellChanged.unsubscribe(handleActiveCellChange);\n    _grid.onKeyDown.unsubscribe(handleKeyDown);\n    _selector.onCellRangeSelected.unsubscribe(handleCellRangeSelected);\n    _selector.onBeforeCellRangeSelected.unsubscribe(handleBeforeCellRangeSelected);\n    _grid.unregisterPlugin(_selector);\n  }\n\n  function removeInvalidRanges(ranges) {\n    var result = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var r = ranges[i];\n      if (_grid.canCellBeSelected(r.fromRow, r.fromCell) && _grid.canCellBeSelected(r.toRow, r.toCell)) {\n        result.push(r);\n      }\n    }\n\n    return result;\n  }\n\n  function setSelectedRanges(ranges) {\n    // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n    if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) {\n      return;\n    }\n\n    _ranges = removeInvalidRanges(ranges);\n    _self.onSelectedRangesChanged.notify(_ranges);\n  }\n\n  function getSelectedRanges() {\n    return _ranges;\n  }\n\n  function handleBeforeCellRangeSelected(e, args) {\n    if (_grid.getEditorLock().isActive()) {\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  function handleCellRangeSelected(e, args) {\n    setSelectedRanges([args.range]);\n  }\n\n  function handleActiveCellChange(e, args) {\n    if (_options.selectActiveCell && args.row != null && args.cell != null) {\n      setSelectedRanges([new _slick2.default.Range(args.row, args.cell)]);\n    }\n  }\n\n  function handleKeyDown(e) {\n    /** *\n     * Кey codes\n     * 37 left\n     * 38 up\n     * 39 right\n     * 40 down\n     */\n    var ranges = void 0,\n        last = void 0;\n    var active = _grid.getActiveCell();\n\n    if (active && e.shiftKey && !e.ctrlKey && !e.altKey && (e.which == 37 || e.which == 39 || e.which == 38 || e.which == 40)) {\n      ranges = getSelectedRanges();\n      if (!ranges.length) ranges.push(new _slick2.default.Range(active.row, active.cell));\n\n      // keyboard can work with last range only\n      last = ranges.pop();\n\n      // can't handle selection out of active cell\n      if (!last.contains(active.row, active.cell)) last = new _slick2.default.Range(active.row, active.cell);\n\n      var dRow = last.toRow - last.fromRow,\n          dCell = last.toCell - last.fromCell,\n\n      // walking direction\n      dirRow = active.row == last.fromRow ? 1 : -1,\n          dirCell = active.cell == last.fromCell ? 1 : -1;\n\n      if (e.which == 37) {\n        dCell -= dirCell;\n      } else if (e.which == 39) {\n        dCell += dirCell;\n      } else if (e.which == 38) {\n        dRow -= dirRow;\n      } else if (e.which == 40) {\n        dRow += dirRow;\n      }\n\n      // define new selection range\n      var new_last = new _slick2.default.Range(active.row, active.cell, active.row + dirRow * dRow, active.cell + dirCell * dCell);\n      if (removeInvalidRanges([new_last]).length) {\n        ranges.push(new_last);\n        var viewRow = dirRow > 0 ? new_last.toRow : new_last.fromRow;\n        var viewCell = dirCell > 0 ? new_last.toCell : new_last.fromCell;\n        _grid.scrollRowIntoView(viewRow);\n        _grid.scrollCellIntoView(viewRow, viewCell);\n      } else ranges.push(last);\n\n      setSelectedRanges(ranges);\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  Object.assign(this, {\n    getSelectedRanges: getSelectedRanges,\n    setSelectedRanges: setSelectedRanges,\n\n    init: init,\n    destroy: destroy,\n\n    onSelectedRangesChanged: new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(24);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = CheckboxSelectColumn;\n\n\nfunction CheckboxSelectColumn(options) {\n  var _grid = void 0;\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _selectedRowsLookup = {};\n  var _defaults = {\n    columnId: '_checkbox_selector',\n    cssClass: null,\n    toolTip: 'Select/Deselect All',\n    width: 30\n  };\n\n  var _options = _jquery2.default.extend(true, {}, _defaults, options);\n\n  function init(grid) {\n    _grid = grid;\n    _handler.subscribe(_grid.onSelectedRowsChanged, handleSelectedRowsChanged).subscribe(_grid.onClick, handleClick).subscribe(_grid.onHeaderClick, handleHeaderClick).subscribe(_grid.onKeyDown, handleKeyDown);\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function handleSelectedRowsChanged(e, args) {\n    var selectedRows = _grid.getSelectedRows();\n    var lookup = {},\n        row = void 0,\n        i = void 0;\n    for (i = 0; i < selectedRows.length; i++) {\n      row = selectedRows[i];\n      lookup[row] = true;\n      if (lookup[row] !== _selectedRowsLookup[row]) {\n        _grid.invalidateRow(row);\n        delete _selectedRowsLookup[row];\n      }\n    }\n    for (i in _selectedRowsLookup) {\n      _grid.invalidateRow(i);\n    }\n    _selectedRowsLookup = lookup;\n    _grid.render();\n\n    if (selectedRows.length && selectedRows.length == _grid.getDataLength()) {\n      _grid.updateColumnHeader(_options.columnId, \"<input type='checkbox' checked='checked'>\", _options.toolTip);\n    } else {\n      _grid.updateColumnHeader(_options.columnId, \"<input type='checkbox'>\", _options.toolTip);\n    }\n  }\n\n  function handleKeyDown(e, args) {\n    if (e.which == 32) {\n      if (_grid.getColumns()[args.cell].id === _options.columnId) {\n        // if editing, try to commit\n        if (!_grid.getEditorLock().isActive() || _grid.getEditorLock().commitCurrentEdit()) {\n          toggleRowSelection(args.row);\n        }\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function handleClick(e, args) {\n    // clicking on a row select checkbox\n    if (_grid.getColumns()[args.cell].id === _options.columnId && (0, _jquery2.default)(e.target).is(':checkbox')) {\n      // if editing, try to commit\n      if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      toggleRowSelection(args.row);\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function toggleRowSelection(row) {\n    if (_selectedRowsLookup[row]) {\n      _grid.setSelectedRows(_jquery2.default.grep(_grid.getSelectedRows(), function (n) {\n        return n != row;\n      }));\n    } else {\n      _grid.setSelectedRows(_grid.getSelectedRows().concat(row));\n    }\n  }\n\n  function handleHeaderClick(e, args) {\n    if (args.column.id == _options.columnId && (0, _jquery2.default)(e.target).is(':checkbox')) {\n      // if editing, try to commit\n      if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      if ((0, _jquery2.default)(e.target).is(':checked')) {\n        var rows = [];\n        for (var i = 0; i < _grid.getDataLength(); i++) {\n          rows.push(i);\n        }\n        _grid.setSelectedRows(rows);\n      } else {\n        _grid.setSelectedRows([]);\n      }\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function getColumnDefinition() {\n    return {\n      id: _options.columnId,\n      name: \"<input type='checkbox'>\",\n      toolTip: _options.toolTip,\n      field: 'sel',\n      width: _options.width,\n      resizable: false,\n      sortable: false,\n      cssClass: _options.cssClass,\n      formatter: checkboxSelectionFormatter\n    };\n  }\n\n  function checkboxSelectionFormatter(row, cell, value, columnDef, dataContext) {\n    if (dataContext) {\n      return _selectedRowsLookup[row] ? \"<input type='checkbox' checked='checked'>\" : \"<input type='checkbox'>\";\n    }\n    return null;\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n\n    getColumnDefinition: getColumnDefinition\n  });\n}\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(26);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = HeaderButtons;\n/** *\n * A plugin to add custom buttons to column headers.\n *\n * USAGE:\n *\n * Add the plugin .js & .css files and register it with the grid.\n *\n * To specify a custom button in a column header, extend the column definition like so:\n *\n *   var columns = [\n *     {\n *       id: 'myColumn',\n *       name: 'My column',\n *\n *       // This is the relevant part\n *       header: {\n *          buttons: [\n *              {\n *                // button options\n *              },\n *              {\n *                // button options\n *              }\n *          ]\n *       }\n *     }\n *   ];\n *\n * Available button options:\n *    cssClass:     CSS class to add to the button.\n *    image:        Relative button image path.\n *    tooltip:      Button tooltip.\n *    showOnHover:  Only show the button on hover.\n *    handler:      Button click handler.\n *    command:      A command identifier to be passed to the onCommand event handlers.\n *\n * The plugin exposes the following events:\n *    onCommand:    Fired on button click for buttons with 'command' specified.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            command:  Button command identified.\n *            button:   Button options.  Note that you can change the button options in your\n *                      event handler, and the column header will be automatically updated to\n *                      reflect them.  This is useful if you want to implement something like a\n *                      toggle button.\n *\n *\n * @param options {Object} Options:\n *    buttonCssClass:   a CSS class to use for buttons (default 'slick-header-button')\n * @class Slick.Plugins.HeaderButtons\n * @constructor\n */\n\nfunction HeaderButtons(options) {\n  var _grid;\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _defaults = {\n    buttonCssClass: 'slick-header-button'\n  };\n\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler.subscribe(_grid.onHeaderCellRendered, handleHeaderCellRendered).subscribe(_grid.onBeforeHeaderCellDestroy, handleBeforeHeaderCellDestroy);\n\n    // Force the grid to re-render the header now that the events are hooked up.\n    _grid.setColumns(_grid.getColumns());\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function handleHeaderCellRendered(e, args) {\n    var column = args.column;\n\n    if (column.header && column.header.buttons) {\n      // Append buttons in reverse order since they are floated to the right.\n      var i = column.header.buttons.length;\n      while (i--) {\n        var button = column.header.buttons[i];\n        var btn = (0, _jquery2.default)('<div></div>').addClass(options.buttonCssClass).data('column', column).data('button', button);\n\n        if (button.showOnHover) {\n          btn.addClass('slick-header-button-hidden');\n        }\n\n        if (button.image) {\n          btn.css('backgroundImage', 'url(' + button.image + ')');\n        }\n\n        if (button.cssClass) {\n          btn.addClass(button.cssClass);\n        }\n\n        if (button.tooltip) {\n          btn.attr('title', button.tooltip);\n        }\n\n        if (button.command) {\n          btn.data('command', button.command);\n        }\n\n        if (button.handler) {\n          btn.bind('click', button.handler);\n        }\n\n        btn.bind('click', handleButtonClick).appendTo(args.node);\n        args.node.classList.add('has-buttons');\n      }\n    }\n  }\n\n  function handleBeforeHeaderCellDestroy(e, args) {\n    var column = args.column;\n\n    if (column.header && column.header.buttons) {\n      // Removing buttons via jQuery will also clean up any event handlers and data.\n      // NOTE: If you attach event handlers directly or using a different framework,\n      //       you must also clean them up here to avoid memory leaks.\n      (0, _jquery2.default)(args.node).find('.' + options.buttonCssClass).remove();\n    }\n  }\n\n  function handleButtonClick(e) {\n    var command = (0, _jquery2.default)(this).data('command');\n    var columnDef = (0, _jquery2.default)(this).data('column');\n    var button = (0, _jquery2.default)(this).data('button');\n\n    if (command != null) {\n      _self.onCommand.notify({\n        'grid': _grid,\n        'column': columnDef,\n        'command': command,\n        'button': button\n      }, e, _self);\n\n      // Update the header in case the user updated the button definition in the handler.\n      _grid.updateColumnHeader(columnDef.id);\n    }\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n\n    'onCommand': new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(28);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import './slick.headermenu.css';\n\nexports.default = HeaderMenu;\n\n/** *\n * A plugin to add drop-down menus to column headers.\n *\n * USAGE:\n *\n * Add the plugin .js & .css files and register it with the grid.\n *\n * To specify a menu in a column header, extend the column definition like so:\n *\n *   const columns = [\n *     {\n *       id: 'myColumn',\n *       name: 'My column',\n *\n *       // This is the relevant part\n *       header: {\n *          menu: {\n *              items: [\n *                {\n *                  // menu item options\n *                },\n *                {\n *                  // menu item options\n *                }\n *              ]\n *          }\n *       }\n *     }\n *   ];\n *\n *\n * Available menu options:\n *    tooltip:      Menu button tooltip.\n *\n *\n * Available menu item options:\n *    title:        Menu item text.\n *    disabled:     Whether the item is disabled.\n *    tooltip:      Item tooltip.\n *    command:      A command identifier to be passed to the onCommand event handlers.\n *    iconCssClass: A CSS class to be added to the menu item icon.\n *    iconImage:    A url to the icon image.\n *\n *\n * The plugin exposes the following events:\n *    onBeforeMenuShow:   Fired before the menu is shown.  You can customize the menu or dismiss it by returning false.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            menu:     Menu options.  Note that you can change the menu items here.\n *\n *    onCommand:    Fired on menu item click for buttons with 'command' specified.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            command:  Button command identified.\n *            button:   Button options.  Note that you can change the button options in your\n *                      event handler, and the column header will be automatically updated to\n *                      reflect them.  This is useful if you want to implement something like a\n *                      toggle button.\n *\n *\n * @param options {Object} Options:\n *    buttonCssClass:   an extra CSS class to add to the menu button\n *    buttonImage:      a url to the menu button image (default '../images/down.gif')\n * @class Slick.Plugins.HeaderButtons\n * @constructor\n */\n\nfunction HeaderMenu(options) {\n  var _grid = void 0;\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _defaults = {\n    buttonCssClass: null,\n    buttonImage: null\n  };\n\n  var $menu = void 0;\n  var $activeHeaderColumn = void 0;\n\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler.subscribe(_grid.onHeaderCellRendered, handleHeaderCellRendered).subscribe(_grid.onBeforeHeaderCellDestroy, handleBeforeHeaderCellDestroy);\n\n    // Force the grid to re-render the header now that the events are hooked up.\n    _grid.setColumns(_grid.getColumns());\n\n    // Hide the menu on outside click.\n    (0, _jquery2.default)(document.body).bind('mousedown', handleBodyMouseDown);\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n    (0, _jquery2.default)(document.body).unbind('mousedown', handleBodyMouseDown);\n  }\n\n  function handleBodyMouseDown(e) {\n    if ($menu && $menu[0] != e.target && !_jquery2.default.contains($menu[0], e.target)) {\n      hideMenu();\n    }\n  }\n\n  function hideMenu() {\n    if ($menu) {\n      $menu.remove();\n      $menu = null;\n      $activeHeaderColumn.removeClass('slick-header-column-active');\n    }\n  }\n\n  function handleHeaderCellRendered(e, args) {\n    var column = args.column;\n    var menu = column.header && column.header.menu;\n\n    if (menu) {\n      var $el = (0, _jquery2.default)('<div></div>').addClass('slick-header-menubutton').data('column', column).data('menu', menu);\n\n      if (options.buttonCssClass) {\n        $el.addClass(options.buttonCssClass);\n      }\n\n      if (options.buttonImage) {\n        $el.css('background-image', 'url(' + options.buttonImage + ')');\n      }\n\n      if (menu.tooltip) {\n        $el.attr('title', menu.tooltip);\n      }\n\n      $el.bind('click', showMenu).appendTo(args.node);\n    }\n  }\n\n  function handleBeforeHeaderCellDestroy(e, args) {\n    var column = args.column;\n\n    if (column.header && column.header.menu) {\n      (0, _jquery2.default)(args.node).find('.slick-header-menubutton').remove();\n    }\n  }\n\n  function showMenu(e) {\n    var $menuButton = (0, _jquery2.default)(this);\n    var menu = $menuButton.data('menu');\n    var columnDef = $menuButton.data('column');\n\n    // Let the user modify the menu or cancel altogether,\n    // or provide alternative menu implementation.\n    if (_self.onBeforeMenuShow.notify({\n      'grid': _grid,\n      'column': columnDef,\n      'menu': menu\n    }, e, _self) == false) {\n      return;\n    }\n\n    if (!$menu) {\n      $menu = (0, _jquery2.default)(\"<div class='slick-header-menu'></div>\").appendTo(_grid.getContainerNode());\n    }\n    $menu.empty();\n\n    // Construct the menu items.\n    for (var i = 0; i < menu.items.length; i++) {\n      var item = menu.items[i];\n\n      var $li = (0, _jquery2.default)(\"<div class='slick-header-menuitem'></div>\").data('command', item.command || '').data('column', columnDef).data('item', item).bind('click', handleMenuItemClick).appendTo($menu);\n\n      if (item.disabled) {\n        $li.addClass('slick-header-menuitem-disabled');\n      }\n\n      if (item.tooltip) {\n        $li.attr('title', item.tooltip);\n      }\n\n      var $icon = (0, _jquery2.default)(\"<div class='slick-header-menuicon'></div>\").appendTo($li);\n\n      if (item.iconCssClass) {\n        $icon.addClass(item.iconCssClass);\n      }\n\n      if (item.iconImage) {\n        $icon.css('background-image', 'url(' + item.iconImage + ')');\n      }\n\n      (0, _jquery2.default)(\"<span class='slick-header-menucontent'></span>\").text(item.title).appendTo($li);\n    }\n\n    // Position the menu.\n    $menu.offset({ top: (0, _jquery2.default)(this).offset().top + (0, _jquery2.default)(this).height(), left: (0, _jquery2.default)(this).offset().left });\n\n    // Mark the header as active to keep the highlighting.\n    $activeHeaderColumn = $menuButton.closest('.slick-header-column');\n    $activeHeaderColumn.addClass('slick-header-column-active');\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleMenuItemClick(e) {\n    var command = (0, _jquery2.default)(this).data('command');\n    var columnDef = (0, _jquery2.default)(this).data('column');\n    var item = (0, _jquery2.default)(this).data('item');\n\n    if (item.disabled) {\n      return;\n    }\n\n    hideMenu();\n\n    if (command != null && command != '') {\n      _self.onCommand.notify({\n        'grid': _grid,\n        'column': columnDef,\n        'command': command,\n        'item': item\n      }, e, _self);\n    }\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n\n    'onBeforeMenuShow': new _slick2.default.Event(),\n    'onCommand': new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(30);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = RowMoveManager;\n\n\nfunction RowMoveManager(options) {\n  var _grid = void 0;\n  var _canvas = void 0;\n  var _dragging = void 0;\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _defaults = {\n    cancelEditOnDrag: false\n  };\n\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _handler.subscribe(_grid.onDragInit, handleDragInit).subscribe(_grid.onDragStart, handleDragStart).subscribe(_grid.onDrag, handleDrag).subscribe(_grid.onDragEnd, handleDragEnd);\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function handleDragInit(e, dd) {\n    // prevent the grid from cancelling drag'n'drop by default\n    e.stopImmediatePropagation();\n  }\n\n  function handleDragStart(e, dd) {\n    var cell = _grid.getCellFromEvent(e);\n\n    if (options.cancelEditOnDrag && _grid.getEditorLock().isActive()) {\n      _grid.getEditorLock().cancelCurrentEdit();\n    }\n\n    if (_grid.getEditorLock().isActive() || !/move|selectAndMove/.test(_grid.getColumns()[cell.cell].behavior)) {\n      return false;\n    }\n\n    _dragging = true;\n    e.stopImmediatePropagation();\n\n    var selectedRows = _grid.getSelectedRows();\n\n    if (selectedRows.length == 0 || $.inArray(cell.row, selectedRows) == -1) {\n      selectedRows = [cell.row];\n      _grid.setSelectedRows(selectedRows);\n    }\n\n    var rowHeight = _grid.getOptions().rowHeight;\n\n    dd.selectedRows = selectedRows;\n\n    dd.selectionProxy = $(\"<div class='slick-reorder-proxy'/>\").css('position', 'absolute').css('zIndex', '99999').css('width', $(_canvas).innerWidth()).css('height', rowHeight * selectedRows.length).appendTo(_canvas);\n\n    dd.guide = $(\"<div class='slick-reorder-guide'/>\").css('position', 'absolute').css('zIndex', '99998').css('width', $(_canvas).innerWidth()).css('top', -1000).appendTo(_canvas);\n\n    dd.insertBefore = -1;\n  }\n\n  function handleDrag(e, dd) {\n    if (!_dragging) {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n\n    var top = e.pageY - $(_canvas).offset().top;\n    dd.selectionProxy.css('top', top - 5);\n\n    var insertBefore = Math.max(0, Math.min(Math.round(top / _grid.getOptions().rowHeight), _grid.getDataLength()));\n    if (insertBefore !== dd.insertBefore) {\n      var eventData = {\n        'rows': dd.selectedRows,\n        'insertBefore': insertBefore\n      };\n\n      if (_self.onBeforeMoveRows.notify(eventData) === false) {\n        dd.guide.css('top', -1000);\n        dd.canMove = false;\n      } else {\n        dd.guide.css('top', insertBefore * _grid.getOptions().rowHeight);\n        dd.canMove = true;\n      }\n\n      dd.insertBefore = insertBefore;\n    }\n  }\n\n  function handleDragEnd(e, dd) {\n    if (!_dragging) {\n      return;\n    }\n    _dragging = false;\n    e.stopImmediatePropagation();\n\n    dd.guide.remove();\n    dd.selectionProxy.remove();\n\n    if (dd.canMove) {\n      var eventData = {\n        'rows': dd.selectedRows,\n        'insertBefore': dd.insertBefore\n      };\n      // TODO:  _grid.remapCellCssClasses ?\n      _self.onMoveRows.notify(eventData);\n    }\n  }\n\n  Object.assign(this, {\n    'onBeforeMoveRows': new _slick2.default.Event(),\n    'onMoveRows': new _slick2.default.Event(),\n    init: init,\n    destroy: destroy\n  });\n}\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(32);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = RowSelectionModel;\n\n\nfunction RowSelectionModel(options) {\n  var _grid = void 0;\n  var _ranges = [];\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _inHandler = void 0;\n  var _options = void 0;\n  var _defaults = {\n    selectActiveRow: true\n  };\n\n  function init(grid) {\n    _options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler.subscribe(_grid.onActiveCellChanged, wrapHandler(handleActiveCellChange));\n    _handler.subscribe(_grid.onKeyDown, wrapHandler(handleKeyDown));\n    _handler.subscribe(_grid.onClick, wrapHandler(handleClick));\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function wrapHandler(handler) {\n    return function () {\n      if (!_inHandler) {\n        _inHandler = true;\n        handler.apply(this, arguments);\n        _inHandler = false;\n      }\n    };\n  }\n\n  function rangesToRows(ranges) {\n    var rows = [];\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        rows.push(j);\n      }\n    }\n    return rows;\n  }\n\n  function rowsToRanges(rows) {\n    var ranges = [];\n    var lastCell = _grid.getColumns().length - 1;\n    for (var i = 0; i < rows.length; i++) {\n      ranges.push(new _slick2.default.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getRowsRange(from, to) {\n    var i = void 0;\n    var rows = [];\n    for (i = from; i <= to; i++) {\n      rows.push(i);\n    }\n    for (i = to; i < from; i++) {\n      rows.push(i);\n    }\n    return rows;\n  }\n\n  function getSelectedRows() {\n    return rangesToRows(_ranges);\n  }\n\n  function setSelectedRows(rows) {\n    setSelectedRanges(rowsToRanges(rows));\n  }\n\n  function setSelectedRanges(ranges) {\n    // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n    if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) {\n      return;\n    }\n    _ranges = ranges;\n    _self.onSelectedRangesChanged.notify(_ranges);\n  }\n\n  function getSelectedRanges() {\n    return _ranges;\n  }\n\n  function handleActiveCellChange(e, data) {\n    if (_options.selectActiveRow && data.row != null) {\n      setSelectedRanges([new _slick2.default.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n    }\n  }\n\n  function handleKeyDown(e) {\n    var activeRow = _grid.getActiveCell();\n    if (activeRow && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && (e.which == 38 || e.which == 40)) {\n      var selectedRows = getSelectedRows();\n      selectedRows.sort(function (x, y) {\n        return x - y;\n      });\n\n      if (!selectedRows.length) {\n        selectedRows = [activeRow.row];\n      }\n\n      var top = selectedRows[0];\n      var bottom = selectedRows[selectedRows.length - 1];\n      var active = void 0;\n\n      if (e.which == 40) {\n        active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n      } else {\n        active = activeRow.row < bottom ? --bottom : --top;\n      }\n\n      if (active >= 0 && active < _grid.getDataLength()) {\n        _grid.scrollRowIntoView(active);\n        _ranges = rowsToRanges(getRowsRange(top, bottom));\n        setSelectedRanges(_ranges);\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  function handleClick(e) {\n    var cell = _grid.getCellFromEvent(e);\n    if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)) {\n      return false;\n    }\n\n    if (!_grid.getOptions().multiSelect || !e.ctrlKey && !e.shiftKey && !e.metaKey) {\n      return false;\n    }\n\n    var selection = rangesToRows(_ranges);\n    var idx = _jquery2.default.inArray(cell.row, selection);\n\n    if (idx === -1 && (e.ctrlKey || e.metaKey)) {\n      selection.push(cell.row);\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (idx !== -1 && (e.ctrlKey || e.metaKey)) {\n      selection = _jquery2.default.grep(selection, function (o, i) {\n        return o !== cell.row;\n      });\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (selection.length && e.shiftKey) {\n      var last = selection.pop();\n      var from = Math.min(cell.row, last);\n      var to = Math.max(cell.row, last);\n      selection = [];\n      for (var i = from; i <= to; i++) {\n        if (i !== last) {\n          selection.push(i);\n        }\n      }\n      selection.push(last);\n      _grid.setActiveCell(cell.row, cell.cell);\n    }\n\n    _ranges = rowsToRanges(selection);\n    setSelectedRanges(_ranges);\n    e.stopImmediatePropagation();\n\n    return true;\n  }\n\n  Object.assign(this, {\n    getSelectedRows: getSelectedRows,\n    setSelectedRows: setSelectedRows,\n\n    getSelectedRanges: getSelectedRanges,\n    setSelectedRanges: setSelectedRanges,\n\n    init: init,\n    destroy: destroy,\n\n    'onSelectedRangesChanged': new _slick2.default.Event()\n  });\n}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// slick.es6.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c3de2307b5b76cb48239","import $ from 'jquery';\n\n/** *\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\nconst Slick = {\n  Event: Event,\n  EventData: EventData,\n  EventHandler: EventHandler,\n  Range: Range,\n  NonDataRow: NonDataItem,\n  Group: Group,\n  GroupTotals: GroupTotals,\n  EditorLock: EditorLock,\n  /** *\n   * A global singleton editor lock.\n   * @class GlobalEditorLock\n   * @static\n   * @constructor\n   */\n  GlobalEditorLock: new EditorLock(),\n  TreeColumns: TreeColumns,\n\n  keyCode: {\n    BACKSPACE: 8,\n    DELETE: 46,\n    DOWN: 40,\n    END: 35,\n    ENTER: 13,\n    ESCAPE: 27,\n    HOME: 36,\n    INSERT: 45,\n    LEFT: 37,\n    PAGE_DOWN: 34,\n    PAGE_UP: 33,\n    RIGHT: 39,\n    TAB: 9,\n    UP: 38,\n    SPACE: 32\n  }\n};\n\nexport default Slick;\n\n/***\n * An event object for passing data to event handlers and letting them control propagation.\n * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n * @class EventData\n * @constructor\n */\nfunction EventData(){\n  var isPropagationStopped = false;\n  var isImmediatePropagationStopped = false;\n\n  /***\n   * Stops event from propagating up the DOM tree.\n   * @method stopPropagation\n   */\n  this.stopPropagation = function(){\n    isPropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopPropagation was called on this event object.\n   * @method isPropagationStopped\n   * @return {Boolean}\n   */\n  this.isPropagationStopped = function(){\n    return isPropagationStopped;\n  };\n\n  /***\n   * Prevents the rest of the handlers from being executed.\n   * @method stopImmediatePropagation\n   */\n  this.stopImmediatePropagation = function(){\n    isImmediatePropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopImmediatePropagation was called on this event object.\\\n   * @method isImmediatePropagationStopped\n   * @return {Boolean}\n   */\n  this.isImmediatePropagationStopped = function(){\n    return isImmediatePropagationStopped;\n  };\n}\n\n/***\n * A simple publisher-subscriber implementation.\n * @class Event\n * @constructor\n */\nfunction Event(){\n  var handlers = [];\n\n  /***\n   * Adds an event handler to be called when the event is fired.\n   * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n   * object the event was fired with.<p>\n   * @method subscribe\n   * @param fn {Function} Event handler.\n   */\n  this.subscribe = function(fn){\n    handlers.push(fn);\n  };\n\n  /***\n   * Removes an event handler added with <code>subscribe(fn)</code>.\n   * @method unsubscribe\n   * @param fn {Function} Event handler to be removed.\n   */\n  this.unsubscribe = function(fn){\n    for (var i = handlers.length - 1; i >= 0; i--){\n      if (handlers[i] === fn){\n        handlers.splice(i, 1);\n      }\n    }\n  };\n\n  /***\n   * Fires an event notifying all subscribers.\n   * @method notify\n   * @param args {Object} Additional data object to be passed to all handlers.\n   * @param e {EventData}\n   *      Optional.\n   *      An <code>EventData</code> object to be passed to all handlers.\n   *      For DOM events, an existing W3C/jQuery event object can be passed in.\n   * @param scope {Object}\n   *      Optional.\n   *      The scope (\"this\") within which the handler will be executed.\n   *      If not specified, the scope will be set to the <code>Event</code> instance.\n   */\n  this.notify = function(args, e, scope){\n    e = e || new EventData();\n    scope = scope || this;\n\n    var returnValue;\n    for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++){\n      returnValue = handlers[i].call(scope, e, args);\n    }\n\n    return returnValue;\n  };\n}\n\nfunction EventHandler(){\n  var handlers = [];\n\n  this.subscribe = function(event, handler){\n    handlers.push({\n      event: event,\n      handler: handler\n    });\n    event.subscribe(handler);\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribe = function(event, handler){\n    var i = handlers.length;\n    while (i--){\n      if (handlers[i].event === event && handlers[i].handler === handler){\n        handlers.splice(i, 1);\n        event.unsubscribe(handler);\n        return;\n      }\n    }\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribeAll = function(){\n    var i = handlers.length;\n    while (i--){\n      handlers[i].event.unsubscribe(handlers[i].handler);\n    }\n    handlers = [];\n\n    return this; // allow chaining\n  };\n}\n\n/***\n * A structure containing a range of cells.\n * @class Range\n * @constructor\n * @param fromRow {Integer} Starting row.\n * @param fromCell {Integer} Starting cell.\n * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n */\nfunction Range(fromRow, fromCell, toRow, toCell){\n  if (toRow === undefined && toCell === undefined){\n    toRow = fromRow;\n    toCell = fromCell;\n  }\n\n  /***\n   * @property fromRow\n   * @type {Integer}\n   */\n  this.fromRow = Math.min(fromRow, toRow);\n\n  /***\n   * @property fromCell\n   * @type {Integer}\n   */\n  this.fromCell = Math.min(fromCell, toCell);\n\n  /***\n   * @property toRow\n   * @type {Integer}\n   */\n  this.toRow = Math.max(fromRow, toRow);\n\n  /***\n   * @property toCell\n   * @type {Integer}\n   */\n  this.toCell = Math.max(fromCell, toCell);\n\n  /***\n   * Returns whether a range represents a single row.\n   * @method isSingleRow\n   * @return {Boolean}\n   */\n  this.isSingleRow = function(){\n    return this.fromRow == this.toRow;\n  };\n\n  /***\n   * Returns whether a range represents a single cell.\n   * @method isSingleCell\n   * @return {Boolean}\n   */\n  this.isSingleCell = function(){\n    return this.fromRow == this.toRow && this.fromCell == this.toCell;\n  };\n\n  /***\n   * Returns whether a range contains a given cell.\n   * @method contains\n   * @param row {Integer}\n   * @param cell {Integer}\n   * @return {Boolean}\n   */\n  this.contains = function(row, cell){\n    return row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell;\n  };\n\n  /***\n   * Returns a readable representation of a range.\n   * @method toString\n   * @return {String}\n   */\n  this.toString = function(){\n    if (this.isSingleCell()){\n      return '(' + this.fromRow + ':' + this.fromCell + ')';\n    } else {\n      return '(' + this.fromRow + ':' + this.fromCell + ' - ' + this.toRow + ':' + this.toCell + ')';\n    }\n  };\n}\n\n/***\n * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n * @class NonDataItem\n * @constructor\n */\nfunction NonDataItem(){\n  this.__nonDataRow = true;\n}\n\n/***\n * Information about a group of rows.\n * @class Group\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction Group(){\n  this.__group = true;\n\n  /**\n   * Grouping level, starting with 0.\n   * @property level\n   * @type {Number}\n   */\n  this.level = 0;\n\n  /***\n   * Number of rows in the group.\n   * @property count\n   * @type {Integer}\n   */\n  this.count = 0;\n\n  /***\n   * Grouping value.\n   * @property value\n   * @type {Object}\n   */\n  this.value = null;\n\n  /***\n   * Formatted display value of the group.\n   * @property title\n   * @type {String}\n   */\n  this.title = null;\n\n  /***\n   * Whether a group is collapsed.\n   * @property collapsed\n   * @type {Boolean}\n   */\n  this.collapsed = false;\n\n  /***\n   * GroupTotals, if any.\n   * @property totals\n   * @type {GroupTotals}\n   */\n  this.totals = null;\n\n  /**\n   * Rows that are part of the group.\n   * @property rows\n   * @type {Array}\n   */\n  this.rows = [];\n\n  /**\n   * Sub-groups that are part of the group.\n   * @property groups\n   * @type {Array}\n   */\n  this.groups = null;\n\n  /**\n   * A unique key used to identify the group.  This key can be used in calls to DataView\n   * collapseGroup() or expandGroup().\n   * @property groupingKey\n   * @type {Object}\n   */\n  this.groupingKey = null;\n}\n\nGroup.prototype = new NonDataItem();\n\n/***\n * Compares two Group instances.\n * @method equals\n * @return {Boolean}\n * @param group {Group} Group instance to compare to.\n */\nGroup.prototype.equals = function(group){\n  return this.value === group.value && this.count === group.count && this.collapsed === group.collapsed && this.title === group.title;\n};\n\n/***\n * Information about group totals.\n * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n * formatters during the display.\n * @class GroupTotals\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction GroupTotals(){\n  this.__groupTotals = true;\n\n  /***\n   * Parent Group.\n   * @param group\n   * @type {Group}\n   */\n  this.group = null;\n\n  /***\n   * Whether the totals have been fully initialized / calculated.\n   * Will be set to false for lazy-calculated group totals.\n   * @param initialized\n   * @type {Boolean}\n   */\n  this.initialized = false;\n}\n\nGroupTotals.prototype = new NonDataItem();\n\n/***\n * A locking helper to track the active edit controller and ensure that only a single controller\n * can be active at a time.  This prevents a whole class of state and validation synchronization\n * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n * and attempt a commit or cancel before proceeding.\n * @class EditorLock\n * @constructor\n */\nfunction EditorLock(){\n  var activeEditController = null;\n\n  /***\n   * Returns true if a specified edit controller is active (has the edit lock).\n   * If the parameter is not specified, returns true if any edit controller is active.\n   * @method isActive\n   * @param editController {EditController}\n   * @return {Boolean}\n   */\n  this.isActive = function(editController){\n    return (editController ? activeEditController === editController : activeEditController !== null);\n  };\n\n  /***\n   * Sets the specified edit controller as the active edit controller (acquire edit lock).\n   * If another edit controller is already active, and exception will be thrown.\n   * @method activate\n   * @param editController {EditController} edit controller acquiring the lock\n   */\n  this.activate = function(editController){\n    if (editController === activeEditController){ // already activated?\n      return;\n    }\n    if (activeEditController !== null){\n      throw 'SlickGrid.EditorLock.activate: an editController is still active, can\\'t activate another editController';\n    }\n    if (!editController.commitCurrentEdit){\n      throw 'SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()';\n    }\n    if (!editController.cancelCurrentEdit){\n      throw 'SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()';\n    }\n    activeEditController = editController;\n  };\n\n  /***\n   * Unsets the specified edit controller as the active edit controller (release edit lock).\n   * If the specified edit controller is not the active one, an exception will be thrown.\n   * @method deactivate\n   * @param editController {EditController} edit controller releasing the lock\n   */\n  this.deactivate = function(editController){\n    if (activeEditController !== editController){\n      throw 'SlickGrid.EditorLock.deactivate: specified editController is not the currently active one';\n    }\n    activeEditController = null;\n  };\n\n  /***\n   * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n   * controller and returns whether the commit attempt was successful (commit may fail due to validation\n   * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n   * and false otherwise.  If no edit controller is active, returns true.\n   * @method commitCurrentEdit\n   * @return {Boolean}\n   */\n  this.commitCurrentEdit = function(){\n    return (activeEditController ? activeEditController.commitCurrentEdit() : true);\n  };\n\n  /***\n   * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n   * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n   * active, returns true.\n   * @method cancelCurrentEdit\n   * @return {Boolean}\n   */\n  this.cancelCurrentEdit = function cancelCurrentEdit(){\n    return (activeEditController ? activeEditController.cancelCurrentEdit() : true);\n  };\n}\n\n/**\n *\n * @param {Array} treeColumns Array com levels of columns\n * @returns {{hasDepth: 'hasDepth', getTreeColumns: 'getTreeColumns', extractColumns: 'extractColumns', getDepth: 'getDepth', getColumnsInDepth: 'getColumnsInDepth', getColumnsInGroup: 'getColumnsInGroup', visibleColumns: 'visibleColumns', filter: 'filter', reOrder: reOrder}}\n * @constructor\n */\nfunction TreeColumns(treeColumns){\n\n  var columnsById = {};\n\n  function init(){\n    mapToId(treeColumns);\n  }\n\n  function mapToId(columns){\n    columns.forEach(function(column){\n      columnsById[column.id] = column;\n\n      if (column.columns) mapToId(column.columns);\n    });\n  }\n\n  function filter(node, condition){\n\n    return node.filter(function(column){\n\n      var valid = condition.call(column);\n\n      if (valid && column.columns) column.columns = filter(column.columns, condition);\n\n      return valid && (!column.columns || column.columns.length);\n    });\n\n  }\n\n  function sort(columns, grid){\n    columns.sort(function(a, b){\n      var indexA = getOrDefault(grid.getColumnIndex(a.id)),\n        indexB = getOrDefault(grid.getColumnIndex(b.id));\n\n      return indexA - indexB;\n    })\n      .forEach(function(column){\n        if (column.columns) sort(column.columns, grid);\n      });\n  }\n\n  function getOrDefault(value){\n    return typeof value === 'undefined' ? -1 : value;\n  }\n\n  function getDepth(node){\n    if (node.length) for (var i in node)\n      return getDepth(node[i]);\n    else if (node.columns) return 1 + getDepth(node.columns);\n    else return 1;\n  }\n\n  function getColumnsInDepth(node, depth, current){\n    var columns = [];\n    current = current || 0;\n\n    if (depth == current){\n\n      if (node.length) node.forEach(function(n){\n        if (n.columns) n.extractColumns = function(){\n          return extractColumns(n);\n        };\n      });\n\n      return node;\n    } else for (var i in node)\n      if (node[i].columns){\n        columns = columns.concat(getColumnsInDepth(node[i].columns, depth, current + 1));\n      }\n\n    return columns;\n  }\n\n  function extractColumns(node){\n    var result = [];\n\n    if (node.hasOwnProperty('length')){\n\n      for (var i = 0; i < node.length; i++)\n        result = result.concat(extractColumns(node[i]));\n\n    } else {\n\n      if (node.hasOwnProperty('columns'))\n\n        result = result.concat(extractColumns(node.columns));\n\n      else return node;\n\n    }\n\n    return result;\n  }\n\n  function cloneTreeColumns(){\n    return $.extend(true, [], treeColumns);\n  }\n\n  init();\n\n  this.hasDepth = function(){\n\n    for (var i in treeColumns)\n      if (treeColumns[i].hasOwnProperty('columns')) return true;\n\n    return false;\n  };\n\n  this.getTreeColumns = function(){\n    return treeColumns;\n  };\n\n  this.extractColumns = function(){\n    return this.hasDepth() ? extractColumns(treeColumns) : treeColumns;\n  };\n\n  this.getDepth = function(){\n    return getDepth(treeColumns);\n  };\n\n  this.getColumnsInDepth = function(depth){\n    return getColumnsInDepth(treeColumns, depth);\n  };\n\n  this.getColumnsInGroup = function(groups){\n    return extractColumns(groups);\n  };\n\n  this.visibleColumns = function(){\n    return filter(cloneTreeColumns(), function(){\n      return this.visible;\n    });\n  };\n\n  this.filter = function(condition){\n    return filter(cloneTreeColumns(), condition);\n  };\n\n  this.reOrder = function(grid){\n    return sort(treeColumns, grid);\n  };\n\n  this.getById = function(id){\n    return columnsById[id];\n  };\n\n  this.getInIds = function(ids){\n    return ids.map(function(id){\n      return columnsById[id];\n    });\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.core.js","module.exports = require(\"jquery\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"interactjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"interactjs\"\n// module id = 2\n// module chunks = 0","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\nexport default CellRangeDecorator;\n\n/** *\n * Displays an overlay on top of a given cell range.\n *\n * TODO:\n * Currently, it blocks mouse events to DOM nodes behind it.\n * Use FF and WebKit-specific 'pointer-events' CSS style, or some kind of event forwarding.\n * Could also construct the borders separately using 4 individual DIVs.\n *\n * @param {Grid} grid\n * @param {Object} options\n */\nfunction CellRangeDecorator(grid, options){\n  let _elem;\n  const _defaults = {\n    selectionCssClass: 'slick-range-decorator',\n    selectionCss: {\n      zIndex: '9999',\n      border: '2px dashed red'\n    }\n  };\n\n  options = Object.assign({}, _defaults, options);\n\n  function show(range){\n    if (!_elem){\n      _elem = $('<div></div>', {css: options.selectionCss})\n        .addClass(options.selectionCssClass)\n        .css('position', 'absolute')\n        .appendTo(grid.getCanvasNode());\n    }\n\n    const from = grid.getCellNodeBox(range.fromRow, range.fromCell);\n    const to = grid.getCellNodeBox(range.toRow, range.toCell);\n\n    _elem.css({\n      top: from.top - 1,\n      left: from.left - 1,\n      height: to.bottom - from.top - 2,\n      width: to.right - from.left - 2\n    });\n\n    return _elem;\n  }\n\n  function hide(){\n    if (_elem){\n      _elem.remove();\n      _elem = null;\n    }\n  }\n\n  Object.assign(this, {\n    show,\n    hide\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellrangedecorator/slick.cellrangedecorator.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\nimport CellRangeDecorator from '../slick.cellrangedecorator/slick.cellrangedecorator';\n\nexport default CellRangeSelector;\n\nfunction CellRangeSelector(options){\n  let _grid;\n  let _canvas;\n  let _dragging;\n  let _decorator;\n  let _range = {};\n\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  const _defaults = {\n    selectionCss: {\n      // 'border': '2px dashed blue'\n    }\n  };\n\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _decorator = new CellRangeDecorator(grid, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _handler\n      .subscribe(_grid.onDragInit, handleDragInit)\n      .subscribe(_grid.onDragStart, handleDragStart)\n      .subscribe(_grid.onDrag, handleDrag)\n      .subscribe(_grid.onDragEnd, handleDragEnd);\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function handleDragInit(e, dd){\n    // prevent the grid from cancelling drag'n'drop by default\n    e.stopImmediatePropagation();\n  }\n\n  function handleDragStart(jqueryEvent, interactEvent){\n    const cell = _grid.getCellFromEvent(interactEvent.originalEvent);\n    if (_self.onBeforeCellRangeSelected.notify(cell) !== false){\n      if (_grid.canCellBeSelected(cell.row, cell.cell)){\n        _dragging = true;\n        // jqueryEvent.stopImmediatePropagation();\n      }\n    }\n    if (!_dragging){\n      return;\n    }\n\n    _grid.focus();\n\n    const start = _grid.getCellFromPoint(\n      interactEvent.x0 - $(_canvas).offset().left,\n      interactEvent.y0 - $(_canvas).offset().top\n    );\n\n    _range = {\n      start,\n      end: {}\n    };\n\n    return _decorator.show(new Slick.Range(start.row, start.cell));\n  }\n\n  function handleDrag(e, interactEvent){\n    if (!_dragging){\n      return;\n    }\n    // e.stopImmediatePropagation();\n\n    const end = _grid.getCellFromPoint(\n      interactEvent.pageX - $(_canvas).offset().left,\n      interactEvent.pageY - $(_canvas).offset().top);\n\n    if (!_grid.canCellBeSelected(end.row, end.cell)){\n      return;\n    }\n\n    _range.end = end;\n    _decorator.show(new Slick.Range(_range.start.row, _range.start.cell, end.row, end.cell));\n  }\n\n  function handleDragEnd(e){\n    if (!_dragging){\n      return;\n    }\n\n    _dragging = false;\n    // e.stopImmediatePropagation();\n\n    _decorator.hide();\n    _self.onCellRangeSelected.notify({\n      range: new Slick.Range(\n        _range.start.row,\n        _range.start.cell,\n        _range.end.row,\n        _range.end.cell\n      )\n    });\n    _range = {};\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n\n    onBeforeCellRangeSelected: new Slick.Event(),\n    onCellRangeSelected: new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellrangeselector/slick.cellrangeselector.js","import Slick        from './slick.core';\nimport Editors      from './slick.editors';\nimport Data         from './slick.dataview';\nimport Grid         from './slick.grid';\nimport FrozenGrid   from './slick-frozen.grid';\nimport Formatters   from './slick.formatters';\nimport * as Plugins from '../plugins';\n\nexport {\n  Slick,\n  Editors,\n  Formatters,\n  Data,\n  Grid,\n  FrozenGrid,\n  Plugins\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/index.js","import Slick      from './slick.core';\nimport $          from 'jquery';\nimport flatpickr  from 'flatpickr';\n//import 'flatpickr/dist/flatpickr.min.css';\n\nconst { keyCode } = Slick;\n\n/** *\n * Contains basic SlickGrid editors.\n * @module Editors\n * @namespace Slick\n */\n\nconst Editors = {\n  Text: TextEditor,\n  Integer: IntegerEditor,\n  Float: FloatEditor,\n  Date: DateEditor,\n  YesNoSelect: YesNoSelectEditor,\n  Checkbox: CheckboxEditor,\n  LongText: LongTextEditor\n};\n\nSlick.Editors = Editors;\nexport default Editors;\n\nfunction TextEditor(args){\n  let $input;\n  let defaultValue;\n\n  this.init = function(){\n    $input = $('<INPUT type=text class=\"editor-text\" />')\n      .appendTo(args.container)\n      .bind('keydown.nav', function(e){\n        if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT){\n          e.stopImmediatePropagation();\n        }\n      })\n      .focus()\n      .select();\n  };\n\n  this.destroy = function(){\n    $input.remove();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  this.getValue = function(){\n    return $input.val();\n  };\n\n  this.setValue = function(val){\n    $input.val(val);\n  };\n\n  this.loadValue = function(item){\n    defaultValue = item[args.column.field] || '';\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    return $input.val();\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultValue == null)) && ($input.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    let valid = true;\n    let msg = null;\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction IntegerEditor(args){\n  let $input;\n  let defaultValue;\n\n  this.init = function(){\n    $input = $('<INPUT type=text class=\"editor-text\" />');\n\n    $input.bind('keydown.nav', function(e){\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT){\n        e.stopImmediatePropagation();\n      }\n    });\n\n    $input.appendTo(args.container);\n    $input.focus().select();\n  };\n\n  this.destroy = function(){\n    $input.remove();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  this.loadValue = function(item){\n    defaultValue = item[args.column.field];\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    return parseInt($input.val(), 10) || 0;\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultValue == null)) && ($input.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    if (isNaN($input.val())){\n      return {\n        valid: false,\n        msg: 'Please enter a valid integer'\n      };\n    }\n\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val());\n      if (!validationResults.valid){\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction FloatEditor(args){\n  let $input;\n  let defaultValue;\n  let scope = this;\n\n  this.init = function(){\n    $input = $('<INPUT type=text class=\"editor-text\" />');\n\n    $input.bind('keydown.nav', function(e){\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT){\n        e.stopImmediatePropagation();\n      }\n    });\n\n    $input.appendTo(args.container);\n    $input.focus().select();\n  };\n\n  this.destroy = function(){\n    $input.remove();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  function getDecimalPlaces(){\n    // returns the number of fixed decimal places or null\n    let rtn = args.column.editorFixedDecimalPlaces;\n    if (typeof rtn == 'undefined'){\n      rtn = FloatEditor.DefaultDecimalPlaces;\n    }\n    return (!rtn && rtn !== 0 ? null : rtn);\n  }\n\n  this.loadValue = function(item){\n    defaultValue = item[args.column.field];\n\n    let decPlaces = getDecimalPlaces();\n    if (decPlaces !== null\n      && (defaultValue || defaultValue === 0)\n      && defaultValue.toFixed){\n      defaultValue = defaultValue.toFixed(decPlaces);\n    }\n\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    let rtn = parseFloat($input.val()) || 0;\n\n    let decPlaces = getDecimalPlaces();\n    if (decPlaces !== null\n      && (rtn || rtn === 0)\n      && rtn.toFixed){\n      rtn = parseFloat(rtn.toFixed(decPlaces));\n    }\n\n    return rtn;\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultValue == null)) && ($input.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    if (isNaN($input.val())){\n      return {\n        valid: false,\n        msg: 'Please enter a valid number'\n      };\n    }\n\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val(), args);\n      if (!validationResults.valid){\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nFloatEditor.DefaultDecimalPlaces = null;\n\n/**\n * see https://chmln.github.io/flatpickr/#options - pass as column.options.date = {}\n * @param args\n * @constructor\n */\nfunction DateEditor(args){\n  let $input,\n    flatInstance,\n    defaultDate,\n    options = args.column.options && args.column.options.date ? args.column.options.date : {};\n\n  this.init = function(){\n    defaultDate = options.defaultDate = args.item[args.column.field];\n\n    $input = $(`<input type=text data-default-date=\"${defaultDate}\" class=\"editor-text\" />`);\n    $input.appendTo(args.container);\n    $input.focus().val(defaultDate).select();\n    flatInstance = flatpickr($input[0], options);\n  };\n\n  this.destroy = function(){\n    flatInstance.destroy();\n    $input.remove();\n  };\n\n  this.show = function(){\n    flatInstance.open()\n  };\n\n  this.hide = function(){\n    flatInstance.close();\n  };\n\n  this.position = function(position){\n    //todo: fix how scrolling is affected\n    flatInstance.redraw();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  this.loadValue = function(item){\n    defaultDate = item[args.column.field];\n    $input.val(defaultDate);\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    return $input.val();\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultDate == null)) && ($input.val() != defaultDate);\n  };\n\n  this.validate = function(){\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val(), args);\n      if (!validationResults.valid){\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction YesNoSelectEditor(args){\n  let $select;\n  let defaultValue;\n  let scope = this;\n\n  this.init = function(){\n    $select = $('<select tabIndex=\"0\" class=\"editor-yesno\"><option value=\"yes\">Yes</option><option value=\"no\">No</option></select>');\n    $select.appendTo(args.container);\n    $select.focus();\n  };\n\n  this.destroy = function(){\n    $select.remove();\n  };\n\n  this.focus = function(){\n    $select.focus();\n  };\n\n  this.loadValue = function(item){\n    $select.val((defaultValue = item[args.column.field]) ? 'yes' : 'no');\n    $select.select();\n  };\n\n  this.serializeValue = function(){\n    return ($select.val() == 'yes');\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return ($select.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    let valid = true;\n    let msg = null;\n    if (args.column.validator){\n      let validationResults = args.column.validator($select.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction CheckboxEditor(args){\n  let $select;\n  let defaultValue;\n  let scope = this;\n\n  this.init = function(){\n    $select = $('<INPUT type=checkbox value=\"true\" class=\"editor-checkbox\" hideFocus>');\n    $select.appendTo(args.container);\n    $select.focus();\n  };\n\n  this.destroy = function(){\n    $select.remove();\n  };\n\n  this.focus = function(){\n    $select.focus();\n  };\n\n  this.loadValue = function(item){\n    defaultValue = !!item[args.column.field];\n    if (defaultValue){\n      $select.prop('checked', true);\n    } else {\n      $select.prop('checked', false);\n    }\n  };\n\n  this.serializeValue = function(){\n    return $select.prop('checked');\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (this.serializeValue() !== defaultValue);\n  };\n\n  this.validate = function(){\n    let valid = true;\n    let msg = null;\n    if (args.column.validator){\n      let validationResults = args.column.validator($select.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction PercentCompleteEditor(args){\n  console.error('PercentCompleteEditor is derecated');\n}\n\n/*\n * An example of a \"detached\" editor.\n * The UI is added onto document BODY and .position(), .show() and .hide() are implemented.\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\n */\nfunction LongTextEditor(args){\n  let $input, $wrapper;\n  let defaultValue;\n  let scope = this;\n\n  this.init = function(){\n    let $container = $('body');\n\n    $wrapper = $('<div class=\"slick-large-editor-text\" />').appendTo($container);\n    $input = $('<textarea hidefocus rows=5 />').appendTo($wrapper);\n\n    $('<div><button>Save</button> <button>Cancel</button></div>').appendTo($wrapper);\n\n    $wrapper.find('button:first').bind('click', this.save);\n    $wrapper.find('button:last').bind('click', this.cancel);\n    $input.bind('keydown', this.handleKeyDown);\n\n    scope.position(args.position);\n    $input.focus().select();\n  };\n\n  this.handleKeyDown = function(e){\n    if (e.which == keyCode.ENTER && e.ctrlKey){\n      scope.save();\n    } else if (e.which == keyCode.ESCAPE){\n      e.preventDefault();\n      scope.cancel();\n    } else if (e.which == keyCode.TAB && e.shiftKey){\n      e.preventDefault();\n      args.grid.navigatePrev();\n    } else if (e.which == keyCode.TAB){\n      e.preventDefault();\n      args.grid.navigateNext();\n    }\n  };\n\n  this.save = function(){\n    args.commitChanges();\n  };\n\n  this.cancel = function(){\n    $input.val(defaultValue);\n    args.cancelChanges();\n  };\n\n  this.hide = function(){\n    $wrapper.hide();\n  };\n\n  this.show = function(){\n    $wrapper.show();\n  };\n\n  this.position = function(position){\n    $wrapper\n      .css('top', position.top - 5)\n      .css('left', position.left - 5);\n  };\n\n  this.destroy = function(){\n    $wrapper.remove();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  this.loadValue = function(item){\n    $input.val(defaultValue = item[args.column.field]);\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    return $input.val();\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultValue == null)) && ($input.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    let valid = true;\n    let msg = null;\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.editors.js","module.exports = require(\"flatpickr\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"flatpickr\"\n// module id = 8\n// module chunks = 0","import Slick                  from './slick.core';\nimport $                      from 'jquery';\nimport GroupMetaDataProvider  from './slick.groupmetadataprovider';\n\nconst Aggregators = {\n  Avg: AvgAggregator,\n  Min: MinAggregator,\n  Max: MaxAggregator,\n  Sum: SumAggregator\n};\n\nconst Data = {\n  DataView,\n  GroupMetaDataProvider,\n  Aggregators\n};\n\nexport default Data;\n\n/** *\n * A sample Model implementation.\n * Provides a filtered view of the underlying data.\n *\n * Relies on the data item having an \"id\" property uniquely identifying it.\n */\nfunction DataView(options){\n  let self = this;\n\n  let defaults = {\n    groupItemMetadataProvider: null,\n    inlineFilters: false\n  };\n\n  // private\n  let idProperty = 'id';  // property holding a unique row id\n  let items = [];         // data by index\n  let rows = [];          // data by row\n  let idxById = {};       // indexes by id\n  let rowsById = null;    // rows by id; lazy-calculated\n  let filter = null;      // filter function\n  let updated = null;     // updated item ids\n  let suspend = false;    // suspends the recalculation\n  let sortAsc = true;\n  let fastSortField;\n  let sortComparer;\n  let refreshHints = {};\n  let prevRefreshHints = {};\n  let filterArgs;\n  let filteredItems = [];\n  let compiledFilter;\n  let compiledFilterWithCaching;\n  let filterCache = [];\n\n  // grouping\n  let groupingInfoDefaults = {\n    getter: null,\n    formatter: null,\n    comparer: function(a, b){\n      return (a.value === b.value ? 0 :\n          (a.value > b.value ? 1 : -1)\n      );\n    },\n    predefinedValues: [],\n    aggregators: [],\n    aggregateEmpty: false,\n    aggregateCollapsed: false,\n    aggregateChildGroups: false,\n    collapsed: false,\n    displayTotalsRow: true,\n    lazyTotalsCalculation: false\n  };\n  let groupingInfos = [];\n  let groups = [];\n  let toggledGroupsByLevel = [];\n  let groupingDelimiter = ':|:';\n\n  let pagesize = 0;\n  let pagenum = 0;\n  let totalRows = 0;\n\n  // events\n  let onRowCountChanged = new Slick.Event();\n  let onRowsChanged = new Slick.Event();\n  let onPagingInfoChanged = new Slick.Event();\n\n  options = $.extend(true, {}, defaults, options);\n\n  function beginUpdate(){\n    suspend = true;\n  }\n\n  function endUpdate(){\n    suspend = false;\n    refresh();\n  }\n\n  function setRefreshHints(hints){\n    refreshHints = hints;\n  }\n\n  function setFilterArgs(args){\n    filterArgs = args;\n  }\n\n  function updateIdxById(startingIndex){\n    startingIndex = startingIndex || 0;\n    let id;\n    for (let i = startingIndex, l = items.length; i < l; i++){\n      id = items[i][idProperty];\n      if (id === undefined){\n        throw 'Each data element must implement a unique \\'id\\' property';\n      }\n      idxById[id] = i;\n    }\n  }\n\n  function ensureIdUniqueness(){\n    let id;\n    for (let i = 0, l = items.length; i < l; i++){\n      id = items[i][idProperty];\n      if (id === undefined || idxById[id] !== i){\n        throw 'Each data element must implement a unique \\'id\\' property';\n      }\n    }\n  }\n\n  function getItems(){\n    return items;\n  }\n\n  function setItems(data, objectIdProperty){\n    if (objectIdProperty !== undefined){\n      idProperty = objectIdProperty;\n    }\n    items = filteredItems = data;\n    idxById = {};\n    updateIdxById();\n    ensureIdUniqueness();\n    refresh();\n  }\n\n  function setPagingOptions(args){\n    if (args.pageSize != undefined){\n      pagesize = args.pageSize;\n      pagenum = pagesize ? Math.min(pagenum, Math.max(0, Math.ceil(totalRows / pagesize) - 1)) : 0;\n    }\n\n    if (args.pageNum != undefined){\n      pagenum = Math.min(args.pageNum, Math.max(0, Math.ceil(totalRows / pagesize) - 1));\n    }\n\n    onPagingInfoChanged.notify(getPagingInfo(), null, self);\n\n    refresh();\n  }\n\n  function getPagingInfo(){\n    let totalPages = pagesize ? Math.max(1, Math.ceil(totalRows / pagesize)) : 1;\n    return {pageSize: pagesize, pageNum: pagenum, totalRows: totalRows, totalPages: totalPages, dataView: self};\n  }\n\n  function sort(comparer, ascending){\n    sortAsc = ascending;\n    sortComparer = comparer;\n    fastSortField = null;\n    if (ascending === false){\n      items.reverse();\n    }\n    items.sort(comparer);\n    if (ascending === false){\n      items.reverse();\n    }\n    idxById = {};\n    updateIdxById();\n    refresh();\n  }\n\n  /** *\n   * Provides a workaround for the extremely slow sorting in IE.\n   * Does a [lexicographic] sort on a give column by temporarily overriding Object.prototype.toString\n   * to return the value of that field and then doing a native Array.sort().\n   */\n  function fastSort(field, ascending){\n    sortAsc = ascending;\n    fastSortField = field;\n    sortComparer = null;\n    let oldToString = Object.prototype.toString;\n    Object.prototype.toString = (typeof field == 'function') ? field : function(){\n      return this[field];\n    };\n    // an extra reversal for descending sort keeps the sort stable\n    // (assuming a stable native sort implementation, which isn't true in some cases)\n    if (ascending === false){\n      items.reverse();\n    }\n    items.sort();\n    Object.prototype.toString = oldToString;\n    if (ascending === false){\n      items.reverse();\n    }\n    idxById = {};\n    updateIdxById();\n    refresh();\n  }\n\n  function reSort(){\n    if (sortComparer){\n      sort(sortComparer, sortAsc);\n    } else if (fastSortField){\n      fastSort(fastSortField, sortAsc);\n    }\n  }\n\n  function setFilter(filterFn){\n    filter = filterFn;\n    if (options.inlineFilters){\n      compiledFilter = compileFilter();\n      compiledFilterWithCaching = compileFilterWithCaching();\n    }\n    refresh();\n  }\n\n  function getGrouping(){\n    return groupingInfos;\n  }\n\n  function setGrouping(groupingInfo){\n    if (!options.groupItemMetadataProvider){\n      options.groupItemMetadataProvider = new Data.GroupItemMetadataProvider();\n    }\n\n    groups = [];\n    toggledGroupsByLevel = [];\n    groupingInfo = groupingInfo || [];\n    groupingInfos = (groupingInfo instanceof Array) ? groupingInfo : [groupingInfo];\n\n    for (let i = 0; i < groupingInfos.length; i++){\n      let gi = groupingInfos[i] = $.extend(true, {}, groupingInfoDefaults, groupingInfos[i]);\n      gi.getterIsAFn = typeof gi.getter === 'function';\n\n      // pre-compile accumulator loops\n      gi.compiledAccumulators = [];\n      let idx = gi.aggregators.length;\n      while (idx--){\n        gi.compiledAccumulators[idx] = compileAccumulatorLoop(gi.aggregators[idx]);\n      }\n\n      toggledGroupsByLevel[i] = {};\n    }\n\n    refresh();\n  }\n\n  /**\n   * @deprecated Please use {@link setGrouping}.\n   */\n  function groupBy(valueGetter, valueFormatter, sortComparer){\n    if (valueGetter == null){\n      setGrouping([]);\n      return;\n    }\n\n    setGrouping({\n      getter: valueGetter,\n      formatter: valueFormatter,\n      comparer: sortComparer\n    });\n  }\n\n  /**\n   * @deprecated Please use {@link setGrouping}.\n   */\n  function setAggregators(groupAggregators, includeCollapsed){\n    if (!groupingInfos.length){\n      throw new Error('At least one grouping must be specified before calling setAggregators().');\n    }\n\n    groupingInfos[0].aggregators = groupAggregators;\n    groupingInfos[0].aggregateCollapsed = includeCollapsed;\n\n    setGrouping(groupingInfos);\n  }\n\n  function getItemByIdx(i){\n    return items[i];\n  }\n\n  function getIdxById(id){\n    return idxById[id];\n  }\n\n  function ensureRowsByIdCache(){\n    if (!rowsById){\n      rowsById = {};\n      for (let i = 0, l = rows.length; i < l; i++){\n        rowsById[rows[i][idProperty]] = i;\n      }\n    }\n  }\n\n  function getRowById(id){\n    ensureRowsByIdCache();\n    return rowsById[id];\n  }\n\n  function getItemById(id){\n    return items[idxById[id]];\n  }\n\n  function mapIdsToRows(idArray){\n    let rows = [];\n    ensureRowsByIdCache();\n    for (let i = 0, l = idArray.length; i < l; i++){\n      let row = rowsById[idArray[i]];\n      if (row != null){\n        rows[rows.length] = row;\n      }\n    }\n    return rows;\n  }\n\n  function mapRowsToIds(rowArray){\n    let ids = [];\n    for (let i = 0, l = rowArray.length; i < l; i++){\n      if (rowArray[i] < rows.length){\n        ids[ids.length] = rows[rowArray[i]][idProperty];\n      }\n    }\n    return ids;\n  }\n\n  function updateItem(id, item){\n    if (idxById[id] === undefined || id !== item[idProperty]){\n      throw 'Invalid or non-matching id';\n    }\n    items[idxById[id]] = item;\n    if (!updated){\n      updated = {};\n    }\n    updated[id] = true;\n    refresh();\n  }\n\n  function insertItem(insertBefore, item){\n    items.splice(insertBefore, 0, item);\n    updateIdxById(insertBefore);\n    refresh();\n  }\n\n  function addItem(item){\n    items.push(item);\n    updateIdxById(items.length - 1);\n    refresh();\n  }\n\n  function deleteItem(id){\n    let idx = idxById[id];\n    if (idx === undefined){\n      throw 'Invalid id';\n    }\n    delete idxById[id];\n    items.splice(idx, 1);\n    updateIdxById(idx);\n    refresh();\n  }\n\n  function getLength(){\n    return rows.length;\n  }\n\n  function getItem(i){\n    let item = rows[i];\n\n    // if this is a group row, make sure totals are calculated and update the title\n    if (item && item.__group && item.totals && !item.totals.initialized){\n      let gi = groupingInfos[item.level];\n      if (!gi.displayTotalsRow){\n        calculateTotals(item.totals);\n        item.title = gi.formatter ? gi.formatter(item) : item.value;\n      }\n    }\n    // if this is a totals row, make sure it's calculated\n    else if (item && item.__groupTotals && !item.initialized){\n      calculateTotals(item);\n    }\n\n    return item;\n  }\n\n  function getItemMetadata(i){\n    let item = rows[i];\n    if (item === undefined){\n      return null;\n    }\n\n    // overrides for grouping rows\n    if (item.__group){\n      return options.groupItemMetadataProvider.getGroupRowMetadata(item);\n    }\n\n    // overrides for totals rows\n    if (item.__groupTotals){\n      return options.groupItemMetadataProvider.getTotalsRowMetadata(item);\n    }\n\n    return null;\n  }\n\n  function expandCollapseAllGroups(level, collapse){\n    if (level == null){\n      for (let i = 0; i < groupingInfos.length; i++){\n        toggledGroupsByLevel[i] = {};\n        groupingInfos[i].collapsed = collapse;\n      }\n    } else {\n      toggledGroupsByLevel[level] = {};\n      groupingInfos[level].collapsed = collapse;\n    }\n    refresh();\n  }\n\n  /**\n   * @param level {Number} Optional level to collapse.  If not specified, applies to all levels.\n   */\n  function collapseAllGroups(level){\n    expandCollapseAllGroups(level, true);\n  }\n\n  /**\n   * @param level {Number} Optional level to expand.  If not specified, applies to all levels.\n   */\n  function expandAllGroups(level){\n    expandCollapseAllGroups(level, false);\n  }\n\n  function expandCollapseGroup(level, groupingKey, collapse){\n    toggledGroupsByLevel[level][groupingKey] = groupingInfos[level].collapsed ^ collapse;\n    refresh();\n  }\n\n  /**\n   * @param letArgs Either a Slick.Group's \"groupingKey\" property, or a\n   *     letiable argument list of grouping values denoting a unique path to the row.  For\n   *     example, calling collapseGroup('high', '10%') will collapse the '10%' subgroup of\n   *     the 'high' group.\n   */\n  function collapseGroup(letArgs){\n    let args = Array.prototype.slice.call(arguments);\n    let arg0 = args[0];\n    if (args.length == 1 && arg0.indexOf(groupingDelimiter) != -1){\n      expandCollapseGroup(arg0.split(groupingDelimiter).length - 1, arg0, true);\n    } else {\n      expandCollapseGroup(args.length - 1, args.join(groupingDelimiter), true);\n    }\n  }\n\n  /**\n   * @param letArgs Either a Slick.Group's \"groupingKey\" property, or a\n   *     letiable argument list of grouping values denoting a unique path to the row.  For\n   *     example, calling expandGroup('high', '10%') will expand the '10%' subgroup of\n   *     the 'high' group.\n   */\n  function expandGroup(letArgs){\n    let args = Array.prototype.slice.call(arguments);\n    let arg0 = args[0];\n    if (args.length == 1 && arg0.indexOf(groupingDelimiter) != -1){\n      expandCollapseGroup(arg0.split(groupingDelimiter).length - 1, arg0, false);\n    } else {\n      expandCollapseGroup(args.length - 1, args.join(groupingDelimiter), false);\n    }\n  }\n\n  function getGroups(){\n    return groups;\n  }\n\n  function extractGroups(rows, parentGroup){\n    let group;\n    let val;\n    let groups = [];\n    let groupsByVal = {};\n    let r;\n    let level = parentGroup ? parentGroup.level + 1 : 0;\n    let gi = groupingInfos[level];\n\n    for (let i = 0, l = gi.predefinedValues.length; i < l; i++){\n      val = gi.predefinedValues[i];\n      group = groupsByVal[val];\n      if (!group){\n        group = new Slick.Group();\n        group.value = val;\n        group.level = level;\n        group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\n        groups[groups.length] = group;\n        groupsByVal[val] = group;\n      }\n    }\n\n    for (let i = 0, l = rows.length; i < l; i++){\n      r = rows[i];\n      val = gi.getterIsAFn ? gi.getter(r) : r[gi.getter];\n      group = groupsByVal[val];\n      if (!group){\n        group = new Slick.Group();\n        group.value = val;\n        group.level = level;\n        group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\n        groups[groups.length] = group;\n        groupsByVal[val] = group;\n      }\n\n      group.rows[group.count++] = r;\n    }\n\n    if (level < groupingInfos.length - 1){\n      for (let i = 0; i < groups.length; i++){\n        group = groups[i];\n        group.groups = extractGroups(group.rows, group);\n      }\n    }\n\n    groups.sort(groupingInfos[level].comparer);\n\n    return groups;\n  }\n\n  function calculateTotals(totals){\n    let group = totals.group;\n    let gi = groupingInfos[group.level];\n    let isLeafLevel = (group.level == groupingInfos.length);\n    let agg, idx = gi.aggregators.length;\n\n    if (!isLeafLevel && gi.aggregateChildGroups){\n      // make sure all the subgroups are calculated\n      let i = group.groups.length;\n      while (i--){\n        if (!group.groups[i].totals.initialized){\n          calculateTotals(group.groups[i].totals);\n        }\n      }\n    }\n\n    while (idx--){\n      agg = gi.aggregators[idx];\n      agg.init();\n      if (!isLeafLevel && gi.aggregateChildGroups){\n        gi.compiledAccumulators[idx].call(agg, group.groups);\n      } else {\n        gi.compiledAccumulators[idx].call(agg, group.rows);\n      }\n      agg.storeResult(totals);\n    }\n    totals.initialized = true;\n  }\n\n  function addGroupTotals(group){\n    let gi = groupingInfos[group.level];\n    let totals = new Slick.GroupTotals();\n    totals.group = group;\n    group.totals = totals;\n    if (!gi.lazyTotalsCalculation){\n      calculateTotals(totals);\n    }\n  }\n\n  function addTotals(groups, level){\n    level = level || 0;\n    let gi = groupingInfos[level];\n    let groupCollapsed = gi.collapsed;\n    let toggledGroups = toggledGroupsByLevel[level];\n    let idx = groups.length, g;\n    while (idx--){\n      g = groups[idx];\n\n      if (g.collapsed && !gi.aggregateCollapsed){\n        continue;\n      }\n\n      // Do a depth-first aggregation so that parent group aggregators can access subgroup totals.\n      if (g.groups){\n        addTotals(g.groups, level + 1);\n      }\n\n      if (gi.aggregators.length && (\n        gi.aggregateEmpty || g.rows.length || (g.groups && g.groups.length))){\n        addGroupTotals(g);\n      }\n\n      g.collapsed = groupCollapsed ^ toggledGroups[g.groupingKey];\n      g.title = gi.formatter ? gi.formatter(g) : g.value;\n    }\n  }\n\n  function flattenGroupedRows(groups, level){\n    level = level || 0;\n    let gi = groupingInfos[level];\n    let groupedRows = [], rows, gl = 0, g;\n    for (let i = 0, l = groups.length; i < l; i++){\n      g = groups[i];\n      groupedRows[gl++] = g;\n\n      if (!g.collapsed){\n        rows = g.groups ? flattenGroupedRows(g.groups, level + 1) : g.rows;\n        for (let j = 0, jj = rows.length; j < jj; j++){\n          groupedRows[gl++] = rows[j];\n        }\n      }\n\n      if (g.totals && gi.displayTotalsRow && (!g.collapsed || gi.aggregateCollapsed)){\n        groupedRows[gl++] = g.totals;\n      }\n    }\n    return groupedRows;\n  }\n\n  function getFunctionInfo(fn){\n    let fnRegex = /^function[^(]*\\(([^)]*)\\)\\s*{([\\s\\S]*)}$/;\n    let matches = fn.toString().match(fnRegex);\n    return {\n      params: matches[1].split(','),\n      body: matches[2]\n    };\n  }\n\n  function compileAccumulatorLoop(aggregator){\n    let accumulatorInfo = getFunctionInfo(aggregator.accumulate);\n    let fn = new Function(\n      '_items',\n      'for (let ' + accumulatorInfo.params[0] + ', _i=0, _il=_items.length; _i<_il; _i++) {' +\n      accumulatorInfo.params[0] + ' = _items[_i]; ' +\n      accumulatorInfo.body +\n      '}'\n    );\n    fn.displayName = 'compiledAccumulatorLoop';\n    return fn;\n  }\n\n  function compileFilter(){\n    let filterInfo = getFunctionInfo(filter);\n\n    let filterPath1 = '{ continue _coreloop; }$1';\n    let filterPath2 = '{ _retval[_idx++] = $item$; continue _coreloop; }$1';\n    // make some allowances for minification - there's only so far we can go with RegEx\n    let filterBody = filterInfo.body\n      .replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1)\n      .replace(/return!1([;}]|\\}|$)/gi, filterPath1)\n      .replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2)\n      .replace(/return!0([;}]|\\}|$)/gi, filterPath2)\n      .replace(/return ([^;}]+?)\\s*([;}]|$)/gi,\n        '{ if ($1) { _retval[_idx++] = $item$; }; continue _coreloop; }$2');\n\n    // This preserves the function template code after JS compression,\n    // so that replace() commands still work as expected.\n    let tpl = [\n      // \"function(_items, _args) { \",\n      'let _retval = [], _idx = 0; ',\n      'let $item$, $args$ = _args; ',\n      '_coreloop: ',\n      'for (let _i = 0, _il = _items.length; _i < _il; _i++) { ',\n      '$item$ = _items[_i]; ',\n      '$filter$; ',\n      '} ',\n      'return _retval; '\n      // \"}\"\n    ].join('');\n    tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n    tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n    tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n    let fn = new Function('_items,_args', tpl);\n    fn.displayName = 'compiledFilter';\n\n    return fn;\n  }\n\n  function compileFilterWithCaching(){\n    let filterInfo = getFunctionInfo(filter);\n\n    let filterPath1 = '{ continue _coreloop; }$1';\n    let filterPath2 = '{ _cache[_i] = true;_retval[_idx++] = $item$; continue _coreloop; }$1';\n    // make some allowances for minification - there's only so far we can go with RegEx\n    let filterBody = filterInfo.body\n      .replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1)\n      .replace(/return!1([;}]|\\}|$)/gi, filterPath1)\n      .replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2)\n      .replace(/return!0([;}]|\\}|$)/gi, filterPath2)\n      .replace(/return ([^;}]+?)\\s*([;}]|$)/gi,\n        '{ if ((_cache[_i] = $1)) { _retval[_idx++] = $item$; }; continue _coreloop; }$2');\n\n    // This preserves the function template code after JS compression,\n    // so that replace() commands still work as expected.\n    let tpl = [\n      // \"function(_items, _args, _cache) { \",\n      'let _retval = [], _idx = 0; ',\n      'let $item$, $args$ = _args; ',\n      '_coreloop: ',\n      'for (let _i = 0, _il = _items.length; _i < _il; _i++) { ',\n      '$item$ = _items[_i]; ',\n      'if (_cache[_i]) { ',\n      '_retval[_idx++] = $item$; ',\n      'continue _coreloop; ',\n      '} ',\n      '$filter$; ',\n      '} ',\n      'return _retval; '\n      // \"}\"\n    ].join('');\n    tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n    tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n    tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n    let fn = new Function('_items,_args,_cache', tpl);\n    fn.displayName = 'compiledFilterWithCaching';\n    return fn;\n  }\n\n  function uncompiledFilter(items, args){\n    let retval = [], idx = 0;\n\n    for (let i = 0, ii = items.length; i < ii; i++){\n      if (filter(items[i], args)){\n        retval[idx++] = items[i];\n      }\n    }\n\n    return retval;\n  }\n\n  function uncompiledFilterWithCaching(items, args, cache){\n    let retval = [], idx = 0, item;\n\n    for (let i = 0, ii = items.length; i < ii; i++){\n      item = items[i];\n      if (cache[i]){\n        retval[idx++] = item;\n      } else if (filter(item, args)){\n        retval[idx++] = item;\n        cache[i] = true;\n      }\n    }\n\n    return retval;\n  }\n\n  function getFilteredAndPagedItems(items){\n    if (filter){\n      let batchFilter = options.inlineFilters ? compiledFilter : uncompiledFilter;\n      let batchFilterWithCaching = options.inlineFilters ? compiledFilterWithCaching : uncompiledFilterWithCaching;\n\n      if (refreshHints.isFilterNarrowing){\n        filteredItems = batchFilter(filteredItems, filterArgs);\n      } else if (refreshHints.isFilterExpanding){\n        filteredItems = batchFilterWithCaching(items, filterArgs, filterCache);\n      } else if (!refreshHints.isFilterUnchanged){\n        filteredItems = batchFilter(items, filterArgs);\n      }\n    } else {\n      // special case:  if not filtering and not paging, the resulting\n      // rows collection needs to be a copy so that changes due to sort\n      // can be caught\n      filteredItems = pagesize ? items : items.concat();\n    }\n\n    // get the current page\n    let paged;\n    if (pagesize){\n      if (filteredItems.length < pagenum * pagesize){\n        pagenum = Math.floor(filteredItems.length / pagesize);\n      }\n      paged = filteredItems.slice(pagesize * pagenum, pagesize * pagenum + pagesize);\n    } else {\n      paged = filteredItems;\n    }\n\n    return {totalRows: filteredItems.length, rows: paged};\n  }\n\n  function getRowDiffs(rows, newRows){\n    let item, r, eitherIsNonData, diff = [];\n    let from = 0, to = newRows.length;\n\n    if (refreshHints && refreshHints.ignoreDiffsBefore){\n      from = Math.max(0,\n        Math.min(newRows.length, refreshHints.ignoreDiffsBefore));\n    }\n\n    if (refreshHints && refreshHints.ignoreDiffsAfter){\n      to = Math.min(newRows.length,\n        Math.max(0, refreshHints.ignoreDiffsAfter));\n    }\n\n    for (let i = from, rl = rows.length; i < to; i++){\n      if (i >= rl){\n        diff[diff.length] = i;\n      } else {\n        item = newRows[i];\n        r = rows[i];\n\n        if ((groupingInfos.length && (eitherIsNonData = (item.__nonDataRow) || (r.__nonDataRow)) &&\n          item.__group !== r.__group ||\n          item.__group && !item.equals(r))\n          || (eitherIsNonData &&\n          // no good way to compare totals since they are arbitrary DTOs\n          // deep object comparison is pretty expensive\n          // always considering them 'dirty' seems easier for the time being\n          (item.__groupTotals || r.__groupTotals))\n          || item[idProperty] != r[idProperty]\n          || (updated && updated[item[idProperty]])\n        ){\n          diff[diff.length] = i;\n        }\n      }\n    }\n    return diff;\n  }\n\n  function recalc(_items){\n    rowsById = null;\n\n    if (refreshHints.isFilterNarrowing != prevRefreshHints.isFilterNarrowing ||\n      refreshHints.isFilterExpanding != prevRefreshHints.isFilterExpanding){\n      filterCache = [];\n    }\n\n    let filteredItems = getFilteredAndPagedItems(_items);\n    totalRows = filteredItems.totalRows;\n    let newRows = filteredItems.rows;\n\n    groups = [];\n    if (groupingInfos.length){\n      groups = extractGroups(newRows);\n      if (groups.length){\n        addTotals(groups);\n        newRows = flattenGroupedRows(groups);\n      }\n    }\n\n    let diff = getRowDiffs(rows, newRows);\n\n    rows = newRows;\n\n    return diff;\n  }\n\n  function refresh(){\n    if (suspend){\n      return;\n    }\n\n    let countBefore = rows.length;\n    let totalRowsBefore = totalRows;\n\n    let diff = recalc(items, filter); // pass as direct refs to avoid closure perf hit\n\n    // if the current page is no longer valid, go to last page and recalc\n    // we suffer a performance penalty here, but the main loop (recalc) remains highly optimized\n    if (pagesize && totalRows < pagenum * pagesize){\n      pagenum = Math.max(0, Math.ceil(totalRows / pagesize) - 1);\n      diff = recalc(items, filter);\n    }\n\n    updated = null;\n    prevRefreshHints = refreshHints;\n    refreshHints = {};\n\n    if (totalRowsBefore !== totalRows){\n      onPagingInfoChanged.notify(getPagingInfo(), null, self);\n    }\n    if (countBefore !== rows.length){\n      onRowCountChanged.notify({previous: countBefore, current: rows.length, dataView: self}, null, self);\n    }\n    if (diff.length > 0){\n      onRowsChanged.notify({rows: diff, dataView: self}, null, self);\n    }\n  }\n\n  /** *\n   * Wires the grid and the DataView together to keep row selection tied to item ids.\n   * This is useful since, without it, the grid only knows about rows, so if the items\n   * move around, the same rows stay selected instead of the selection moving along\n   * with the items.\n   *\n   * NOTE:  This doesn't work with cell selection model.\n   *\n   * @param grid {Slick.Grid} The grid to sync selection with.\n   * @param preserveHidden {Boolean} Whether to keep selected items that go out of the\n   *     view due to them getting filtered out.\n   * @param preserveHiddenOnSelectionChange {Boolean} Whether to keep selected items\n   *     that are currently out of the view (see preserveHidden) as selected when selection\n   *     changes.\n   * @return {Slick.Event} An event that notifies when an internal list of selected row ids\n   *     changes.  This is useful since, in combination with the above two options, it allows\n   *     access to the full list selected row ids, and not just the ones visible to the grid.\n   * @method syncGridSelection\n   */\n  function syncGridSelection(grid, preserveHidden, preserveHiddenOnSelectionChange){\n    let self = this;\n    let inHandler;\n    let selectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\n    let onSelectedRowIdsChanged = new Slick.Event();\n\n    function setSelectedRowIds(rowIds){\n      if (selectedRowIds.join(',') == rowIds.join(',')){\n        return;\n      }\n\n      selectedRowIds = rowIds;\n\n      onSelectedRowIdsChanged.notify({\n        'grid': grid,\n        'ids': selectedRowIds,\n        'dataView': self\n      }, new Slick.EventData(), self);\n    }\n\n    function update(){\n      if (selectedRowIds.length > 0){\n        inHandler = true;\n        let selectedRows = self.mapIdsToRows(selectedRowIds);\n        if (!preserveHidden){\n          setSelectedRowIds(self.mapRowsToIds(selectedRows));\n        }\n        grid.setSelectedRows(selectedRows);\n        inHandler = false;\n      }\n    }\n\n    grid.onSelectedRowsChanged.subscribe(function(e, args){\n      if (inHandler){\n        return;\n      }\n      let newSelectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\n      if (!preserveHiddenOnSelectionChange || !grid.getOptions().multiSelect){\n        setSelectedRowIds(newSelectedRowIds);\n      } else {\n        // keep the ones that are hidden\n        let existing = $.grep(selectedRowIds, function(id){\n          return self.getRowById(id) === undefined;\n        });\n        // add the newly selected ones\n        setSelectedRowIds(existing.concat(newSelectedRowIds));\n      }\n    });\n\n    this.onRowsChanged.subscribe(update);\n\n    this.onRowCountChanged.subscribe(update);\n\n    return onSelectedRowIdsChanged;\n  }\n\n  function syncGridCellCssStyles(grid, key){\n    let hashById;\n    let inHandler;\n\n    // since this method can be called after the cell styles have been set,\n    // get the existing ones right away\n    storeCellCssStyles(grid.getCellCssStyles(key));\n\n    function storeCellCssStyles(hash){\n      hashById = {};\n      for (let row in hash){\n        let id = rows[row][idProperty];\n        hashById[id] = hash[row];\n      }\n    }\n\n    function update(){\n      if (hashById){\n        inHandler = true;\n        ensureRowsByIdCache();\n        let newHash = {};\n        for (let id in hashById){\n          let row = rowsById[id];\n          if (row != undefined){\n            newHash[row] = hashById[id];\n          }\n        }\n        grid.setCellCssStyles(key, newHash);\n        inHandler = false;\n      }\n    }\n\n    grid.onCellCssStylesChanged.subscribe(function(e, args){\n      if (inHandler){\n        return;\n      }\n      if (key != args.key){\n        return;\n      }\n      if (args.hash){\n        storeCellCssStyles(args.hash);\n      }\n    });\n\n    this.onRowsChanged.subscribe(update);\n\n    this.onRowCountChanged.subscribe(update);\n  }\n\n  $.extend(this, {\n    // methods\n    'beginUpdate': beginUpdate,\n    'endUpdate': endUpdate,\n    'setPagingOptions': setPagingOptions,\n    'getPagingInfo': getPagingInfo,\n    'getItems': getItems,\n    'setItems': setItems,\n    'setFilter': setFilter,\n    'sort': sort,\n    'fastSort': fastSort,\n    'reSort': reSort,\n    'setGrouping': setGrouping,\n    'getGrouping': getGrouping,\n    'groupBy': groupBy,\n    'setAggregators': setAggregators,\n    'collapseAllGroups': collapseAllGroups,\n    'expandAllGroups': expandAllGroups,\n    'collapseGroup': collapseGroup,\n    'expandGroup': expandGroup,\n    'getGroups': getGroups,\n    'getIdxById': getIdxById,\n    'getRowById': getRowById,\n    'getItemById': getItemById,\n    'getItemByIdx': getItemByIdx,\n    'mapRowsToIds': mapRowsToIds,\n    'mapIdsToRows': mapIdsToRows,\n    'setRefreshHints': setRefreshHints,\n    'setFilterArgs': setFilterArgs,\n    'refresh': refresh,\n    'updateItem': updateItem,\n    'insertItem': insertItem,\n    'addItem': addItem,\n    'deleteItem': deleteItem,\n    'syncGridSelection': syncGridSelection,\n    'syncGridCellCssStyles': syncGridCellCssStyles,\n\n    // data provider methods\n    'getLength': getLength,\n    'getItem': getItem,\n    'getItemMetadata': getItemMetadata,\n\n    // events\n    'onRowCountChanged': onRowCountChanged,\n    'onRowsChanged': onRowsChanged,\n    'onPagingInfoChanged': onPagingInfoChanged\n  });\n}\n\nfunction AvgAggregator(field){\n  this.field_ = field;\n\n  this.init = function(){\n    this.count_ = 0;\n    this.nonNullCount_ = 0;\n    this.sum_ = 0;\n  };\n\n  this.accumulate = function(item){\n    let val = item[this.field_];\n    this.count_++;\n    if (val != null && val !== '' && !isNaN(val)){\n      this.nonNullCount_++;\n      this.sum_ += parseFloat(val);\n    }\n  };\n\n  this.storeResult = function(groupTotals){\n    if (!groupTotals.avg){\n      groupTotals.avg = {};\n    }\n    if (this.nonNullCount_ != 0){\n      groupTotals.avg[this.field_] = this.sum_ / this.nonNullCount_;\n    }\n  };\n}\n\nfunction MinAggregator(field){\n  this.field_ = field;\n\n  this.init = function(){\n    this.min_ = null;\n  };\n\n  this.accumulate = function(item){\n    let val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)){\n      if (this.min_ == null || val < this.min_){\n        this.min_ = val;\n      }\n    }\n  };\n\n  this.storeResult = function(groupTotals){\n    if (!groupTotals.min){\n      groupTotals.min = {};\n    }\n    groupTotals.min[this.field_] = this.min_;\n  };\n}\n\nfunction MaxAggregator(field){\n  this.field_ = field;\n\n  this.init = function(){\n    this.max_ = null;\n  };\n\n  this.accumulate = function(item){\n    let val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)){\n      if (this.max_ == null || val > this.max_){\n        this.max_ = val;\n      }\n    }\n  };\n\n  this.storeResult = function(groupTotals){\n    if (!groupTotals.max){\n      groupTotals.max = {};\n    }\n    groupTotals.max[this.field_] = this.max_;\n  };\n}\n\nfunction SumAggregator(field){\n  this.field_ = field;\n\n  this.init = function(){\n    this.sum_ = null;\n  };\n\n  this.accumulate = function(item){\n    let val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)){\n      this.sum_ += parseFloat(val);\n    }\n  };\n\n  this.storeResult = function(groupTotals){\n    if (!groupTotals.sum){\n      groupTotals.sum = {};\n    }\n    groupTotals.sum[this.field_] = this.sum_;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.dataview.js","import $      from 'jquery';\nimport Slick  from './slick.core';\n\nexport default GroupItemMetadataProvider;\n\n/***\n * Provides item metadata for group (Slick.Group) and totals (Slick.Totals) rows produced by the DataView.\n * This metadata overrides the default behavior and formatting of those rows so that they appear and function\n * correctly when processed by the grid.\n *\n * This class also acts as a grid plugin providing event handlers to expand & collapse groups.\n * If \"grid.registerPlugin(...)\" is not called, expand & collapse will not work.\n *\n * @class GroupItemMetadataProvider\n * @module Data\n * @namespace Slick.Data\n * @constructor\n * @param options\n */\nfunction GroupItemMetadataProvider(options){\n  let _grid;\n  let _defaults = {\n    groupCssClass: \"slick-group\",\n    groupTitleCssClass: \"slick-group-title\",\n    totalsCssClass: \"slick-group-totals\",\n    groupFocusable: true,\n    totalsFocusable: false,\n    toggleCssClass: \"slick-group-toggle\",\n    toggleExpandedCssClass: \"expanded\",\n    toggleCollapsedCssClass: \"collapsed\",\n    enableExpandCollapse: true,\n    groupFormatter: defaultGroupCellFormatter,\n    totalsFormatter: defaultTotalsCellFormatter\n  };\n\n  options = $.extend(true, {}, _defaults, options);\n\n  function defaultGroupCellFormatter(row, cell, value, columnDef, item){\n    if (!options.enableExpandCollapse){\n      return item.title;\n    }\n\n    let indentation = item.level * 15 + \"px\";\n\n    return \"<span class='\" + options.toggleCssClass + \" \" +\n      (item.collapsed ? options.toggleCollapsedCssClass : options.toggleExpandedCssClass) +\n      \"' style='margin-left:\" + indentation + \"'>\" +\n      \"</span>\" +\n      \"<span class='\" + options.groupTitleCssClass + \"' level='\" + item.level + \"'>\" +\n      item.title +\n      \"</span>\";\n  }\n\n  function defaultTotalsCellFormatter(row, cell, value, columnDef, item){\n    return (columnDef.groupTotalsFormatter && columnDef.groupTotalsFormatter(item, columnDef)) || \"\";\n  }\n\n  function init(grid){\n    _grid = grid;\n    _grid.onClick.subscribe(handleGridClick);\n    _grid.onKeyDown.subscribe(handleGridKeyDown);\n  }\n\n  function destroy(){\n    if (_grid){\n      _grid.onClick.unsubscribe(handleGridClick);\n      _grid.onKeyDown.unsubscribe(handleGridKeyDown);\n    }\n  }\n\n  function handleGridClick(e, args){\n    let item = this.getDataItem(args.row);\n    if (item && item instanceof Slick.Group && $(e.target).hasClass(options.toggleCssClass)){\n      let range = _grid.getRenderedRange();\n      this.getData().setRefreshHints({\n        ignoreDiffsBefore: range.top,\n        ignoreDiffsAfter: range.bottom + 1\n      });\n\n      if (item.collapsed){\n        this.getData().expandGroup(item.groupingKey);\n      } else {\n        this.getData().collapseGroup(item.groupingKey);\n      }\n\n      e.stopImmediatePropagation();\n      e.preventDefault();\n    }\n  }\n\n  // TODO:  add -/+ handling\n  function handleGridKeyDown(e){\n    if (options.enableExpandCollapse && (e.which == Slick.keyCode.SPACE)){\n      let activeCell = this.getActiveCell();\n      if (activeCell){\n        let item = this.getDataItem(activeCell.row);\n        if (item && item instanceof Slick.Group){\n          let range = _grid.getRenderedRange();\n          this.getData().setRefreshHints({\n            ignoreDiffsBefore: range.top,\n            ignoreDiffsAfter: range.bottom + 1\n          });\n\n          if (item.collapsed){\n            this.getData().expandGroup(item.groupingKey);\n          } else {\n            this.getData().collapseGroup(item.groupingKey);\n          }\n\n          e.stopImmediatePropagation();\n          e.preventDefault();\n        }\n      }\n    }\n  }\n\n  function getGroupRowMetadata(item){\n    return {\n      selectable: false,\n      focusable: options.groupFocusable,\n      cssClasses: options.groupCssClass,\n      columns: {\n        0: {\n          colspan: \"*\",\n          formatter: options.groupFormatter,\n          editor: null\n        }\n      }\n    };\n  }\n\n  function getTotalsRowMetadata(item){\n    return {\n      selectable: false,\n      focusable: options.totalsFocusable,\n      cssClasses: options.totalsCssClass,\n      formatter: options.totalsFormatter,\n      editor: null\n    };\n  }\n\n  return {\n    init,\n    destroy,\n    getGroupRowMetadata,\n    getTotalsRowMetadata\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.groupmetadataprovider.js","/**\n * @license\n * (c) 2009-2013 Michael Leibman\n * michael{dot}leibman{at}gmail{dot}com\n * http://github.com/mleibman/slickgrid\n *\n * Distributed under MIT license.\n * All rights reserved.\n *\n * SlickGrid v2.2\n *\n * NOTES:\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n *     and do proper cleanup.\n */\n\nimport $ from 'jquery';\nimport interact from 'interactjs';\n\nimport Slick from './slick.core';\n\n// Slick.Grid globals pretense\nSlick.Grid = SlickGrid;\n\nexport default SlickGrid;\n\n// shared across all grids on the page\nvar scrollbarDimensions;\nvar maxSupportedCssHeight;  // browser's breaking point\n\n// ////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\nfunction SlickGrid(container, data, columns, options){\n  // settings\n  var defaults = {\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    enableAsyncPostRenderCleanup: false,\n    asyncPostRenderCleanupDelay: 40,\n    autoHeight: false,\n    editorLock: Slick.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    createFooterRow: false,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: 'flashing',\n    selectedCellCssClass: 'selected',\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: 'new-row'\n  };\n\n  var columnDefaults = {\n    name: '',\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  };\n\n  // scroller\n  var th;   // virtual height\n  var h;    // real scrollable height\n  var ph;   // page height\n  var n;    // number of pages\n  var cj;   // \"jumpiness\" coefficient\n\n  var page = 0;       // current page\n  var offset = 0;     // current page offset\n  var vScrollDir = 1;\n\n  // private\n  var initialized = false;\n  var $container;\n  var uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n  var self = this;\n  var $focusSink, $focusSink2;\n  var $headerScroller;\n  var $headers;\n  var $headerRow, $headerRowScroller, $headerRowSpacer;\n  var $footerRow, $footerRowScroller, $footerRowSpacer;\n  var $topPanelScroller;\n  var $topPanel;\n  var $viewport;\n  var $canvas;\n  var $style;\n  var $boundAncestors;\n  var stylesheet, columnCssRulesL, columnCssRulesR;\n  var viewportH, viewportW;\n  var canvasWidth;\n  var viewportHasHScroll, viewportHasVScroll;\n  var headerColumnWidthDiff = 0, headerColumnHeightDiff = 0, // border+padding\n    cellWidthDiff = 0, cellHeightDiff = 0, jQueryNewWidthBehaviour = false;\n  var absoluteColumnMinWidth;\n\n  var tabbingDirection = 1;\n  var activePosX;\n  var activeRow, activeCell;\n  var activeCellNode = null;\n  var currentEditor = null;\n  var serializedEditorValue;\n  var editController;\n\n  var rowsCache = {};\n  var renderedRows = 0;\n  var numVisibleRows;\n  var prevScrollTop = 0;\n  var scrollTop = 0;\n  var lastRenderedScrollTop = 0;\n  var lastRenderedScrollLeft = 0;\n  var prevScrollLeft = 0;\n  var scrollLeft = 0;\n\n  var selectionModel;\n  var selectedRows = [];\n\n  var plugins = [];\n  var cellCssClasses = {};\n\n  var columnsById = {};\n  var sortColumns = [];\n  var columnPosLeft = [];\n  var columnPosRight = [];\n\n  // async call handles\n  var h_editorLoader = null;\n  var h_render = null;\n  var h_postrender = null;\n  var h_postrenderCleanup = null;\n  var postProcessedRows = {};\n  var postProcessToRow = null;\n  var postProcessFromRow = null;\n  var postProcessedCleanupQueue = [];\n  var postProcessgroupId = 0;\n\n  // perf counters\n  var counter_rows_rendered = 0;\n  var counter_rows_removed = 0;\n\n  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n  var rowNodeFromLastMouseWheelEvent;  // this node must not be deleted while inertial scrolling\n  var zombieRowNodeFromLastMouseWheelEvent;  // node that was hidden instead of getting deleted\n  var zombieRowCacheFromLastMouseWheelEvent;  // row cache for above node\n  var zombieRowPostProcessedFromLastMouseWheelEvent;  // post processing references for above node\n\n  // store css attributes if display:none is active in container or parent\n  var cssShow = {position: 'absolute', visibility: 'hidden', display: 'block'};\n  var $hiddenParents;\n  var oldProps = [];\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init(){\n    $container = $(container);\n    if ($container.length < 1){\n      throw new Error('SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.');\n    }\n\n    cacheCssForHiddenInit();\n\n    // calculate these only once and share between grid instances\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n    options = $.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth){\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth){\n        m.width = m.maxWidth;\n      }\n    }\n\n    editController = {\n      'commitCurrentEdit': commitCurrentEdit,\n      'cancelCurrentEdit': cancelCurrentEdit\n    };\n\n    $container\n      .empty()\n      .css('overflow', 'hidden')\n      .css('outline', 0)\n      .addClass(uid)\n      .addClass('ui-widget');\n\n    // set up a positioning container if needed\n    if (!/relative|absolute|fixed/.test($container.css('position'))){\n      $container.css('position', 'relative');\n    }\n\n    $focusSink = $(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n    $headerScroller = $(\"<div class='slick-header ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $headers = $(\"<div class='slick-header-columns' />\").appendTo($headerScroller);\n    $headers.width(getHeadersWidth());\n\n    $headerRowScroller = $(\"<div class='slick-headerrow ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $headerRow = $(\"<div class='slick-headerrow-columns' />\").appendTo($headerRowScroller);\n    $headerRowSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css('width', getCanvasWidth() + scrollbarDimensions.width + 'px')\n      .appendTo($headerRowScroller);\n\n    $topPanelScroller = $(\"<div class='slick-top-panel-scroller ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $topPanel = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScroller);\n\n    if (!options.showTopPanel){\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow){\n      $headerRowScroller.hide();\n    }\n\n    $viewport = $(\"<div class='slick-viewport' style='width:100%;overflow:auto;outline:0;position:relative;;'>\").appendTo($container);\n    $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n\n    $canvas = $(\"<div class='grid-canvas' />\").appendTo($viewport);\n\n    if (options.createFooterRow){\n      $footerRowScroller = $(\"<div class='slick-footerrow ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n      $footerRow = $(\"<div class='slick-footerrow-columns' />\").appendTo($footerRowScroller);\n      $footerRowSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n        .css('width', getCanvasWidth() + scrollbarDimensions.width + 'px')\n        .appendTo($footerRowScroller);\n\n      if (!options.showFooterRow){\n        $footerRowScroller.hide();\n      }\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization){\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization(){\n    if (!initialized){\n      initialized = true;\n\n      viewportW = parseFloat($.css($container[0], 'width', true));\n\n      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n      measureCellPaddingAndBorder();\n\n      // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells){\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.bind('selectstart.ui', function(event){\n          return $(event.target).is('input,textarea');\n        });\n      }\n\n      updateColumnCaches();\n      createColumnHeaders();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n\n      $container\n        .bind('resize.slickgrid', resizeCanvas);\n      $viewport\n      // .bind(\"click\", handleClick)\n        .bind('scroll', handleScroll);\n      $headerScroller\n        .bind('contextmenu', handleHeaderContextMenu)\n        .bind('click', handleHeaderClick)\n        .delegate('.slick-header-column', 'mouseenter', handleHeaderMouseEnter)\n        .delegate('.slick-header-column', 'mouseleave', handleHeaderMouseLeave);\n      $headerRowScroller\n        .bind('scroll', handleHeaderRowScroll);\n\n      if (options.createFooterRow){\n        $footerRowScroller\n          .bind('scroll', handleFooterRowScroll);\n      }\n\n      $focusSink.add($focusSink2)\n        .bind('keydown', handleKeyDown);\n      $canvas\n        .bind('keydown', handleKeyDown)\n        .bind('click', handleClick)\n        .bind('dblclick', handleDblClick)\n        .bind('contextmenu', handleContextMenu)\n        .delegate('.slick-cell', 'mouseenter', handleMouseEnter)\n        .delegate('.slick-cell', 'mouseleave', handleMouseLeave);\n\n      // legacy support for drag events\n      interact($canvas[0]).allowFrom('div.slick-cell').draggable({\n        onmove: handleDrag,\n        onstart: handleDragStart,\n        onend: handleDragEnd\n      }).styleCursor(false);\n\n      // Work around http://crbug.com/312427.\n      if (navigator.userAgent.toLowerCase().match(/webkit/) &&\n        navigator.userAgent.toLowerCase().match(/macintosh/)){\n        $canvas.bind('mousewheel', handleMouseWheel);\n      }\n      restoreCssFromHiddenInit();\n    }\n  }\n\n  function cacheCssForHiddenInit(){\n    // handle display:none on container or container parents\n    $hiddenParents = $container.parents().addBack().not(':visible');\n    $hiddenParents.each(function(){\n      var old = {};\n      for (var name in cssShow){\n        old[name] = this.style[name];\n        this.style[name] = cssShow[name];\n      }\n      oldProps.push(old);\n    });\n  }\n\n  function restoreCssFromHiddenInit(){\n    // finish handle display:none on container or container parents\n    // - put values back the way they were\n    $hiddenParents.each(function(i){\n      var old = oldProps[i];\n      for (var name in cssShow){\n        this.style[name] = old[name];\n      }\n    });\n  }\n\n  function registerPlugin(plugin){\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin){\n    for (var i = plugins.length; i >= 0; i--){\n      if (plugins[i] === plugin){\n        if (plugins[i].destroy){\n          plugins[i].destroy();\n        }\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model){\n    if (selectionModel){\n      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n      if (selectionModel.destroy){\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n    if (selectionModel){\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n    }\n  }\n\n  function getSelectionModel(){\n    return selectionModel;\n  }\n\n  function getCanvasNode(){\n    return $canvas[0];\n  }\n\n  function measureScrollbar(){\n    var $c = $(\"<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\").appendTo('body');\n    var dim = {\n      width: $c.width() - $c[0].clientWidth,\n      height: $c.height() - $c[0].clientHeight\n    };\n    $c.remove();\n    return dim;\n  }\n\n  function getHeadersWidth(){\n    var headersWidth = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      var width = columns[i].width;\n      headersWidth += width;\n    }\n    headersWidth += scrollbarDimensions.width;\n    return Math.max(headersWidth, viewportW) + 1000;\n  }\n\n  function getCanvasWidth(){\n    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n    var rowWidth = 0;\n    var i = columns.length;\n    while (i--){\n      rowWidth += columns[i].width;\n    }\n    return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate){\n    var oldCanvasWidth = canvasWidth;\n    canvasWidth = getCanvasWidth();\n\n    if (canvasWidth != oldCanvasWidth){\n      $canvas.width(canvasWidth);\n      $headerRow.width(canvasWidth);\n      if (options.createFooterRow){\n        $footerRow.width(canvasWidth);\n      }\n      $headers.width(getHeadersWidth());\n      viewportHasHScroll = (canvasWidth > viewportW - scrollbarDimensions.width);\n    }\n\n    var w = canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n    $headerRowSpacer.width(w);\n    if (options.createFooterRow){\n      $footerRowSpacer.width(w);\n    }\n\n    if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate){\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target){\n    if ($target && $target.jquery){\n      $target\n        .attr('unselectable', 'on')\n        .css('MozUserSelect', 'none')\n        .bind('selectstart.ui', function(){\n          return false;\n        }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight(){\n    var supportedHeight = 1000000;\n    // FF reports the height back but still renders blank after ~6M px\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n    var div = $(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true){\n      var test = supportedHeight * 2;\n      div.css('height', test);\n      if (test > testUpTo || div.height() !== test){\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  // TODO:  this is static.  need to handle page mutation.\n  function bindAncestorScrollEvents(){\n    var elem = $canvas[0];\n    while ((elem = elem.parentNode) != document.body && elem != null){\n      // bind to scroll containers only\n      if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight){\n        var $elem = $(elem);\n        if (!$boundAncestors){\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n        $elem.bind('scroll.' + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents(){\n    if (!$boundAncestors){\n      return;\n    }\n    $boundAncestors.unbind('scroll.' + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip){\n    if (!initialized){\n      return;\n    }\n    var idx = getColumnIndex(columnId);\n    if (idx == null){\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n    if ($header){\n      if (title !== undefined){\n        columns[idx].name = title;\n      }\n      if (toolTip !== undefined){\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        'node': $header[0],\n        'column': columnDef,\n        'grid': self\n      });\n\n      $header\n        .attr('title', toolTip || '')\n        .children().eq(0).html(title);\n\n      trigger(self.onHeaderCellRendered, {\n        'node': $header[0],\n        'column': columnDef,\n        'grid': self\n      });\n    }\n  }\n\n  function getHeaderRow(){\n    return $headerRow[0];\n  }\n\n  function getFooterRow(){\n    return $footerRow[0];\n  }\n\n  function getHeaderRowColumn(columnId){\n    var idx = getColumnIndex(columnId);\n    var $header = $headerRow.children().eq(idx);\n    return $header && $header[0];\n  }\n\n  function getFooterRowColumn(columnId){\n    var idx = getColumnIndex(columnId);\n    var $footer = $footerRow.children().eq(idx);\n    return $footer && $footer[0];\n  }\n\n  function createColumnHeaders(){\n    function onMouseEnter(){\n      $(this).addClass('ui-state-hover');\n    }\n\n    function onMouseLeave(){\n      $(this).removeClass('ui-state-hover');\n    }\n\n    $headers.find('.slick-header-column')\n      .each(function(){\n        var columnDef = $(this).data('column');\n        if (columnDef){\n          trigger(self.onBeforeHeaderCellDestroy, {\n            'node': this,\n            'column': columnDef,\n            'grid': self\n          });\n        }\n      });\n    $headers.empty();\n    $headers.width(getHeadersWidth());\n\n    $headerRow.find('.slick-headerrow-column')\n      .each(function(){\n        var columnDef = $(this).data('column');\n        if (columnDef){\n          trigger(self.onBeforeHeaderRowCellDestroy, {\n            'node': this,\n            'column': columnDef,\n            'grid': self\n          });\n        }\n      });\n    $headerRow.empty();\n\n    if (options.createFooterRow){\n      $footerRow.find('.slick-footerrow-column')\n        .each(function(){\n          var columnDef = $(this).data('column');\n          if (columnDef){\n            trigger(self.onBeforeFooterRowCellDestroy, {\n              'node': this,\n              'column': columnDef\n            });\n          }\n        });\n      $footerRow.empty();\n    }\n\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i];\n\n      var header = $(\"<div class='ui-state-default slick-header-column' />\")\n        .html(\"<span class='slick-column-name'>\" + m.name + '</span>')\n        .width(m.width - headerColumnWidthDiff)\n        .attr('id', '' + uid + m.id)\n        .attr('title', m.toolTip || '')\n        .data('column', m)\n        .addClass(m.headerCssClass || '')\n        .appendTo($headers);\n\n      if (options.enableColumnReorder || m.sortable){\n        header\n          .on('mouseenter', onMouseEnter)\n          .on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable){\n        header.addClass('slick-header-sortable');\n        header.append(\"<span class='slick-sort-indicator' />\");\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        'node': header[0],\n        'column': m,\n        'grid': self\n      });\n\n      if (options.showHeaderRow){\n        var headerRowCell = $(\"<div class='ui-state-default slick-headerrow-column l\" + i + ' r' + i + \"'></div>\")\n          .data('column', m)\n          .appendTo($headerRow);\n\n        trigger(self.onHeaderRowCellRendered, {\n          'node': headerRowCell[0],\n          'column': m,\n          'grid': self\n        });\n      }\n      if (options.createFooterRow && options.showFooterRow){\n        var footerRowCell = $(\"<div class='ui-state-default slick-footerrow-column l\" + i + ' r' + i + \"'></div>\")\n          .data('column', m)\n          .appendTo($footerRow);\n\n        trigger(self.onFooterRowCellRendered, {\n          'node': footerRowCell[0],\n          'column': m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n    if (options.enableColumnReorder){\n      setupColumnReorder();\n    }\n  }\n\n  function setupColumnSort(){\n    $headers.click(function(e){\n      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ($(e.target).hasClass('slick-resizable-handle')){\n        return;\n      }\n\n      var $col = $(e.target).closest('.slick-header-column');\n      if (!$col.length){\n        return;\n      }\n\n      var column = $col.data('column');\n      if (column.sortable){\n        if (!getEditorLock().commitCurrentEdit()){\n          return;\n        }\n\n        var sortOpts = null;\n        var i = 0;\n        for (; i < sortColumns.length; i++){\n          if (sortColumns[i].columnId == column.id){\n            sortOpts = sortColumns[i];\n            sortOpts.sortAsc = !sortOpts.sortAsc;\n            break;\n          }\n        }\n\n        if (e.metaKey && options.multiColumnSort){\n          if (sortOpts){\n            sortColumns.splice(i, 1);\n          }\n        }\n        else {\n          if ((!e.shiftKey && !e.metaKey) || !options.multiColumnSort){\n            sortColumns = [];\n          }\n\n          if (!sortOpts){\n            sortOpts = {columnId: column.id, sortAsc: column.defaultSortAsc};\n            sortColumns.push(sortOpts);\n          } else if (sortColumns.length == 0){\n            sortColumns.push(sortOpts);\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort){\n          trigger(self.onSort, {\n            multiColumnSort: false,\n            sortCol: column,\n            sortAsc: sortOpts.sortAsc,\n            grid: self\n          }, e);\n        } else {\n          trigger(self.onSort, {\n            multiColumnSort: true,\n            sortCols: $.map(sortColumns, function(col){\n              return {sortCol: columns[getColumnIndex(col.columnId)], sortAsc: col.sortAsc};\n            }),\n            grid: self\n          }, e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Refactored to use interactjs\n   */\n  function setupColumnReorder(){\n    let x = 0;\n    let delta = 0;\n    let placeholder = document.createElement('div');\n\n    placeholder.className = 'interact-placeholder';\n\n    interact('.slick-header-column')\n      .ignoreFrom('.slick-resizable-handle')\n      .draggable({\n        inertia: true,\n        // keep the element within the area of it's parent\n        restrict: {\n          restriction: 'parent',\n          endOnly: true,\n          elementRect: {top: 0, left: 0, bottom: 0, right: 0}\n        },\n        // enable autoScroll\n        autoScroll: true,\n        axis: 'x',\n        onstart: event => {\n          x = 0;\n          delta = event.target.offsetWidth;\n\n          // get old order\n          $headers.find('.slick-header-column').each(function(index){\n            $(this).data('index', index);\n          });\n\n          placeholder.style.height = event.target.offsetHeight + 'px';\n          placeholder.style.width = delta + 'px';\n\n          $(event.target).after(placeholder).css({\n            position: 'absolute',\n            zIndex: 1000,\n            marginLeft: $(event.target).position().left\n          });\n        },\n\n        onmove: event => {\n          x += event.dx;\n          event.target.style.transform = `translate3d(${x}px, -3px, 100px)`;\n          // event.target.style.marginLeft = x + 'px';\n        },\n\n        onend: event => {\n          x = 0;\n          delta = 0;\n          $(event.target).css({\n            position: 'relative',\n            zIndex: '',\n            marginLeft: 0,\n            transform: 'none'\n          });\n\n          placeholder.parentNode.removeChild(placeholder);\n          const newColumns = [];\n\n          $headers.find('.slick-header-column').each(function(index){\n            newColumns.push(columns[$(this).data('index')]);\n            $(this).removeData('index');\n          });\n\n          setColumns(newColumns);\n          trigger(self.onColumnsReordered, {grid: self});\n          setupColumnResize();\n        }\n      })\n      .dropzone({\n        accept: '.slick-header-column',\n\n        ondragenter: event => {\n          event.target.classList.add('interact-drop-active');\n          event.relatedTarget.classList.add('interact-can-drop');\n        },\n\n        ondragleave: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n        },\n\n        ondrop: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n          $(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n        }\n      }).styleCursor(false);\n  }\n\n  function setupColumnResize(){\n    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n    columnElements = $headers.children();\n    columnElements.find('.slick-resizable-handle').remove();\n    columnElements.each(function(i, e){\n      if (columns[i].resizable){\n        if (firstResizable === undefined){\n          firstResizable = i;\n        }\n        lastResizable = i;\n      }\n    });\n    if (firstResizable === undefined){\n      return;\n    }\n    columnElements.each(function(i, element){\n      if (i < firstResizable || (options.forceFitColumns && i >= lastResizable)){\n        return;\n      }\n      $col = $(element);\n\n      const $handle = $(\"<div class='slick-resizable-handle' />\");\n      $handle.appendTo(element);\n\n      if ($col.data('resizable'))\n        return;\n\n      const activeColumn = columns[i];\n      if (activeColumn.resizable){\n        $col.data('resizable', true);\n        interact(element).resizable({\n          preserveAspectRatio: false,\n          edges: { left: true, right: true, bottom: false, top: false }\n        }).on('resizestart', function(event){\n          if (!getEditorLock().commitCurrentEdit()){\n            return false;\n          }\n          activeColumn.previousWidth = event.rect.width;\n          event.target.classList.add('slick-header-column-active');\n        }).on('resizemove', function(event){\n          let x = event.dx;\n          let width = activeColumn.width += x;\n\n          if (activeColumn.minWidth > 0 && activeColumn.minWidth > width)\n            width = activeColumn.minWidth;\n          else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width)\n            width = activeColumn.maxWidth;\n\n          activeColumn.width = width;\n\n          if (options.forceFitColumns){\n            autosizeColumns();\n          }\n          applyColumnHeaderWidths();\n          if (options.syncColumnCellResize){\n            applyColumnWidths();\n          }\n        }).on('resizeend', function(event){\n          event.target.classList.remove('slick-header-column-active');\n          invalidateAllRows();\n          updateCanvasWidth(true);\n          render();\n          trigger(self.onColumnsResized, {grid: self});\n        });\n      }\n    });\n  }\n\n  function getVBoxDelta($el){\n    var p = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n    var delta = 0;\n    $.each(p, function(n, val){\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function measureCellPaddingAndBorder(){\n    var el;\n    var h = ['borderLeftWidth', 'borderRightWidth', 'paddingLeft', 'paddingRight'];\n    var v = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n\n    // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n    // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n    // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n    var verArray = $.fn.jquery.split('.');\n    jQueryNewWidthBehaviour = (verArray[0] == 1 && verArray[1] >= 8) || verArray[0] >= 2;\n\n    el = $(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box'){\n      $.each(h, function(n, val){\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val){\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    el.remove();\n\n    var r = $(\"<div class='slick-row' />\").appendTo($canvas);\n    el = $(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box'){\n      $.each(h, function(n, val){\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val){\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    r.remove();\n\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules(){\n    $style = $(\"<style type='text/css' rel='stylesheet' />\").appendTo($('head'));\n    var rowHeight = (options.rowHeight - cellHeightDiff);\n    var rules = [\n      '.' + uid + ' .slick-header-column { left: 0; }',\n      '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }',\n      '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }',\n      '.' + uid + ' .slick-footerrow-columns { height:' + options.footerRowHeight + 'px; }',\n      '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }',\n      '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }'\n    ];\n\n    for (var i = 0; i < columns.length; i++){\n      rules.push('.' + uid + ' .l' + i + ' { }');\n      rules.push('.' + uid + ' .r' + i + ' { }');\n    }\n\n    if ($style[0].styleSheet){ // IE\n      $style[0].styleSheet.cssText = rules.join(' ');\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n    }\n  }\n\n  function getColumnCssRules(idx){\n    if (!stylesheet){\n      var sheets = document.styleSheets;\n      for (var i = 0; i < sheets.length; i++){\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]){\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet){\n        throw new Error('Cannot find stylesheet.');\n      }\n\n      // find and cache column CSS rules\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = (stylesheet.cssRules || stylesheet.rules);\n      var matches, columnIdx;\n      for (var i = 0; i < cssRules.length; i++){\n        var selector = cssRules[i].selectorText;\n        if (matches = /\\.l\\d+/.exec(selector)){\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if (matches = /\\.r\\d+/.exec(selector)){\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      'left': columnCssRulesL[idx],\n      'right': columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules(){\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy(){\n    getEditorLock().cancelCurrentEdit();\n\n    trigger(self.onBeforeDestroy, {grid: self});\n\n    var i = plugins.length;\n    while (i--){\n      unregisterPlugin(plugins[i]);\n    }\n\n    unbindAncestorScrollEvents();\n    $container.unbind('.slickgrid');\n    removeCssRules();\n\n    $container.empty().removeClass(uid);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n  function trigger(evt, args, e){\n    e = e || new Slick.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock(){\n    return options.editorLock;\n  }\n\n  function getEditController(){\n    return editController;\n  }\n\n  function getColumnIndex(id){\n    return columnsById[id];\n  }\n\n  function autosizeColumns(){\n    var i, c,\n      widths = [],\n      shrinkLeeway = 0,\n      total = 0,\n      prevTotal,\n      availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    for (i = 0; i < columns.length; i++){\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n      if (c.resizable){\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    }\n\n    // shrink\n    prevTotal = total;\n    while (total > availWidth && shrinkLeeway){\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n      for (i = 0; i < columns.length && total > availWidth; i++){\n        c = columns[i];\n        var width = widths[i];\n        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth){\n          continue;\n        }\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n      if (prevTotal <= total){  // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    // grow\n    prevTotal = total;\n    while (total < availWidth){\n      var growProportion = availWidth / total;\n      for (i = 0; i < columns.length && total < availWidth; i++){\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth){\n          growSize = 0;\n        } else {\n          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, (c.maxWidth - currentWidth) || 1000000) || 1;\n        }\n        total += growSize;\n        widths[i] += (total <= availWidth ? growSize : 0);\n      }\n      if (prevTotal >= total){  // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    var reRender = false;\n    for (i = 0; i < columns.length; i++){\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]){\n        reRender = true;\n      }\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    updateCanvasWidth(true);\n    if (reRender){\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnHeaderWidths(){\n    if (!initialized){\n      return;\n    }\n    var h;\n    for (var i = 0, headers = $headers.children('[id]'), ii = headers.length; i < ii; i++){\n      h = $(headers[i]);\n      if (jQueryNewWidthBehaviour){\n        if (h.outerWidth() !== columns[i].width){\n          h.outerWidth(columns[i].width);\n        }\n      } else {\n        if (h.width() !== columns[i].width - headerColumnWidthDiff){\n          h.width(columns[i].width - headerColumnWidthDiff);\n        }\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths(){\n    var x = 0, w, rule;\n    for (var i = 0; i < columns.length; i++){\n      w = columns[i].width;\n\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + 'px';\n      rule.right.style.right = (canvasWidth - x - w) + 'px';\n\n      x += columns[i].width;\n    }\n  }\n\n  function setSortColumn(columnId, ascending){\n    setSortColumns([{columnId: columnId, sortAsc: ascending}]);\n  }\n\n  function setSortColumns(cols){\n    sortColumns = cols;\n\n    var headerColumnEls = $headers.children();\n    headerColumnEls\n      .removeClass('slick-header-column-sorted')\n      .find('.slick-sort-indicator')\n      .removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n\n    $.each(sortColumns, function(i, col){\n      if (col.sortAsc == null){\n        col.sortAsc = true;\n      }\n      var columnIndex = getColumnIndex(col.columnId);\n      if (columnIndex != null){\n        headerColumnEls.eq(columnIndex)\n          .addClass('slick-header-column-sorted')\n          .find('.slick-sort-indicator')\n          .addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc');\n      }\n    });\n  }\n\n  function getSortColumns(){\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges){\n    selectedRows = [];\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++){\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++){\n        if (!hash[j]){  // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++){\n          if (canCellBeSelected(j, k)){\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n\n    trigger(self.onSelectedRowsChanged, {rows: getSelectedRows(), grid: self}, e);\n  }\n\n  function getColumns(){\n    return columns;\n  }\n\n  function updateColumnCaches(){\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n      x += columns[i].width;\n    }\n  }\n\n  function setColumns(columnDefinitions){\n    columns = columnDefinitions;\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth){\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth){\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized){\n      invalidateAllRows();\n      createColumnHeaders();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions(){\n    return options;\n  }\n\n  function setOptions(args){\n    if (!getEditorLock().commitCurrentEdit()){\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow){\n      invalidateRow(getDataLength());\n    }\n\n    options = $.extend(options, args);\n    validateAndEnforceOptions();\n\n    $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n    render();\n  }\n\n  function validateAndEnforceOptions(){\n    if (options.autoHeight){\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop){\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n    if (scrollToTop){\n      scrollTo(0);\n    }\n  }\n\n  function getData(){\n    return data;\n  }\n\n  function getDataLength(){\n    if (data.getLength){\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew(){\n    return getDataLength() + (options.enableAddRow ? 1 : 0);\n  }\n\n  function getDataItem(i){\n    if (data.getItem){\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel(){\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible){\n    if (options.showTopPanel != visible){\n      options.showTopPanel = visible;\n      if (visible){\n        $topPanelScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible){\n    if (options.showHeaderRow != visible){\n      options.showHeaderRow = visible;\n      if (visible){\n        $headerRowScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible){\n    if (options.showFooterRow != visible){\n      options.showFooterRow = visible;\n      if (visible){\n        $footerRowScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $footerRowScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode(){\n    return $container.get(0);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n  function getRowTop(row){\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y){\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y){\n    y = Math.max(y, 0);\n    y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n\n    var oldOffset = offset;\n\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset){\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop){\n      vScrollDir = (prevScrollTop + oldOffset < newScrollTop + offset) ? 1 : -1;\n      $viewport[0].scrollTop = (lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop);\n\n      trigger(self.onViewportChanged, {grid: self});\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext){\n    if (value == null){\n      return '';\n    } else {\n      return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n  }\n\n  function getFormatter(row, column){\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    // look up by id, then index\n    var columnOverrides = rowMetadata &&\n      rowMetadata.columns &&\n      (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\n    return (columnOverrides && columnOverrides.formatter) ||\n      (rowMetadata && rowMetadata.formatter) ||\n      column.formatter ||\n      (options.formatterFactory && options.formatterFactory.getFormatter(column)) ||\n      options.defaultFormatter;\n  }\n\n  function getEditor(row, cell){\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined){\n      return columnMetadata[column.id].editor;\n    }\n    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined){\n      return columnMetadata[cell].editor;\n    }\n\n    return column.editor || (options.editorFactory && options.editorFactory.getEditor(column));\n  }\n\n  function getDataItemValueForColumn(item, columnDef){\n    if (options.dataItemColumnValueExtractor){\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArray, row, range, dataLength){\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss = 'slick-row' +\n      (dataLoading ? ' loading' : '') +\n      (row === activeRow ? ' active' : '') +\n      (row % 2 == 1 ? ' odd' : ' even');\n\n    if (!d){\n      rowCss += ' ' + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses){\n      rowCss += ' ' + metadata.cssClasses;\n    }\n\n    stringArray.push(\"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + getRowTop(row) + \"px'>\");\n\n    var colspan, m;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      m = columns[i];\n      colspan = 1;\n      if (metadata && metadata.columns){\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = (columnData && columnData.colspan) || 1;\n        if (colspan === '*'){\n          colspan = ii - i;\n        }\n      }\n\n      // Do not render cells outside of the viewport.\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx){\n        if (columnPosLeft[i] > range.rightPx){\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        appendCellHtml(stringArray, row, i, colspan, d);\n      }\n\n      if (colspan > 1){\n        i += (colspan - 1);\n      }\n    }\n\n    stringArray.push('</div>');\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item){\n    // stringArray: stringBuilder containing the HTML parts\n    // row, cell: row and column index\n    // colspan: HTML colspan\n    // item: grid data for row\n\n    var m = columns[cell];\n    var cellCss = 'slick-cell l' + cell + ' r' + Math.min(columns.length - 1, cell + colspan - 1) +\n      (m.cssClass ? ' ' + m.cssClass : '');\n    if (row === activeRow && cell === activeCell){\n      cellCss += (' active');\n    }\n\n    // TODO:  merge them together in the setter\n    for (var key in cellCssClasses){\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]){\n        cellCss += (' ' + cellCssClasses[key][row][m.id]);\n      }\n    }\n\n    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\n    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n    if (item){\n      var value = getDataItemValueForColumn(item, m);\n      stringArray.push(getFormatter(row, m)(row, cell, value, m, item));\n    }\n\n    stringArray.push('</div>');\n\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep){\n    for (var i in rowsCache){\n      if (((i = parseInt(i, 10)) !== activeRow) && (i < rangeToKeep.top || i > rangeToKeep.bottom)){\n        removeRowFromCache(i);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup){\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidate(){\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows(){\n    if (currentEditor){\n      makeActiveCellNormal();\n    }\n    for (var row in rowsCache){\n      removeRowFromCache(row);\n    }\n    if (options.enableAsyncPostRenderCleanup){\n      startPostProcessingCleanup();\n    }\n  }\n\n  function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx){\n    postProcessgroupId++;\n\n    // store and detach node for later async cleanup\n    for (var columnIdx in postProcessedRow){\n      if (postProcessedRow.hasOwnProperty(columnIdx)){\n        postProcessedCleanupQueue.push({\n          actionType: 'C',\n          groupId: postProcessgroupId,\n          node: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n          columnIdx: columnIdx | 0,\n          rowIdx: rowIdx\n        });\n      }\n    }\n    postProcessedCleanupQueue.push({\n      actionType: 'R',\n      groupId: postProcessgroupId,\n      node: cacheEntry.rowNode\n    });\n    $(cacheEntry.rowNode).detach();\n  }\n\n  function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx){\n    postProcessedCleanupQueue.push({\n      actionType: 'C',\n      groupId: postProcessgroupId,\n      node: cellnode,\n      columnIdx: columnIdx,\n      rowIdx: rowIdx\n    });\n    $(cellnode).detach();\n  }\n\n  function removeRowFromCache(row){\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry){\n      return;\n    }\n\n    if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode){\n      cacheEntry.rowNode.style.display = 'none';\n      zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n      zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n      zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row];\n      // ignore post processing cleanup in this case - it will be dealt with later\n    } else {\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]){\n        queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n      } else {\n        $canvas[0].removeChild(cacheEntry.rowNode);\n      }\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows){\n    var i, rl;\n    if (!rows || !rows.length){\n      return;\n    }\n    vScrollDir = 0;\n    for (i = 0, rl = rows.length; i < rl; i++){\n      if (currentEditor && activeRow === rows[i]){\n        makeActiveCellNormal();\n      }\n      if (rowsCache[rows[i]]){\n        removeRowFromCache(rows[i]);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup){\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidateRow(row){\n    invalidateRows([row]);\n  }\n\n  function updateCell(row, cell){\n    var cellNode = getCellNode(row, cell);\n    if (!cellNode){\n      return;\n    }\n\n    var m = columns[cell], d = getDataItem(row);\n    if (currentEditor && activeRow === row && activeCell === cell){\n      currentEditor.loadValue(d);\n    } else {\n      cellNode.innerHTML = d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d) : '';\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row){\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry){\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n\n    var d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx){\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)){\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n        node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor){\n        currentEditor.loadValue(d);\n      } else if (d){\n        node.innerHTML = getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n      } else {\n        node.innerHTML = '';\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight(){\n    return parseFloat($.css($container[0], 'height', true)) -\n      parseFloat($.css($container[0], 'paddingTop', true)) -\n      parseFloat($.css($container[0], 'paddingBottom', true)) -\n      parseFloat($.css($headerScroller[0], 'height')) - getVBoxDelta($headerScroller) -\n      (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) -\n      (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) -\n      (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0);\n  }\n\n  function resizeCanvas(){\n    if (!initialized){\n      return;\n    }\n    if (options.autoHeight){\n      viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n    } else {\n      viewportH = getViewportHeight();\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n    viewportW = parseFloat($.css($container[0], 'width', true));\n    if (!options.autoHeight){\n      $viewport.height(viewportH);\n    }\n\n    if (options.forceFitColumns){\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll();\n    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updateRowCount(){\n    if (!initialized){\n      return;\n    }\n\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = dataLengthIncludingAddNew +\n      (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n\n    var oldViewportHasVScroll = viewportHasVScroll;\n    // with autoHeight, we do not need to accommodate the vertical scroll bar\n    viewportHasVScroll = !options.autoHeight && (numberOfRows * options.rowHeight > viewportH);\n    viewportHasHScroll = (canvasWidth > viewportW - scrollbarDimensions.width);\n\n    makeActiveCellNormal();\n\n    // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n    var l = dataLengthIncludingAddNew - 1;\n    for (var i in rowsCache){\n      if (i > l){\n        removeRowFromCache(i);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup){\n      startPostProcessingCleanup();\n    }\n\n    if (activeCellNode && activeRow > l){\n      resetActiveCell();\n    }\n\n    var oldH = h;\n    th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n    if (th < maxSupportedCssHeight){\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH){\n      $canvas.css('height', h);\n      scrollTop = $viewport[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = (scrollTop + offset <= th - viewportH);\n\n    if (th == 0 || scrollTop == 0){\n      page = offset = 0;\n    } else if (oldScrollTopInRange){\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - viewportH);\n    }\n\n    if (h != oldH && options.autoHeight){\n      resizeCanvas();\n    }\n\n    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll){\n      autosizeColumns();\n    }\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft){\n    if (viewportTop == null){\n      viewportTop = scrollTop;\n    }\n    if (viewportLeft == null){\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft){\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = 3;\n\n    if (vScrollDir == -1){\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1){\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row){\n    var cacheEntry = rowsCache[row];\n    if (cacheEntry){\n      if (cacheEntry.cellRenderQueue.length){\n        var lastChild = cacheEntry.rowNode.lastChild;\n        while (cacheEntry.cellRenderQueue.length){\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n          lastChild = lastChild.previousSibling;\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row){\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row];\n\n    // Remove cells outside the range.\n    var cellsToRemove = [];\n    for (var i in cacheEntry.cellNodesByColumnIdx){\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)){\n        continue;\n      }\n\n      // This is a string, so it needs to be cast back to a number.\n      i = i | 0;\n\n      var colspan = cacheEntry.cellColSpans[i];\n      if (columnPosLeft[i] > range.rightPx ||\n        columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx){\n        if (!(row == activeRow && i == activeCell)){\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove, node;\n    postProcessgroupId++;\n    while ((cellToRemove = cellsToRemove.pop()) != null){\n      node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]){\n        queuePostProcessedCellForCleanup(node, cellToRemove, row);\n      } else {\n        cacheEntry.rowNode.removeChild(node);\n      }\n\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (postProcessedRows[row]){\n        delete postProcessedRows[row][cellToRemove];\n      }\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range){\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++){\n      cacheEntry = rowsCache[row];\n      if (!cacheEntry){\n        continue;\n      }\n\n      // cellRenderQueue populated in renderRows() needs to be cleared first\n      ensureCellNodesInRowsCache(row);\n\n      cleanUpCells(range, row);\n\n      // Render missing cells.\n      cellsAdded = 0;\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n\n      var d = getDataItem(row);\n\n      // TODO:  shorten this loop (index? heuristics? binary search?)\n      for (var i = 0, ii = columns.length; i < ii; i++){\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx){\n          break;\n        }\n\n        // Already rendered.\n        if ((colspan = cacheEntry.cellColSpans[i]) != null){\n          i += (colspan > 1 ? colspan - 1 : 0);\n          continue;\n        }\n\n        colspan = 1;\n        if (metadata){\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = (columnData && columnData.colspan) || 1;\n          if (colspan === '*'){\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx){\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += (colspan > 1 ? colspan - 1 : 0);\n      }\n\n      if (cellsAdded){\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length){\n      return;\n    }\n\n    var x = document.createElement('div');\n    x.innerHTML = stringArray.join('');\n\n    var processedRow;\n    var node;\n    while ((processedRow = processedRows.pop()) != null){\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null){\n        node = x.lastChild;\n        cacheEntry.rowNode.appendChild(node);\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n      }\n    }\n  }\n\n  function renderRows(range){\n    var parentNode = $canvas[0],\n      stringArray = [],\n      rows = [],\n      needToReselectCell = false,\n      dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++){\n      if (rowsCache[i]){\n        continue;\n      }\n      renderedRows++;\n      rows.push(i);\n\n      // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n      rowsCache[i] = {\n        'rowNode': null,\n\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        'cellColSpans': [],\n\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        'cellNodesByColumnIdx': [],\n\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        'cellRenderQueue': []\n      };\n\n      appendRowHtml(stringArray, i, range, dataLength);\n      if (activeCellNode && activeRow === i){\n        needToReselectCell = true;\n      }\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length){\n      return;\n    }\n\n    var x = document.createElement('div');\n    x.innerHTML = stringArray.join('');\n\n    for (var i = 0, ii = rows.length; i < ii; i++){\n      rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n    }\n\n    if (needToReselectCell){\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing(){\n    if (!options.enableAsyncPostRender){\n      return;\n    }\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n  }\n\n  function startPostProcessingCleanup(){\n    if (!options.enableAsyncPostRenderCleanup){\n      return;\n    }\n    clearTimeout(h_postrenderCleanup);\n    h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n  }\n\n  function invalidatePostProcessingResults(row){\n    // change status of columns to be re-rendered\n    for (var columnIdx in postProcessedRows[row]){\n      if (postProcessedRows[row].hasOwnProperty(columnIdx)){\n        postProcessedRows[row][columnIdx] = 'C';\n      }\n    }\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions(){\n    for (var row in rowsCache){\n      rowsCache[row].rowNode.style.top = getRowTop(row) + 'px';\n    }\n  }\n\n  function render(){\n    if (!initialized){\n      return;\n    }\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange();\n\n    // remove rows no longer in the viewport\n    cleanupRows(rendered);\n\n    // add new rows & missing cells in existing rows\n    if (lastRenderedScrollLeft != scrollLeft){\n      cleanUpAndRenderCells(rendered);\n    }\n\n    // render missing rows\n    renderRows(rendered);\n\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n    startPostProcessing();\n\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n  }\n\n  function handleHeaderRowScroll(){\n    var scrollLeft = $headerRowScroller[0].scrollLeft;\n    if (scrollLeft != $viewport[0].scrollLeft){\n      $viewport[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleFooterRowScroll(){\n    var scrollLeft = $footerRowScroller[0].scrollLeft;\n    if (scrollLeft != $viewport[0].scrollLeft){\n      $viewport[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleScroll(){\n    scrollTop = $viewport[0].scrollTop;\n    scrollLeft = $viewport[0].scrollLeft;\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist){\n      prevScrollLeft = scrollLeft;\n      $headerScroller[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScroller[0].scrollLeft = scrollLeft;\n      if (options.createFooterRow){\n        $footerRowScroller[0].scrollLeft = scrollLeft;\n      }\n    }\n\n    if (vScrollDist){\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop;\n\n      // switch virtual pages if needed\n      if (vScrollDist < viewportH){\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n        if (h == viewportH){\n          page = 0;\n        } else {\n          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n        }\n        offset = Math.round(page * cj);\n        if (oldOffset != offset){\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist){\n      if (h_render){\n        clearTimeout(h_render);\n      }\n\n      if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 ||\n        Math.abs(lastRenderedScrollLeft - scrollLeft) > 20){\n        if (options.forceSyncScrolling || (\n          Math.abs(lastRenderedScrollTop - scrollTop) < viewportH &&\n          Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW)){\n          render();\n        } else {\n          h_render = setTimeout(render, 50);\n        }\n\n        trigger(self.onViewportChanged, {grid: self});\n      }\n    }\n\n    trigger(self.onScroll, {scrollLeft: scrollLeft, scrollTop: scrollTop, grid: self});\n  }\n\n  function asyncPostProcessRows(){\n    var dataLength = getDataLength();\n    while (postProcessFromRow <= postProcessToRow){\n      var row = (vScrollDir >= 0) ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry || row >= dataLength){\n        continue;\n      }\n\n      if (!postProcessedRows[row]){\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx){\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)){\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n\n        var m = columns[columnIdx];\n        var processedStatus = postProcessedRows[row][columnIdx]; // C=cleanup and re-render, R=rendered\n        if (m.asyncPostRender && processedStatus !== 'R'){\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n          if (node){\n            m.asyncPostRender(node, row, getDataItem(row), m, (processedStatus === 'C'));\n          }\n          postProcessedRows[row][columnIdx] = 'R';\n        }\n      }\n\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n      return;\n    }\n  }\n\n  function asyncPostProcessCleanupRows(){\n    if (postProcessedCleanupQueue.length > 0){\n      var groupId = postProcessedCleanupQueue[0].groupId;\n\n      // loop through all queue members with this groupID\n      while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId){\n        var entry = postProcessedCleanupQueue.shift();\n        if (entry.actionType == 'R'){\n          $(entry.node).remove();\n        }\n        if (entry.actionType == 'C'){\n          var column = columns[entry.columnIdx];\n          if (column.asyncPostRenderCleanup && entry.node){\n            // cleanup must also remove element\n            column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n          }\n        }\n      }\n\n      // call this function again after the specified delay\n      h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash){\n    var node, columnId, addedRowHash, removedRowHash;\n    for (var row in rowsCache){\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash){\n        for (columnId in removedRowHash){\n          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]){\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node){\n              $(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash){\n        for (columnId in addedRowHash){\n          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]){\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node){\n              $(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash){\n    if (cellCssClasses[key]){\n      throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n\n    trigger(self.onCellCssStylesChanged, {'key': key, 'hash': hash, 'grid': self});\n  }\n\n  function removeCellCssStyles(key){\n    if (!cellCssClasses[key]){\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n\n    trigger(self.onCellCssStylesChanged, {'key': key, 'hash': null, 'grid': self});\n  }\n\n  function setCellCssStyles(key, hash){\n    var prevHash = cellCssClasses[key];\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n    trigger(self.onCellCssStylesChanged, {'key': key, 'hash': hash, 'grid': self});\n  }\n\n  function getCellCssStyles(key){\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed){\n    speed = speed || 100;\n    if (rowsCache[row]){\n      var $cell = $(getCellNode(row, cell));\n\n      function toggleCellClass(times){\n        if (!times){\n          return;\n        }\n        setTimeout(function(){\n          $cell.queue(function(){\n            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n            toggleCellClass(times - 1);\n          });\n        },\n          speed);\n      }\n\n      toggleCellClass(4);\n    }\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n  function handleMouseWheel(e){\n    var rowNode = $(e.target).closest('.slick-row')[0];\n    if (rowNode != rowNodeFromLastMouseWheelEvent){\n      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode){\n        if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent){\n          queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent,\n            zombieRowPostProcessedFromLastMouseWheelEvent);\n        } else {\n          $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n        }\n        zombieRowNodeFromLastMouseWheelEvent = null;\n        zombieRowCacheFromLastMouseWheelEvent = null;\n        zombieRowPostProcessedFromLastMouseWheelEvent = null;\n\n        if (options.enableAsyncPostRenderCleanup){\n          startPostProcessingCleanup();\n        }\n      }\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n  }\n\n  function handleDragStart(interactEvent){\n    var event = $.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    var cell = getCellFromEvent(event);\n    if (!cell || !cellExists(cell.row, cell.cell)){\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, interactEvent, event);\n    if (event.isImmediatePropagationStopped()){\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(interactEvent){\n    var event = $.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    return trigger(self.onDrag, interactEvent, event);\n  }\n\n  function handleDragEnd(interactEvent){\n    trigger(self.onDragEnd, interactEvent, $.Event('mousedown'));\n  }\n\n  function handleKeyDown(e){\n    trigger(self.onKeyDown, {row: activeRow, cell: activeCell, grid: self}, e);\n    var handled = e.isImmediatePropagationStopped();\n    var keyCode = Slick.keyCode;\n\n    if (!handled){\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey){\n        // editor may specify an array of keys to bubble\n        if (options.editable && currentEditor && currentEditor.keyCaptureList){\n          if (currentEditor.keyCaptureList.indexOf(e.which) > -1){\n            return;\n          }\n        }\n        if (e.which == keyCode.ESCAPE){\n          if (!getEditorLock().isActive()){\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n          cancelEditAndSetFocus();\n        } else if (e.which == keyCode.PAGE_DOWN){\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == keyCode.PAGE_UP){\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == keyCode.LEFT){\n          handled = navigateLeft();\n        } else if (e.which == keyCode.RIGHT){\n          handled = navigateRight();\n        } else if (e.which == keyCode.UP){\n          handled = navigateUp();\n        } else if (e.which == keyCode.DOWN){\n          handled = navigateDown();\n        } else if (e.which == keyCode.TAB){\n          handled = navigateNext();\n        } else if (e.which == keyCode.ENTER){\n          if (options.editable){\n            if (currentEditor){\n              // adding new row\n              if (activeRow === getDataLength()){\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()){\n                makeActiveCellEditable();\n              }\n            }\n          }\n          handled = true;\n        }\n      } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey){\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled){\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      }\n        // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n        // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      catch (error){\n      }\n    }\n  }\n\n  function handleClick(e){\n    if (!currentEditor){\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (e.target != document.activeElement || $(e.target).hasClass('slick-cell')){\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n    if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)){\n      return;\n    }\n\n    trigger(self.onClick, {row: cell.row, cell: cell.cell, grid: self}, e);\n    if (e.isImmediatePropagationStopped()){\n      return;\n    }\n\n    if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)){\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()){\n        scrollRowIntoView(cell.row, false);\n        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n      }\n    }\n  }\n\n  function handleContextMenu(e){\n    var $cell = $(e.target).closest('.slick-cell', $canvas);\n    if ($cell.length === 0){\n      return;\n    }\n\n    // are we editing this cell?\n    if (activeCellNode === $cell[0] && currentEditor !== null){\n      return;\n    }\n\n    trigger(self.onContextMenu, {grid: self}, e);\n  }\n\n  function handleDblClick(e){\n    var cell = getCellFromEvent(e);\n    if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)){\n      return;\n    }\n\n    trigger(self.onDblClick, {row: cell.row, cell: cell.cell, grid: self}, e);\n    if (e.isImmediatePropagationStopped()){\n      return;\n    }\n\n    if (options.editable){\n      gotoCell(cell.row, cell.cell, true);\n    }\n  }\n\n  function handleHeaderMouseEnter(e){\n    trigger(self.onHeaderMouseEnter, {\n      'column': $(this).data('column'),\n      'grid': self\n    }, e);\n  }\n\n  function handleHeaderMouseLeave(e){\n    trigger(self.onHeaderMouseLeave, {\n      'column': $(this).data('column'),\n      'grid': self\n    }, e);\n  }\n\n  function handleHeaderContextMenu(e){\n    var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n    var column = $header && $header.data('column');\n    trigger(self.onHeaderContextMenu, {column: column, grid: self}, e);\n  }\n\n  function handleHeaderClick(e){\n    var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n    var column = $header && $header.data('column');\n    if (column){\n      trigger(self.onHeaderClick, {column: column, grid: self}, e);\n    }\n  }\n\n  function handleMouseEnter(e){\n    trigger(self.onMouseEnter, {grid: self}, e);\n  }\n\n  function handleMouseLeave(e){\n    trigger(self.onMouseLeave, {grid: self}, e);\n  }\n\n  function cellExists(row, cell){\n    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n  }\n\n  function getCellFromPoint(x, y){\n    var row = getRowFromPosition(y);\n    var cell = 0;\n\n    var w = 0;\n    for (var i = 0; i < columns.length && w < x; i++){\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0){\n      cell = 0;\n    }\n\n    return {row: row, cell: cell - 1};\n  }\n\n  function getCellFromNode(cellNode){\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n    if (!cls){\n      throw 'getCellFromNode: cannot get cell - ' + cellNode.className;\n    }\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode){\n    for (var row in rowsCache){\n      if (rowsCache[row].rowNode === rowNode){\n        return row | 0;\n      }\n    }\n\n    return null;\n  }\n\n  function getCellFromEvent(e){\n    var $cell = $(e.target).closest('.slick-cell', $canvas);\n    if (!$cell.length){\n      return null;\n    }\n\n    var row = getRowFromNode($cell[0].parentNode);\n    var cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null){\n      return null;\n    } else {\n      return {\n        'row': row,\n        'cell': cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell){\n    if (!cellExists(row, cell)){\n      return null;\n    }\n\n    var y1 = getRowTop(row);\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n    for (var i = 0; i < cell; i++){\n      x1 += columns[i].width;\n    }\n    var x2 = x1 + columns[cell].width;\n\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n  function resetActiveCell(){\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus(){\n    if (tabbingDirection == -1){\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging){\n    scrollRowIntoView(row, doPaging);\n\n    var colspan = getColspan(row, cell);\n    var left = columnPosLeft[cell],\n      right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n      scrollRight = scrollLeft + viewportW;\n\n    if (left < scrollLeft){\n      $viewport.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight){\n      $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n      handleScroll();\n      render();\n    }\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode){\n    if (activeCellNode !== null){\n      makeActiveCellNormal();\n      $(activeCellNode).removeClass('active');\n      if (rowsCache[activeRow]){\n        $(rowsCache[activeRow].rowNode).removeClass('active');\n      }\n    }\n\n    var activeCellChanged = (activeCellNode !== newCell);\n    activeCellNode = newCell;\n\n    if (activeCellNode != null){\n      activeRow = getRowFromNode(activeCellNode.parentNode);\n      activeCell = activePosX = getCellFromNode(activeCellNode);\n\n      if (opt_editMode == null){\n        opt_editMode = (activeRow == getDataLength()) || options.autoEdit;\n      }\n\n      $(activeCellNode).addClass('active');\n      $(rowsCache[activeRow].rowNode).addClass('active');\n\n      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)){\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading){\n          h_editorLoader = setTimeout(function(){\n            makeActiveCellEditable();\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable();\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    }\n\n    if (activeCellChanged){\n      trigger(self.onActiveCellChanged, getActiveCell());\n    }\n  }\n\n  function clearTextSelection(){\n    if (document.selection && document.selection.empty){\n      try {\n        // IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e){\n      }\n    } else if (window.getSelection){\n      var sel = window.getSelection();\n      if (sel && sel.removeAllRanges){\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell){\n    var dataLength = getDataLength();\n    // is the data for this row loaded?\n    if (row < dataLength && !getDataItem(row)){\n      return false;\n    }\n\n    // are we in the Add New row?  can we create new from this cell?\n    if (columns[cell].cannotTriggerInsert && row >= dataLength){\n      return false;\n    }\n\n    // does this cell have an editor?\n    if (!getEditor(row, cell)){\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal(){\n    if (!currentEditor){\n      return;\n    }\n    trigger(self.onBeforeCellEditorDestroy, {editor: currentEditor, grid: self});\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode){\n      var d = getDataItem(activeRow);\n      $(activeCellNode).removeClass('editable invalid');\n      if (d){\n        var column = columns[activeCell];\n        var formatter = getFormatter(activeRow, column);\n        activeCellNode.innerHTML = formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n        invalidatePostProcessingResults(activeRow);\n      }\n    }\n\n    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n    if (navigator.userAgent.toLowerCase().match(/msie/)){\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor){\n    if (!activeCellNode){\n      return;\n    }\n    if (!options.editable){\n      throw 'Grid : makeActiveCellEditable : should never get called when options.editable is false';\n    }\n\n    // cancel pending async call if there is one\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)){\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (trigger(self.onBeforeEditCell, {\n      row: activeRow,\n      cell: activeCell,\n      item: item,\n      column: columnDef,\n      grid: self\n    }) === false){\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    $(activeCellNode).addClass('editable');\n\n    var useEditor = editor || getEditor(activeRow, activeCell);\n\n    // don't clear the cell if a custom editor is passed through\n    if (!editor && !useEditor.suppressClearOnEdit){\n      activeCellNode.innerHTML = '';\n    }\n\n    currentEditor = new useEditor({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item){\n      currentEditor.loadValue(item);\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position){\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus(){\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()){\n      setFocus();\n      if (options.autoEdit){\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus(){\n    if (getEditorLock().cancelCurrentEdit()){\n      setFocus();\n    }\n  }\n\n  function absBox(elem){\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: $(elem).outerWidth(),\n      height: $(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width;\n\n    // walk up the tree\n    var offsetParent = elem.offsetParent;\n    while ((elem = elem.parentNode) != document.body){\n      if (elem == null) break;\n\n      if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css('overflowY') != 'visible'){\n        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css('overflowX') != 'visible'){\n        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent){\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition(){\n    return absBox(activeCellNode);\n  }\n\n  function getGridPosition(){\n    return absBox($container[0]);\n  }\n\n  function handleActiveCellPositionChange(){\n    if (!activeCellNode){\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, {grid: self});\n\n    if (currentEditor){\n      var cellBox = getActiveCellPosition();\n      if (currentEditor.show && currentEditor.hide){\n        if (!cellBox.visible){\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position){\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor(){\n    return currentEditor;\n  }\n\n  function getActiveCell(){\n    if (!activeCellNode){\n      return null;\n    } else {\n      return {row: activeRow, cell: activeCell, grid: self};\n    }\n  }\n\n  function getActiveCellNode(){\n    return activeCellNode;\n  }\n\n  function scrollRowIntoView(row, doPaging){\n    var rowAtTop = row * options.rowHeight;\n    var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n    // need to page down?\n    if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset){\n      scrollTo(doPaging ? rowAtTop : rowAtBottom);\n      render();\n    }\n    // or page up?\n    else if (row * options.rowHeight < scrollTop + offset){\n      scrollTo(doPaging ? rowAtBottom : rowAtTop);\n      render();\n    }\n  }\n\n  function scrollRowToTop(row){\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir){\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null){\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      if (row >= dataLengthIncludingAddNew){\n        row = dataLengthIncludingAddNew - 1;\n      }\n      if (row < 0){\n        row = 0;\n      }\n\n      var cell = 0, prevCell = null;\n      var prevActivePosX = activePosX;\n      while (cell <= activePosX){\n        if (canCellBeActive(row, cell)){\n          prevCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null){\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown(){\n    scrollPage(1);\n  }\n\n  function navigatePageUp(){\n    scrollPage(-1);\n  }\n\n  function getColspan(row, cell){\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (!metadata || !metadata.columns){\n      return 1;\n    }\n\n    var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n    var colspan = (columnData && columnData.colspan);\n    if (colspan === '*'){\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row){\n    var cell = 0;\n    while (cell < columns.length){\n      if (canCellBeActive(row, cell)){\n        return cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return null;\n  }\n\n  function findLastFocusableCell(row){\n    var cell = 0;\n    var lastFocusableCell = null;\n    while (cell < columns.length){\n      if (canCellBeActive(row, cell)){\n        lastFocusableCell = cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX){\n    if (cell >= columns.length){\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    }\n    while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length){\n      return {\n        'row': row,\n        'cell': cell,\n        'posX': cell\n      };\n    }\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX){\n    if (cell <= 0){\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n    if (firstFocusableCell === null || firstFocusableCell >= cell){\n      return null;\n    }\n\n    var prev = {\n      'row': row,\n      'cell': firstFocusableCell,\n      'posX': firstFocusableCell\n    };\n    var pos;\n    while (true){\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n      if (!pos){\n        return null;\n      }\n      if (pos.cell >= cell){\n        return prev;\n      }\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX){\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (true){\n      if (++row >= dataLengthIncludingAddNew){\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX){\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)){\n        return {\n          'row': row,\n          'cell': prevCell,\n          'posX': posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX){\n    var prevCell;\n    while (true){\n      if (--row < 0){\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX){\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)){\n        return {\n          'row': row,\n          'cell': prevCell,\n          'posX': posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX){\n    if (row == null && cell == null){\n      row = cell = posX = 0;\n      if (canCellBeActive(row, cell)){\n        return {\n          'row': row,\n          'cell': cell,\n          'posX': cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n    if (pos){\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (++row < dataLengthIncludingAddNew){\n      firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell !== null){\n        return {\n          'row': row,\n          'cell': firstFocusableCell,\n          'posX': firstFocusableCell\n        };\n      }\n    }\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX){\n    if (row == null && cell == null){\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n      if (canCellBeActive(row, cell)){\n        return {\n          'row': row,\n          'cell': cell,\n          'posX': cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n    while (!pos){\n      pos = gotoLeft(row, cell, posX);\n      if (pos){\n        break;\n      }\n      if (--row < 0){\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n      if (lastSelectableCell !== null){\n        pos = {\n          'row': row,\n          'cell': lastSelectableCell,\n          'posX': lastSelectableCell\n        };\n      }\n    }\n    return pos;\n  }\n\n  function navigateRight(){\n    return navigate('right');\n  }\n\n  function navigateLeft(){\n    return navigate('left');\n  }\n\n  function navigateDown(){\n    return navigate('down');\n  }\n\n  function navigateUp(){\n    return navigate('up');\n  }\n\n  function navigateNext(){\n    return navigate('next');\n  }\n\n  function navigatePrev(){\n    return navigate('prev');\n  }\n\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n  function navigate(dir){\n    if (!options.enableCellNavigation){\n      return false;\n    }\n\n    if (!activeCellNode && dir != 'prev' && dir != 'next'){\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()){\n      return true;\n    }\n    setFocus();\n\n    var tabbingDirections = {\n      'up': -1,\n      'down': 1,\n      'left': -1,\n      'right': 1,\n      'prev': -1,\n      'next': 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n\n    var stepFunctions = {\n      'up': gotoUp,\n      'down': gotoDown,\n      'left': gotoLeft,\n      'right': gotoRight,\n      'prev': gotoPrev,\n      'next': gotoNext\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n    if (pos){\n      var isAddNewRow = (pos.row == getDataLength());\n      scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n      setActiveCellInternal(getCellNode(pos.row, pos.cell));\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell){\n    if (rowsCache[row]){\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n    return null;\n  }\n\n  function setActiveCell(row, cell){\n    if (!initialized){\n      return;\n    }\n    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0){\n      return;\n    }\n\n    if (!options.enableCellNavigation){\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), false);\n  }\n\n  function canCellBeActive(row, cell){\n    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() ||\n      row < 0 || cell >= columns.length || cell < 0){\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.focusable === 'boolean'){\n      return rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n    if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === 'boolean'){\n      return columnMetadata[columns[cell].id].focusable;\n    }\n    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === 'boolean'){\n      return columnMetadata[cell].focusable;\n    }\n\n    return columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell){\n    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0){\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.selectable === 'boolean'){\n      return rowMetadata.selectable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n    if (columnMetadata && typeof columnMetadata.selectable === 'boolean'){\n      return columnMetadata.selectable;\n    }\n\n    return columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit){\n    if (!initialized){\n      return;\n    }\n    if (!canCellBeActive(row, cell)){\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()){\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n\n    var newCell = getCellNode(row, cell);\n\n    // if selecting the 'add new' row, start editing right away\n    setActiveCellInternal(newCell, forceEdit || (row === getDataLength()) || options.autoEdit);\n\n    // if no editor was created, set the focus back on the grid\n    if (!currentEditor){\n      setFocus();\n    }\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n  function commitCurrentEdit(){\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor){\n      if (currentEditor.isValueChanged()){\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid){\n          if (activeRow < getDataLength()){\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function(){\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item,\n                  grid: self\n                });\n              },\n              undo: function(){\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item,\n                  grid: self\n                });\n              }\n            };\n\n            if (options.editCommandHandler){\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, {item: newItem, column: column, grid: self});\n          }\n\n          // check whether the lock has been re-acquired by event handlers\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          $(activeCellNode).removeClass('invalid');\n          $(activeCellNode).width();  // force layout\n          $(activeCellNode).addClass('invalid');\n\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column,\n            grid: self\n          });\n\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n    return true;\n  }\n\n  function cancelCurrentEdit(){\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows){\n    var ranges = [];\n    var lastCell = columns.length - 1;\n    for (var i = 0; i < rows.length; i++){\n      ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getSelectedRows(){\n    if (!selectionModel){\n      throw 'Selection model is not set';\n    }\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows){\n    if (!selectionModel){\n      throw 'Selection model is not set';\n    }\n    selectionModel.setSelectedRanges(rowsToRanges(rows));\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n  this.debug = function(){\n    var s = '';\n\n    s += ('\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered);\n    s += ('\\n' + 'counter_rows_removed:  ' + counter_rows_removed);\n    s += ('\\n' + 'renderedRows:  ' + renderedRows);\n    s += ('\\n' + 'numVisibleRows:  ' + numVisibleRows);\n    s += ('\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight);\n    s += ('\\n' + 'n(umber of pages):  ' + n);\n    s += ('\\n' + '(current) page:  ' + page);\n    s += ('\\n' + 'page height (ph):  ' + ph);\n    s += ('\\n' + 'vScrollDir:  ' + vScrollDir);\n\n    alert(s);\n  };\n\n  // a debug helper to be able to access private members\n  this.eval = function(expr){\n    return eval(expr);\n  };\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n  $.extend(this, {\n    'slickGridVersion': '2.2.4',\n\n    // Events\n    'onScroll': new Slick.Event(),\n    'onSort': new Slick.Event(),\n    'onHeaderMouseEnter': new Slick.Event(),\n    'onHeaderMouseLeave': new Slick.Event(),\n    'onHeaderContextMenu': new Slick.Event(),\n    'onHeaderClick': new Slick.Event(),\n    'onHeaderCellRendered': new Slick.Event(),\n    'onBeforeHeaderCellDestroy': new Slick.Event(),\n    'onHeaderRowCellRendered': new Slick.Event(),\n    'onFooterRowCellRendered': new Slick.Event(),\n    'onBeforeHeaderRowCellDestroy': new Slick.Event(),\n    'onBeforeFooterRowCellDestroy': new Slick.Event(),\n    'onMouseEnter': new Slick.Event(),\n    'onMouseLeave': new Slick.Event(),\n    'onClick': new Slick.Event(),\n    'onDblClick': new Slick.Event(),\n    'onContextMenu': new Slick.Event(),\n    'onKeyDown': new Slick.Event(),\n    'onAddNewRow': new Slick.Event(),\n    'onValidationError': new Slick.Event(),\n    'onViewportChanged': new Slick.Event(),\n    'onColumnsReordered': new Slick.Event(),\n    'onColumnsResized': new Slick.Event(),\n    'onCellChange': new Slick.Event(),\n    'onBeforeEditCell': new Slick.Event(),\n    'onBeforeCellEditorDestroy': new Slick.Event(),\n    'onBeforeDestroy': new Slick.Event(),\n    'onActiveCellChanged': new Slick.Event(),\n    'onActiveCellPositionChanged': new Slick.Event(),\n    'onDragInit': new Slick.Event(),\n    'onDragStart': new Slick.Event(),\n    'onDrag': new Slick.Event(),\n    'onDragEnd': new Slick.Event(),\n    'onSelectedRowsChanged': new Slick.Event(),\n    'onCellCssStylesChanged': new Slick.Event(),\n\n    // Methods\n    'registerPlugin': registerPlugin,\n    'unregisterPlugin': unregisterPlugin,\n    'getColumns': getColumns,\n    'setColumns': setColumns,\n    'getColumnIndex': getColumnIndex,\n    'updateColumnHeader': updateColumnHeader,\n    'setSortColumn': setSortColumn,\n    'setSortColumns': setSortColumns,\n    'getSortColumns': getSortColumns,\n    'autosizeColumns': autosizeColumns,\n    'getOptions': getOptions,\n    'setOptions': setOptions,\n    'getData': getData,\n    'getDataLength': getDataLength,\n    'getDataItem': getDataItem,\n    'setData': setData,\n    'getSelectionModel': getSelectionModel,\n    'setSelectionModel': setSelectionModel,\n    'getSelectedRows': getSelectedRows,\n    'setSelectedRows': setSelectedRows,\n    'getContainerNode': getContainerNode,\n\n    'render': render,\n    'invalidate': invalidate,\n    'invalidateRow': invalidateRow,\n    'invalidateRows': invalidateRows,\n    'invalidateAllRows': invalidateAllRows,\n    'updateCell': updateCell,\n    'updateRow': updateRow,\n    'getViewport': getVisibleRange,\n    'getRenderedRange': getRenderedRange,\n    'resizeCanvas': resizeCanvas,\n    'updateRowCount': updateRowCount,\n    'scrollRowIntoView': scrollRowIntoView,\n    'scrollRowToTop': scrollRowToTop,\n    'scrollCellIntoView': scrollCellIntoView,\n    'getCanvasNode': getCanvasNode,\n    'focus': setFocus,\n\n    'getCellFromPoint': getCellFromPoint,\n    'getCellFromEvent': getCellFromEvent,\n    'getActiveCell': getActiveCell,\n    'setActiveCell': setActiveCell,\n    'getActiveCellNode': getActiveCellNode,\n    'getActiveCellPosition': getActiveCellPosition,\n    'resetActiveCell': resetActiveCell,\n    'editActiveCell': makeActiveCellEditable,\n    'getCellEditor': getCellEditor,\n    'getCellNode': getCellNode,\n    'getCellNodeBox': getCellNodeBox,\n    'canCellBeSelected': canCellBeSelected,\n    'canCellBeActive': canCellBeActive,\n    'navigatePrev': navigatePrev,\n    'navigateNext': navigateNext,\n    'navigateUp': navigateUp,\n    'navigateDown': navigateDown,\n    'navigateLeft': navigateLeft,\n    'navigateRight': navigateRight,\n    'navigatePageUp': navigatePageUp,\n    'navigatePageDown': navigatePageDown,\n    'gotoCell': gotoCell,\n    'getTopPanel': getTopPanel,\n    'setTopPanelVisibility': setTopPanelVisibility,\n    'setHeaderRowVisibility': setHeaderRowVisibility,\n    'getHeaderRow': getHeaderRow,\n    'getHeaderRowColumn': getHeaderRowColumn,\n    'setFooterRowVisibility': setFooterRowVisibility,\n    'getFooterRow': getFooterRow,\n    'getFooterRowColumn': getFooterRowColumn,\n    'getGridPosition': getGridPosition,\n    'flashCell': flashCell,\n    'addCellCssStyles': addCellCssStyles,\n    'setCellCssStyles': setCellCssStyles,\n    'removeCellCssStyles': removeCellCssStyles,\n    'getCellCssStyles': getCellCssStyles,\n\n    'init': finishInitialization,\n    'destroy': destroy,\n\n    // IEditor implementation\n    'getEditorLock': getEditorLock,\n    'getEditController': getEditController\n  });\n\n  init();\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.grid.js","/**\n * @license\n * (c) 2009-2013 Michael Leibman\n * michael{dot}leibman{at}gmail{dot}com\n * http://github.com/mleibman/slickgrid\n *\n * Distributed under MIT license.\n * All rights reserved.\n *\n * SlickGrid v2.2\n *\n * NOTES:\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n *     and do proper cleanup.\n */\n\nimport $ from 'jquery';\nimport interact from 'interactjs';\n\nimport Slick from './slick.core';\n\n// Slick.Grid globals pretense\nSlick.FrozenGrid = SlickGrid;\n\nexport default SlickGrid;\n\n// shared across all grids on the page\nvar scrollbarDimensions;\nvar maxSupportedCssHeight; // browser's breaking point\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\nfunction SlickGrid(container, data, columns, options){\n  // settings\n  var defaults = {\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    autoHeight: false,\n    editorLock: Slick.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: \"flashing\",\n    selectedCellCssClass: \"selected\",\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    frozenBottom: false,\n    frozenColumn: -1,\n    frozenRow: -1,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: \"new-row\"\n  };\n\n  var columnDefaults = {\n    name: \"\",\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  };\n\n  // scroller\n  var th; // virtual height\n  var h; // real scrollable height\n  var ph; // page height\n  var n; // number of pages\n  var cj; // \"jumpiness\" coefficient\n\n  var page = 0; // current page\n  var offset = 0; // current page offset\n  var vScrollDir = 1;\n\n  // private\n  var initialized = false;\n  var $container;\n  var uid = \"slickgrid_\" + Math.round(1000000 * Math.random());\n  var self = this;\n  var $focusSink, $focusSink2;\n  var $groupHeaders = $();\n  var $headerScroller;\n  var $headers;\n  var $headerRow, $headerRowScroller, $headerRowSpacerL, $headerRowSpacerR;\n  var $footerRow, $footerRowScroller, $footerRowSpacerL, $footerRowSpacerR;\n  var $topPanelScroller;\n  var $topPanel;\n  var $viewport;\n  var $canvas;\n  var $style;\n  var $boundAncestors;\n  var treeColumns;\n  var stylesheet, columnCssRulesL, columnCssRulesR;\n  var viewportH, viewportW;\n  var canvasWidth, canvasWidthL, canvasWidthR;\n  var headersWidth, headersWidthL, headersWidthR;\n  var viewportHasHScroll, viewportHasVScroll;\n  var headerColumnWidthDiff = 0,\n    headerColumnHeightDiff = 0, // border+padding\n    cellWidthDiff = 0,\n    cellHeightDiff = 0;\n  var absoluteColumnMinWidth;\n  var hasFrozenRows = false;\n  var frozenRowsHeight = 0;\n  var actualFrozenRow = -1;\n  var paneTopH = 0;\n  var paneBottomH = 0;\n  var viewportTopH = 0;\n  var viewportBottomH = 0;\n  var topPanelH = 0;\n  var headerRowH = 0;\n  var footerRowH = 0;\n\n  var tabbingDirection = 1;\n  var $activeCanvasNode;\n  var $activeViewportNode;\n  var activePosX;\n  var activeRow, activeCell;\n  var activeCellNode = null;\n  var currentEditor = null;\n  var serializedEditorValue;\n  var editController;\n\n  var rowsCache = {};\n  var renderedRows = 0;\n  var numVisibleRows = 0;\n  var prevScrollTop = 0;\n  var scrollTop = 0;\n  var lastRenderedScrollTop = 0;\n  var lastRenderedScrollLeft = 0;\n  var prevScrollLeft = 0;\n  var scrollLeft = 0;\n\n  var selectionModel;\n  var selectedRows = [];\n\n  var plugins = [];\n  var cellCssClasses = {};\n\n  var columnsById = {};\n  var sortColumns = [];\n  var columnPosLeft = [];\n  var columnPosRight = [];\n\n  // async call handles\n  var h_editorLoader = null;\n  var h_render = null;\n  var h_postrender = null;\n  var postProcessedRows = {};\n  var postProcessToRow = null;\n  var postProcessFromRow = null;\n\n  // perf counters\n  var counter_rows_rendered = 0;\n  var counter_rows_removed = 0;\n\n  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n  var rowNodeFromLastMouseWheelEvent; // this node must not be deleted while inertial scrolling\n  var zombieRowNodeFromLastMouseWheelEvent; // node that was hidden instead of getting deleted\n\n  var $paneHeaderL;\n  var $paneHeaderR;\n  var $paneTopL;\n  var $paneTopR;\n  var $paneBottomL;\n  var $paneBottomR;\n\n  var $headerScrollerL;\n  var $headerScrollerR;\n\n  var $headerL;\n  var $headerR;\n\n  var $groupHeadersL;\n  var $groupHeadersR;\n\n  var $headerRowScrollerL;\n  var $headerRowScrollerR;\n\n  var $footerRowScrollerL;\n  var $footerRowScrollerR;\n\n  var $headerRowL;\n  var $headerRowR;\n\n  var $footerRowL;\n  var $footerRowR;\n\n  var $topPanelScrollerL;\n  var $topPanelScrollerR;\n\n  var $topPanelL;\n  var $topPanelR;\n\n  var $viewportTopL;\n  var $viewportTopR;\n  var $viewportBottomL;\n  var $viewportBottomR;\n\n  var $canvasTopL;\n  var $canvasTopR;\n  var $canvasBottomL;\n  var $canvasBottomR;\n\n  var $viewportScrollContainerX;\n  var $viewportScrollContainerY;\n  var $headerScrollContainer;\n  var $headerRowScrollContainer;\n  var $footerRowScrollContainer;\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init(){\n    $container = $(container);\n    if ($container.length < 1){\n      throw new Error(\"SlickGrid requires a valid container, \" + container + \" does not exist in the DOM.\");\n    }\n\n    // calculate these only once and share between grid instances\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n    options = $.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n\n    treeColumns = new Slick.TreeColumns(columns);\n    columns = treeColumns.extractColumns();\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth){\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth){\n        m.width = m.maxWidth;\n      }\n    }\n\n    editController = {\n      \"commitCurrentEdit\": commitCurrentEdit,\n      \"cancelCurrentEdit\": cancelCurrentEdit\n    };\n\n    $container.empty()\n      .css(\"overflow\", \"hidden\")\n      .css(\"outline\", 0)\n      .addClass(uid)\n      .addClass(\"ui-widget\");\n\n    // set up a positioning container if needed\n    if (!/relative|absolute|fixed/.test($container.css(\"position\"))){\n      $container.css(\"position\", \"relative\");\n    }\n\n    $focusSink = $(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n    // Containers used for scrolling frozen columns and rows\n    $paneHeaderL = $(\"<div class='slick-pane slick-pane-header slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneHeaderR = $(\"<div class='slick-pane slick-pane-header slick-pane-right' tabIndex='0' />\").appendTo($container);\n    $paneTopL = $(\"<div class='slick-pane slick-pane-top slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneTopR = $(\"<div class='slick-pane slick-pane-top slick-pane-right' tabIndex='0' />\").appendTo($container);\n    $paneBottomL = $(\"<div class='slick-pane slick-pane-bottom slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneBottomR = $(\"<div class='slick-pane slick-pane-bottom slick-pane-right' tabIndex='0' />\").appendTo($container);\n\n    // Append the header scroller containers\n    $headerScrollerL = $(\"<div class='ui-state-default slick-header slick-header-left' />\").appendTo($paneHeaderL);\n    $headerScrollerR = $(\"<div class='ui-state-default slick-header slick-header-right' />\").appendTo($paneHeaderR);\n\n    // Cache the header scroller containers\n    $headerScroller = $().add($headerScrollerL).add($headerScrollerR);\n\n    if (treeColumns.hasDepth()){\n      $groupHeadersL = [], $groupHeadersR = [];\n      for (var index = 0; index < treeColumns.getDepth() - 1; index++){\n        $groupHeadersL[index] = $(\"<div class='slick-group-header-columns slick-group-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n        $groupHeadersR[index] = $(\"<div class='slick-group-header-columns slick-group-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n      }\n\n      $groupHeaders = $().add($groupHeadersL).add($groupHeadersR);\n    }\n\n    // Append the columnn containers to the headers\n    $headerL = $(\"<div class='slick-header-columns slick-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n    $headerR = $(\"<div class='slick-header-columns slick-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n\n    // Cache the header columns\n    $headers = $().add($headerL).add($headerR);\n\n    $headerRowScrollerL = $(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopL);\n    $headerRowScrollerR = $(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopR);\n\n    $headerRowScroller = $().add($headerRowScrollerL).add($headerRowScrollerR);\n\n    $headerRowSpacerL = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\n      .appendTo($headerRowScrollerL);\n    $headerRowSpacerR = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\n      .appendTo($headerRowScrollerR);\n\n    $headerRowL = $(\"<div class='slick-headerrow-columns slick-headerrow-columns-left' />\").appendTo($headerRowScrollerL);\n    $headerRowR = $(\"<div class='slick-headerrow-columns slick-headerrow-columns-right' />\").appendTo($headerRowScrollerR);\n\n    $headerRow = $().add($headerRowL).add($headerRowR);\n\n    // Append the top panel scroller\n    $topPanelScrollerL = $(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopL);\n    $topPanelScrollerR = $(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopR);\n\n    $topPanelScroller = $().add($topPanelScrollerL).add($topPanelScrollerR);\n\n    // Append the top panel\n    $topPanelL = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerL);\n    $topPanelR = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerR);\n\n    $topPanel = $().add($topPanelL).add($topPanelR);\n\n    if (!options.showTopPanel){\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow){\n      $headerRowScroller.hide();\n    }\n\n    // Append the viewport containers\n    $viewportTopL = $(\"<div class='slick-viewport slick-viewport-top slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneTopL);\n    $viewportTopR = $(\"<div class='slick-viewport slick-viewport-top slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneTopR);\n    $viewportBottomL = $(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneBottomL);\n    $viewportBottomR = $(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneBottomR);\n\n    // Cache the viewports\n    $viewport = $().add($viewportTopL).add($viewportTopR).add($viewportBottomL).add($viewportBottomR);\n\n    // Default the active viewport to the top left\n    $activeViewportNode = $viewportTopL;\n\n    // Append the canvas containers\n    $canvasTopL = $(\"<div class='grid-canvas grid-canvas-top grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportTopL);\n    $canvasTopR = $(\"<div class='grid-canvas grid-canvas-top grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportTopR);\n    $canvasBottomL = $(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportBottomL);\n    $canvasBottomR = $(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportBottomR);\n\n    // Cache the canvases\n    $canvas = $().add($canvasTopL).add($canvasTopR).add($canvasBottomL).add($canvasBottomR);\n\n    // Default the active canvas to the top left\n    $activeCanvasNode = $canvasTopL;\n\n    // footer Row\n    $footerRowScrollerR = $(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopR);\n    $footerRowScrollerL = $(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopL);\n\n    $footerRowScroller = $().add($footerRowScrollerL).add($footerRowScrollerR);\n\n    $footerRowSpacerL = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\n      .appendTo($footerRowScrollerL);\n    $footerRowSpacerR = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\n      .appendTo($footerRowScrollerR);\n\n    $footerRowL = $(\"<div class='slick-footerrow-columns slick-footerrow-columns-left' />\").appendTo($footerRowScrollerL);\n    $footerRowR = $(\"<div class='slick-footerrow-columns slick-footerrow-columns-right' />\").appendTo($footerRowScrollerR);\n\n    $footerRow = $().add($footerRowL).add($footerRowR);\n\n    if (!options.showFooterRow){\n      $footerRowScroller.hide();\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization){\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization(){\n    if (!initialized){\n      initialized = true;\n\n      getViewportWidth();\n      getViewportHeight();\n\n      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n      measureCellPaddingAndBorder();\n\n      // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells){\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.bind(\"selectstart.ui\", function(event){\n          return $(event.target).is(\"input,textarea\");\n        });\n      }\n\n      setFrozenOptions();\n      setPaneVisibility();\n      setScroller();\n      setOverflow();\n\n      updateColumnCaches();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n\n      $container.bind(\"resize.slickgrid\", resizeCanvas);\n      $viewport.on(\"scroll\", handleScroll);\n\n      if ($.fn.mousewheel && (options.frozenColumn > -1 || hasFrozenRows)){\n        $viewport.on(\"mousewheel\", handleMouseWheel);\n      }\n\n      $headerScroller.bind(\"contextmenu\", handleHeaderContextMenu)\n        .bind(\"click\", handleHeaderClick)\n        .delegate(\".slick-header-column\", \"mouseenter\", handleHeaderMouseEnter)\n        .delegate(\".slick-header-column\", \"mouseleave\", handleHeaderMouseLeave);\n      $headerRowScroller.bind(\"scroll\", handleHeaderRowScroll);\n\n      $footerRowScroller.bind(\"scroll\", handleFooterRowScroll);\n\n      $focusSink.add($focusSink2)\n        .bind(\"keydown\", handleKeyDown);\n      $canvas.bind(\"keydown\", handleKeyDown)\n        .bind(\"click\", handleClick)\n        .bind(\"dblclick\", handleDblClick)\n        .bind(\"contextmenu\", handleContextMenu)\n        .delegate(\".slick-cell\", \"mouseenter\", handleMouseEnter)\n        .delegate(\".slick-cell\", \"mouseleave\", handleMouseLeave);\n\n      // legacy support for drag events\n      interact($canvas[0]).allowFrom('div.slick-cell').draggable({\n        onmove: handleDrag,\n        onstart: handleDragStart,\n        onend: handleDragEnd\n      }).styleCursor(false);\n\n      // Work around http://crbug.com/312427.\n      if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)){\n        $canvas.on(\"mousewheel\", handleMouseWheel);\n      }\n    }\n  }\n\n  function hasFrozenColumns(){\n    return options.frozenColumn > -1;\n  }\n\n  function registerPlugin(plugin){\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin){\n    for (var i = plugins.length; i >= 0; i--){\n      if (plugins[i] === plugin){\n        if (plugins[i].destroy){\n          plugins[i].destroy();\n        }\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model){\n    if (selectionModel){\n      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n      if (selectionModel.destroy){\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n    if (selectionModel){\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n    }\n  }\n\n  function getSelectionModel(){\n    return selectionModel;\n  }\n\n  function getCanvasNode(){\n    return $canvas[0];\n  }\n\n  function getActiveCanvasNode(element){\n    setActiveCanvasNode(element);\n\n    return $activeCanvasNode[0];\n  }\n\n  function getCanvases(){\n    return $canvas;\n  }\n\n  function setActiveCanvasNode(element){\n    if (element){\n      $activeCanvasNode = $(element.target).closest('.grid-canvas');\n    }\n  }\n\n  function getViewportNode(){\n    return $viewport[0];\n  }\n\n  function getActiveViewportNode(element){\n    setActiveViewPortNode(element);\n\n    return $activeViewportNode[0];\n  }\n\n  function setActiveViewportNode(element){\n    if (element){\n      $activeViewportNode = $(element.target).closest('.slick-viewport');\n    }\n  }\n\n  function measureScrollbar(){\n    var $c = $(\"<div class='scrollbar-fix' style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\").appendTo(document.body);\n    var dim = {\n      width: $c.width() - $c[0].clientWidth,\n      height: $c.height() - $c[0].clientHeight\n    };\n    $c.remove();\n    return dim;\n  }\n\n  function getHeadersWidth(){\n    headersWidth = headersWidthL = headersWidthR = 0;\n\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      var width = columns[i].width;\n\n      if ((options.frozenColumn) > -1 && (i > options.frozenColumn)){\n        headersWidthR += width;\n      } else {\n        headersWidthL += width;\n      }\n    }\n\n    if (hasFrozenColumns()){\n      headersWidthL = headersWidthL + 1000;\n\n      headersWidthR = Math.max(headersWidthR, viewportW) + headersWidthL;\n      headersWidthR += scrollbarDimensions.width;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    headersWidth = headersWidthL + headersWidthR;\n  }\n\n  function getHeadersWidthL(){\n    headersWidthL = 0;\n\n    columns.forEach(function(column, i){\n      if (!((options.frozenColumn) > -1 && (i > options.frozenColumn))) headersWidthL += column.width;\n    });\n\n    if (hasFrozenColumns()){\n      headersWidthL += 1000;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    return headersWidthL;\n  }\n\n  function getHeadersWidthR(){\n    headersWidthR = 0;\n\n    columns.forEach(function(column, i){\n      if ((options.frozenColumn) > -1 && (i > options.frozenColumn)) headersWidthR += column.width;\n    });\n\n    if (hasFrozenColumns()){\n      headersWidthR = Math.max(headersWidthR, viewportW) + getHeadersWidthL();\n      headersWidthR += scrollbarDimensions.width;\n    }\n\n    return headersWidthR;\n  }\n\n  function getCanvasWidth(){\n    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    var i = columns.length;\n\n    canvasWidthL = canvasWidthR = 0;\n\n    while (i--){\n      if (hasFrozenColumns() && (i > options.frozenColumn)){\n        canvasWidthR += columns[i].width;\n      } else {\n        canvasWidthL += columns[i].width;\n      }\n    }\n\n    var totalRowWidth = canvasWidthL + canvasWidthR;\n\n    return options.fullWidthRows ? Math.max(totalRowWidth, availableWidth) : totalRowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate){\n    var oldCanvasWidth = canvasWidth;\n    var oldCanvasWidthL = canvasWidthL;\n    var oldCanvasWidthR = canvasWidthR;\n    var widthChanged;\n    canvasWidth = getCanvasWidth();\n\n    widthChanged = canvasWidth !== oldCanvasWidth || canvasWidthL !== oldCanvasWidthL || canvasWidthR !== oldCanvasWidthR;\n\n    if (widthChanged || hasFrozenColumns() || hasFrozenRows){\n      $canvasTopL.width(canvasWidthL);\n\n      getHeadersWidth();\n\n      $headerL.width(headersWidthL);\n      $headerR.width(headersWidthR);\n\n      if (hasFrozenColumns()){\n        $canvasTopR.width(canvasWidthR);\n\n        $paneHeaderL.width(canvasWidthL);\n        $paneHeaderR.css('left', canvasWidthL);\n        $paneHeaderR.css('width', viewportW - canvasWidthL);\n\n        $paneTopL.width(canvasWidthL);\n        $paneTopR.css('left', canvasWidthL);\n        $paneTopR.css('width', viewportW - canvasWidthL);\n\n        $headerRowScrollerL.width(canvasWidthL);\n        $headerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $headerRowL.width(canvasWidthL);\n        $headerRowR.width(canvasWidthR);\n\n        $footerRowScrollerL.width(canvasWidthL);\n        $footerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $footerRowL.width(canvasWidthL);\n        $footerRowR.width(canvasWidthR);\n\n        $viewportTopL.width(canvasWidthL);\n        $viewportTopR.width(viewportW - canvasWidthL);\n\n        if (hasFrozenRows){\n          $paneBottomL.width(canvasWidthL);\n          $paneBottomR.css('left', canvasWidthL);\n\n          $viewportBottomL.width(canvasWidthL);\n          $viewportBottomR.width(viewportW - canvasWidthL);\n\n          $canvasBottomL.width(canvasWidthL);\n          $canvasBottomR.width(canvasWidthR);\n        }\n      } else {\n        $paneHeaderL.width('100%');\n\n        $paneTopL.width('100%');\n\n        $headerRowScrollerL.width('100%');\n\n        $headerRowL.width(canvasWidth);\n\n        $footerRowScrollerL.width('100%');\n\n        $footerRowL.width(canvasWidth);\n\n        $viewportTopL.width('100%');\n\n        if (hasFrozenRows){\n          $viewportBottomL.width('100%');\n          $canvasBottomL.width(canvasWidthL);\n        }\n      }\n\n      viewportHasHScroll = (canvasWidth > viewportW - scrollbarDimensions.width);\n    }\n\n    $headerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n    $headerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\n    $footerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n    $footerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\n    if (widthChanged || forceColumnWidthsUpdate){\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target){\n    if ($target && $target.jquery){\n      $target.attr(\"unselectable\", \"on\")\n        .css(\"MozUserSelect\", \"none\")\n        .bind(\"selectstart.ui\", function(){\n          return false;\n        }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight(){\n    var supportedHeight = 1000000;\n    // FF reports the height back but still renders blank after ~6M px\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n    var div = $(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true){\n      var test = supportedHeight * 2;\n      div.css(\"height\", test);\n      if (test > testUpTo || div.height() !== test){\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  // TODO:  this is static.  need to handle page mutation.\n  function bindAncestorScrollEvents(){\n    var elem = (hasFrozenRows && !options.frozenBottom) ? $canvasBottomL[0] : $canvasTopL[0];\n    while ((elem = elem.parentNode) != document.body && elem != null){\n      // bind to scroll containers only\n      if (elem == $viewportTopL[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight){\n        var $elem = $(elem);\n        if (!$boundAncestors){\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n        $elem.bind(\"scroll.\" + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents(){\n    if (!$boundAncestors){\n      return;\n    }\n    $boundAncestors.unbind(\"scroll.\" + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip){\n    if (!initialized){\n      return;\n    }\n    var idx = getColumnIndex(columnId);\n    if (idx == null){\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n    if ($header){\n      if (title !== undefined){\n        columns[idx].name = title;\n      }\n      if (toolTip !== undefined){\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        \"node\": $header[0],\n        \"column\": columnDef\n      });\n\n      $header.attr(\"title\", toolTip || \"\")\n        .children().eq(0).html(title);\n\n      trigger(self.onHeaderCellRendered, {\n        \"node\": $header[0],\n        \"column\": columnDef\n      });\n    }\n  }\n\n  function getHeaderRow(){\n    return hasFrozenColumns() ? $headerRow : $headerRow[0];\n  }\n\n  function getHeaderRowColumn(columnId){\n    var idx = getColumnIndex(columnId);\n\n    var $headerRowTarget;\n\n    if (hasFrozenColumns()){\n      if (idx <= options.frozenColumn){\n        $headerRowTarget = $headerRowL;\n      } else {\n        $headerRowTarget = $headerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $headerRowTarget = $headerRowL;\n    }\n\n    var $header = $headerRowTarget.children().eq(idx);\n    return $header && $header[0];\n  }\n\n  function getFooterRow(){\n    return hasFrozenColumns() ? $footerRow : $footerRow[0];\n  }\n\n  function getFooterRowColumn(columnId){\n    var idx = getColumnIndex(columnId);\n\n    var $footerRowTarget;\n\n    if (hasFrozenColumns()){\n      if (idx <= options.frozenColumn){\n        $footerRowTarget = $footerRowL;\n      } else {\n        $footerRowTarget = $footerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $footerRowTarget = $footerRowL;\n    }\n\n    var $footer = $footerRowTarget.children().eq(idx);\n    return $footer && $footer[0];\n  }\n\n  function createColumnFooter(){\n    $footerRow.find(\".slick-footerrow-column\")\n      .each(function(){\n        var columnDef = $(this).data(\"column\");\n        if (columnDef){\n          trigger(self.onBeforeFooterRowCellDestroy, {\n            \"node\": this,\n            \"column\": columnDef\n          });\n        }\n      });\n\n    $footerRowL.empty();\n    $footerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i];\n\n      var footerRowCell = $(\"<div class='ui-state-default slick-footerrow-column l\" + i + \" r\" + i + \"'></div>\")\n        .data(\"column\", m)\n        .addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '')\n        .appendTo(hasFrozenColumns() && (i > options.frozenColumn) ? $footerRowR : $footerRowL);\n\n      trigger(self.onFooterRowCellRendered, {\n        \"node\": footerRowCell[0],\n        \"column\": m\n      });\n    }\n  }\n\n  function createColumnGroupHeaders(){\n    var columnsLength = 0;\n    var frozenColumnsValid = false;\n\n    if (!treeColumns.hasDepth()) return;\n\n    for (var index = 0; index < $groupHeadersL.length; index++){\n\n      $groupHeadersL[index].empty();\n      $groupHeadersR[index].empty();\n\n      var groupColumns = treeColumns.getColumnsInDepth(index);\n\n      for (var indexGroup in groupColumns){\n        var m = groupColumns[indexGroup];\n\n        columnsLength += m.extractColumns().length;\n\n        if (hasFrozenColumns() && index == 0 && (columnsLength - 1) === options.frozenColumn) frozenColumnsValid = true;\n\n        $(\"<div class='ui-state-default slick-group-header-column' />\")\n          .html(\"<span class='slick-column-name'>\" + m.name + \"</span>\")\n          .attr(\"id\", \"\" + uid + m.id)\n          .attr(\"title\", m.toolTip || \"\")\n          .data(\"column\", m)\n          .addClass(m.headerCssClass || \"\")\n          .addClass(hasFrozenColumns() && (columnsLength - 1) <= options.frozenColumn ? 'frozen' : '')\n          .appendTo(hasFrozenColumns() && (columnsLength - 1) > options.frozenColumn ? $groupHeadersR[index] : $groupHeadersL[index]);\n      }\n\n      if (hasFrozenColumns() && index == 0 && !frozenColumnsValid){\n        $groupHeadersL[index].empty();\n        $groupHeadersR[index].empty();\n        alert(\"All columns of group should to be grouped!\");\n        break;\n      }\n    }\n\n    applyColumnGroupHeaderWidths();\n  }\n\n  function createColumnHeaders(){\n    function onMouseEnter(){\n      $(this).addClass(\"ui-state-hover\");\n    }\n\n    function onMouseLeave(){\n      $(this).removeClass(\"ui-state-hover\");\n    }\n\n    $headers.find(\".slick-header-column\")\n      .each(function(){\n        var columnDef = $(this).data(\"column\");\n        if (columnDef){\n          trigger(self.onBeforeHeaderCellDestroy, {\n            \"node\": this,\n            \"column\": columnDef\n          });\n        }\n      });\n\n    $headerL.empty();\n    $headerR.empty();\n\n    getHeadersWidth();\n\n    $headerL.width(headersWidthL);\n    $headerR.width(headersWidthR);\n\n    $headerRow.find(\".slick-headerrow-column\")\n      .each(function(){\n        var columnDef = $(this).data(\"column\");\n        if (columnDef){\n          trigger(self.onBeforeHeaderRowCellDestroy, {\n            \"node\": this,\n            \"column\": columnDef\n          });\n        }\n      });\n\n    $headerRowL.empty();\n    $headerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i];\n\n      var $headerTarget = hasFrozenColumns() ? ((i <= options.frozenColumn) ? $headerL : $headerR) : $headerL;\n      var $headerRowTarget = hasFrozenColumns() ? ((i <= options.frozenColumn) ? $headerRowL : $headerRowR) : $headerRowL;\n\n      var header = $(\"<div class='ui-state-default slick-header-column' />\")\n        .html(\"<span class='slick-column-name'>\" + m.name + \"</span>\")\n        .width(m.width)\n        .attr(\"id\", \"\" + uid + m.id)\n        .attr(\"title\", m.toolTip || \"\")\n        .data(\"column\", m)\n        .addClass(m.headerCssClass || \"\")\n        .addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '')\n        .appendTo($headerTarget);\n\n      if (options.enableColumnReorder || m.sortable){\n        header.on('mouseenter', onMouseEnter)\n          .on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable){\n        header.addClass(\"slick-header-sortable\");\n        header.append(\"<span class='slick-sort-indicator' />\");\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        \"node\": header[0],\n        \"column\": m\n      });\n\n      if (options.showHeaderRow){\n        var headerRowCell = $(\"<div class='ui-state-default slick-headerrow-column l\" + i + \" r\" + i + \"'></div>\")\n          .data(\"column\", m)\n          .appendTo($headerRowTarget);\n\n        trigger(self.onHeaderRowCellRendered, {\n          \"node\": headerRowCell[0],\n          \"column\": m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n    if (options.enableColumnReorder){\n      setupColumnReorder();\n    }\n  }\n\n  function setupColumnSort(){\n    $headers.click(function(e){\n      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ($(e.target).hasClass(\"slick-resizable-handle\")){\n        return;\n      }\n\n      var $col = $(e.target).closest(\".slick-header-column\");\n      if (!$col.length){\n        return;\n      }\n\n      var column = $col.data(\"column\");\n      if (column.sortable){\n        if (!getEditorLock().commitCurrentEdit()){\n          return;\n        }\n\n        var sortOpts = null;\n        var i = 0;\n        for (; i < sortColumns.length; i++){\n          if (sortColumns[i].columnId == column.id){\n            sortOpts = sortColumns[i];\n            sortOpts.sortAsc = !sortOpts.sortAsc;\n            break;\n          }\n        }\n\n        if (e.metaKey && options.multiColumnSort){\n          if (sortOpts){\n            sortColumns.splice(i, 1);\n          }\n        } else {\n          if ((!e.shiftKey && !e.metaKey) || !options.multiColumnSort){\n            sortColumns = [];\n          }\n\n          if (!sortOpts){\n            sortOpts = {\n              columnId: column.id,\n              sortAsc: column.defaultSortAsc\n            };\n            sortColumns.push(sortOpts);\n          } else if (sortColumns.length == 0){\n            sortColumns.push(sortOpts);\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort){\n          trigger(self.onSort, {\n            multiColumnSort: false,\n            sortCol: column,\n            sortAsc: sortOpts.sortAsc\n          }, e);\n        } else {\n          trigger(self.onSort, {\n            multiColumnSort: true,\n            sortCols: $.map(sortColumns, function(col){\n              return {\n                sortCol: columns[getColumnIndex(col.columnId)],\n                sortAsc: col.sortAsc\n              };\n            })\n          }, e);\n        }\n      }\n    });\n  }\n\n  function currentPositionInHeader(id){\n    var currentPosition = 0;\n    $headers.find('.slick-header-column').each(function(i){\n      if (this.id == id){\n        currentPosition = i;\n        return false;\n      }\n    });\n\n    return currentPosition;\n  }\n\n  function limitPositionInGroup(idColumn){\n    var groupColumnOfPreviousPosition,\n      startLimit = 0,\n      endLimit = 0;\n\n    treeColumns.getColumnsInDepth($groupHeadersL.length - 1)\n      .some(function(groupColumn){\n        startLimit = endLimit;\n        endLimit += groupColumn.columns.length;\n\n        groupColumn.columns.some(function(column){\n\n          if (column.id === idColumn) groupColumnOfPreviousPosition = groupColumn;\n\n          return groupColumnOfPreviousPosition;\n        });\n\n        return groupColumnOfPreviousPosition;\n      });\n\n    endLimit--;\n\n    return {\n      start: startLimit,\n      end: endLimit,\n      group: groupColumnOfPreviousPosition\n    }\n  }\n\n  function remove(arr, elem){\n    var index = arr.lastIndexOf(elem);\n    if (index > -1){\n      arr.splice(index, 1);\n      remove(arr, elem);\n    }\n  }\n\n  function columnPositionValidInGroup($item){\n    var currentPosition = currentPositionInHeader($item[0].id);\n    var limit = limitPositionInGroup($item.data('column').id);\n    var positionValid = limit.start <= currentPosition && currentPosition <= limit.end;\n\n    return {\n      limit: limit,\n      valid: positionValid,\n      message: positionValid ? '' : 'Column \"'.concat($item.text(), '\" can be reordered only within the \"', limit.group.name, '\" group!')\n    };\n  }\n\n  function setupColumnReorder(){\n    let x = 0;\n    let delta = 0;\n    let placeholder = document.createElement('div');\n\n    placeholder.className = 'interact-placeholder';\n\n    interact('.slick-header-column')\n      .ignoreFrom('.slick-resizable-handle')\n      .draggable({\n        inertia: true,\n        // keep the element within the area of it's parent\n        restrict: {\n          restriction: 'parent',\n          endOnly: true,\n          elementRect: {top: 0, left: 0, bottom: 0, right: 0}\n        },\n        // enable autoScroll\n        autoScroll: true,\n        axis: 'x',\n        onstart: event => {\n          x = 0;\n          delta = event.target.offsetWidth;\n\n          // get old order\n          $headers.find('.slick-header-column').each(function(index){\n            $(this).data('index', index);\n          });\n\n          placeholder.style.height = event.target.offsetHeight + 'px';\n          placeholder.style.width = delta + 'px';\n\n          $(event.target).after(placeholder).css({\n            position: 'absolute',\n            zIndex: 1000,\n            marginLeft: $(event.target).position().left - 1000\n          });\n        },\n\n        onmove: event => {\n          x += event.dx;\n          event.target.style.transform = `translate3d(${x}px, -3px, 100px)`;\n          // event.target.style.marginLeft = x + 'px';\n        },\n\n        onend: event => {\n          x = 0;\n          delta = 0;\n\n          if (treeColumns.hasDepth()) {\n            var validPositionInGroup = columnPositionValidInGroup($(event.target));\n            var limit = validPositionInGroup.limit;\n\n            var cancel = !validPositionInGroup.valid;\n\n            if (cancel)\n              alert(validPositionInGroup.message);\n          }\n\n          placeholder.parentNode.removeChild(placeholder);\n\n          if (cancel){\n            event.target.style.transform = 'none';\n            setColumns(getColumns());\n            return;\n          }\n\n          $(event.target).css({\n            position: 'relative',\n            zIndex: '',\n            marginLeft: 0,\n            transform: 'none'\n          });\n\n          const newColumns = [];\n          $headers.find('.slick-header-column').each(function(index){\n            newColumns.push(columns[$(this).data('index')]);\n            $(this).removeData('index');\n          });\n\n          setColumns(newColumns);\n\n          trigger(self.onColumnsReordered, { impactedColumns : getImpactedColumns( limit ), grid: self });\n          setupColumnResize();\n        }\n      })\n      .dropzone({\n        accept: '.slick-header-column',\n\n        ondragenter: event => {\n          event.target.classList.add('interact-drop-active');\n          event.relatedTarget.classList.add('interact-can-drop');\n        },\n\n        ondragleave: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n        },\n\n        ondrop: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n          $(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n        }\n      }).styleCursor(false);\n  }\n\n  function getImpactedColumns(limit){\n    var impactedColumns = [];\n\n    if (limit != undefined){\n\n      for (var i = limit.start; i <= limit.end; i++){\n        impactedColumns.push(columns[i]);\n      }\n    } else {\n\n      impactedColumns = columns;\n    }\n\n    return impactedColumns;\n  }\n\n  function setupColumnResize(){\n    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n    columnElements = $headers.children();\n    columnElements.find('.slick-resizable-handle').remove();\n    columnElements.each(function(i, e){\n      if (columns[i].resizable){\n        if (firstResizable === undefined){\n          firstResizable = i;\n        }\n        lastResizable = i;\n      }\n    });\n    if (firstResizable === undefined){\n      return;\n    }\n    columnElements.each(function(i, element){\n      if (i < firstResizable || (options.forceFitColumns && i >= lastResizable)){\n        return;\n      }\n      $col = $(element);\n\n      const $handle = $(\"<div class='slick-resizable-handle' />\");\n      $handle.appendTo(element);\n\n      if ($col.data('resizable'))\n        return;\n\n      const activeColumn = columns[i];\n      if (activeColumn.resizable){\n        $col.data('resizable', true);\n        interact(element).resizable({\n          preserveAspectRatio: false,\n          edges: { left: true, right: true, bottom: false, top: false }\n        }).on('resizestart', function(event){\n          if (!getEditorLock().commitCurrentEdit()){\n            return false;\n          }\n          activeColumn.previousWidth = event.rect.width;\n          event.target.classList.add('slick-header-column-active');\n        }).on('resizemove', function(event){\n          let x = event.dx;\n          let width = activeColumn.width += x;\n\n          if (activeColumn.minWidth > 0 && activeColumn.minWidth > width)\n            width = activeColumn.minWidth;\n          else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width)\n            width = activeColumn.maxWidth;\n\n          activeColumn.width = width;\n\n          if (options.forceFitColumns){\n            autosizeColumns();\n          }\n          applyColumnHeaderWidths();\n          if (options.syncColumnCellResize){\n            applyColumnWidths();\n          }\n        }).on('resizeend', function(event){\n          event.target.classList.remove('slick-header-column-active');\n          if (treeColumns.hasDepth())\n            createColumnGroupHeaders();\n\n          invalidateAllRows();\n          updateCanvasWidth(true);\n          render();\n          trigger(self.onColumnsResized, {grid: self});\n        });\n      }\n    });\n  }\n\n  function getVBoxDelta($el){\n    var p = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n    var delta = 0;\n    $.each(p, function(n, val){\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function setFrozenOptions(){\n    options.frozenColumn = (options.frozenColumn >= 0 && options.frozenColumn < columns.length) ? parseInt(options.frozenColumn) : -1;\n\n    options.frozenRow = (options.frozenRow >= 0 && options.frozenRow < numVisibleRows) ? parseInt(options.frozenRow) : -1;\n\n    if (options.frozenRow > -1){\n      hasFrozenRows = true;\n      frozenRowsHeight = (options.frozenRow) * options.rowHeight;\n\n      var dataLength = getDataLength() || this.data.length;\n\n      actualFrozenRow = (options.frozenBottom) ? (dataLength - options.frozenRow) : options.frozenRow;\n    } else {\n      hasFrozenRows = false;\n    }\n  }\n\n  function setPaneVisibility(){\n    if (hasFrozenColumns()){\n      $paneHeaderR.show();\n      $paneTopR.show();\n\n      if (hasFrozenRows){\n        $paneBottomL.show();\n        $paneBottomR.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    } else {\n      $paneHeaderR.hide();\n      $paneTopR.hide();\n      $paneBottomR.hide();\n\n      if (hasFrozenRows){\n        $paneBottomL.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    }\n  }\n\n  function setOverflow(){\n    $viewportTopL.css({\n      'overflow-x': (hasFrozenColumns()) ? (hasFrozenRows ? 'hidden' : 'scroll') : (hasFrozenRows ? 'hidden' : 'auto'),\n      'overflow-y': (hasFrozenColumns()) ? (hasFrozenRows ? 'hidden' : 'hidden') : (hasFrozenRows ? 'scroll' : 'auto')\n    });\n\n    $viewportTopR.css({\n      'overflow-x': (hasFrozenColumns()) ? (hasFrozenRows ? 'hidden' : 'scroll') : (hasFrozenRows ? 'hidden' : 'auto'),\n      'overflow-y': (hasFrozenColumns()) ? (hasFrozenRows ? 'scroll' : 'auto') : (hasFrozenRows ? 'scroll' : 'auto')\n    });\n\n    $viewportBottomL.css({\n      'overflow-x': (hasFrozenColumns()) ? (hasFrozenRows ? 'scroll' : 'auto') : (hasFrozenRows ? 'auto' : 'auto'),\n      'overflow-y': (hasFrozenColumns()) ? (hasFrozenRows ? 'hidden' : 'hidden') : (hasFrozenRows ? 'scroll' : 'auto')\n    });\n\n    $viewportBottomR.css({\n      'overflow-x': (hasFrozenColumns()) ? (hasFrozenRows ? 'scroll' : 'auto') : (hasFrozenRows ? 'auto' : 'auto'),\n      'overflow-y': (hasFrozenColumns()) ? (hasFrozenRows ? 'auto' : 'auto') : (hasFrozenRows ? 'auto' : 'auto')\n    });\n  }\n\n  function setScroller(){\n    if (hasFrozenColumns()){\n      $headerScrollContainer = $headerScrollerR;\n      $headerRowScrollContainer = $headerRowScrollerR;\n      $footerRowScrollContainer = $footerRowScrollerR\n\n      if (hasFrozenRows){\n        if (options.frozenBottom){\n          $viewportScrollContainerX = $viewportBottomR;\n          $viewportScrollContainerY = $viewportTopR;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomR;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopR;\n      }\n    } else {\n      $headerScrollContainer = $headerScrollerL;\n      $headerRowScrollContainer = $headerRowScrollerL;\n      $footerRowScrollContainer = $footerRowScrollerL;\n\n      if (hasFrozenRows){\n        if (options.frozenBottom){\n          $viewportScrollContainerX = $viewportBottomL;\n          $viewportScrollContainerY = $viewportTopL;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomL;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopL;\n      }\n    }\n  }\n\n  function measureCellPaddingAndBorder(){\n    var el;\n    var h = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"];\n    var v = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n\n    el = $(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\"){\n      $.each(h, function(n, val){\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val){\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    el.remove();\n\n    var r = $(\"<div class='slick-row' />\").appendTo($canvas);\n    el = $(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\"){\n      $.each(h, function(n, val){\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val){\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    r.remove();\n\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules(){\n    $style = $(\"<style type='text/css' rel='stylesheet' />\").appendTo($(\"head\"));\n\n    const getRule = rule => `.${uid} ${rule}`\n\n    const rowHeight = (options.rowHeight - cellHeightDiff);\n    const rules = [\n      getRule('.slick-group-header-column { left: 1000px; }'),\n      getRule('.slick-header-column { left: 1000px; }'),\n      getRule(`.slick-top-panel { height: ${options.topPanelHeight}px; }`),\n      getRule(`.slick-headerrow-columns, .${uid} .slick-header-columns { height: ${options.headerRowHeight}px; }`),\n      getRule(`.slick-cell { height: ${rowHeight}px; }`),\n      getRule(`.slick-row { height: ${options.rowHeight}px; }`),\n      getRule(`.slick-footerrow-columns, ${uid} .slick-footer-columns  { height: ${options.footerRowHeight}px; }`)\n    ];\n\n    for (let i = 0; i < columns.length; i++){\n      rules.push(`.${uid} .l${i} { }`);\n      rules.push(`.${uid} .r${i} { }`);\n    }\n\n    if ($style[0].styleSheet){ // IE\n      $style[0].styleSheet.cssText = rules.join(' ');\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n    }\n  }\n\n  function getColumnCssRules(idx){\n    if (!stylesheet){\n      var sheets = document.styleSheets;\n      for (var i = 0; i < sheets.length; i++){\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]){\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet){\n        throw new Error(\"Cannot find stylesheet.\");\n      }\n\n      // find and cache column CSS rules\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = (stylesheet.cssRules || stylesheet.rules);\n      var matches, columnIdx;\n      for (var i = 0; i < cssRules.length; i++){\n        var selector = cssRules[i].selectorText;\n        if (matches = /\\.l\\d+/.exec(selector)){\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if (matches = /\\.r\\d+/.exec(selector)){\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      \"left\": columnCssRulesL[idx],\n      \"right\": columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules(){\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy(){\n    getEditorLock().cancelCurrentEdit();\n\n    trigger(self.onBeforeDestroy, {});\n\n    var i = plugins.length;\n    while (i--){\n      unregisterPlugin(plugins[i]);\n    }\n\n    unbindAncestorScrollEvents();\n    $container.unbind(\".slickgrid\");\n    removeCssRules();\n\n    $container.empty().removeClass(uid);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n  function trigger(evt, args, e){\n    e = e || new Slick.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock(){\n    return options.editorLock;\n  }\n\n  function getEditController(){\n    return editController;\n  }\n\n  function getColumnIndex(id){\n    return columnsById[id];\n  }\n\n  function autosizeColumns(){\n    var i, c,\n      widths = [],\n      shrinkLeeway = 0,\n      total = 0,\n      prevTotal,\n      availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    for (i = 0; i < columns.length; i++){\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n      if (c.resizable){\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    }\n\n    // shrink\n    prevTotal = total;\n    while (total > availWidth && shrinkLeeway){\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n      for (i = 0; i < columns.length && total > availWidth; i++){\n        c = columns[i];\n        var width = widths[i];\n        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth){\n          continue;\n        }\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n      if (prevTotal <= total){ // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    // grow\n    prevTotal = total;\n    while (total < availWidth){\n      var growProportion = availWidth / total;\n      for (i = 0; i < columns.length && total < availWidth; i++){\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth){\n          growSize = 0;\n        } else {\n          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, (c.maxWidth - currentWidth) || 1000000) || 1;\n        }\n        total += growSize;\n        widths[i] += growSize;\n      }\n      if (prevTotal >= total){ // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    var reRender = false;\n    for (i = 0; i < columns.length; i++){\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]){\n        reRender = true;\n      }\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    applyColumnGroupHeaderWidths();\n    updateCanvasWidth(true);\n    if (reRender){\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnGroupHeaderWidths(){\n    if (!treeColumns.hasDepth()) return;\n\n    for (var depth = $groupHeadersL.length - 1; depth >= 0; depth--){\n\n      var groupColumns = treeColumns.getColumnsInDepth(depth);\n\n      $().add($groupHeadersL[depth]).add($groupHeadersR[depth]).each(function(i){\n        var $groupHeader = $(this),\n          currentColumnIndex = 0;\n\n        $groupHeader.width(i == 0 ? getHeadersWidthL() : getHeadersWidthR());\n\n        $groupHeader.children().each(function(){\n          var $groupHeaderColumn = $(this);\n\n          var m = $(this).data('column');\n\n          m.width = 0;\n\n          m.columns.forEach(function(){\n            var $headerColumn = $groupHeader.next().children(':eq(' + (currentColumnIndex++) + ')');\n            m.width += $headerColumn.outerWidth();\n          })\n\n          $groupHeaderColumn.width(m.width - headerColumnWidthDiff);\n\n        });\n\n      })\n\n    }\n  }\n\n  function applyColumnHeaderWidths(){\n    if (!initialized){\n      return;\n    }\n    var h;\n    for (var i = 0, headers = $headers.children(), ii = headers.length; i < ii; i++){\n      h = $(headers[i]);\n      if (h.css('width') !== columns[i].width - headerColumnWidthDiff){\n        h.css('width', columns[i].width - headerColumnWidthDiff);\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths(){\n    var x = 0,\n      w, rule;\n    for (var i = 0; i < columns.length; i++){\n      w = columns[i].width;\n\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + \"px\";\n      rule.right.style.right = (((options.frozenColumn != -1 && i > options.frozenColumn) ? canvasWidthR : canvasWidthL) - x - w) + \"px\";\n\n      // If this column is frozen, reset the css left value since the\n      // column starts in a new viewport.\n      if (options.frozenColumn == i){\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setSortColumn(columnId, ascending){\n    setSortColumns([{\n      columnId: columnId,\n      sortAsc: ascending\n    }]);\n  }\n\n  function setSortColumns(cols){\n    sortColumns = cols;\n\n    var headerColumnEls = $headers.children();\n    headerColumnEls.removeClass(\"slick-header-column-sorted\")\n      .find(\".slick-sort-indicator\")\n      .removeClass(\"slick-sort-indicator-asc slick-sort-indicator-desc\");\n\n    $.each(sortColumns, function(i, col){\n      if (col.sortAsc == null){\n        col.sortAsc = true;\n      }\n      var columnIndex = getColumnIndex(col.columnId);\n      if (columnIndex != null){\n        headerColumnEls.eq(columnIndex)\n          .addClass(\"slick-header-column-sorted\")\n          .find(\".slick-sort-indicator\")\n          .addClass(col.sortAsc ? \"slick-sort-indicator-asc\" : \"slick-sort-indicator-desc\");\n      }\n    });\n  }\n\n  function getSortColumns(){\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges){\n    selectedRows = [];\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++){\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++){\n        if (!hash[j]){ // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++){\n          if (canCellBeSelected(j, k)){\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n\n    trigger(self.onSelectedRowsChanged, {\n      rows: getSelectedRows()\n    }, e);\n  }\n\n  function getColumns(){\n    return columns;\n  }\n\n  function updateColumnCaches(){\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n\n      if (options.frozenColumn == i){\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setColumns(columnDefinitions){\n    var _treeColumns = new Slick.TreeColumns(columnDefinitions);\n    if (_treeColumns.hasDepth()){\n      treeColumns = _treeColumns;\n      columns = treeColumns.extractColumns();\n    } else {\n      columns = columnDefinitions;\n    }\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth){\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth){\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized){\n      setPaneVisibility();\n      setOverflow();\n\n      invalidateAllRows();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      updateCanvasWidth();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions(){\n    return options;\n  }\n\n  function setOptions(args){\n    if (!getEditorLock().commitCurrentEdit()){\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow){\n      invalidateRow(getDataLength());\n    }\n\n    options = $.extend(options, args);\n    validateAndEnforceOptions();\n\n    setFrozenOptions();\n    setScroller();\n    zombieRowNodeFromLastMouseWheelEvent = null;\n\n    setColumns(treeColumns.extractColumns());\n    render();\n  }\n\n  function validateAndEnforceOptions(){\n    if (options.autoHeight){\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop){\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n    if (scrollToTop){\n      scrollTo(0);\n    }\n  }\n\n  function getData(){\n    return data;\n  }\n\n  function getDataLength(){\n    if (data.getLength){\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew(){\n    return getDataLength() + (options.enableAddRow ? 1 : 0);\n  }\n\n  function getDataItem(i){\n    if (data.getItem){\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel(){\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible){\n    if (options.showTopPanel != visible){\n      options.showTopPanel = visible;\n      if (visible){\n        $topPanelScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible){\n    if (options.showHeaderRow != visible){\n      options.showHeaderRow = visible;\n      if (visible){\n        $headerRowScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible){\n    if (options.showFooterRow != visible){\n      options.showFooterRow = visible;\n      if (visible){\n        $footerRowScroller.fadeIn(\"fast\", resizeCanvas);\n      } else {\n        $footerRowScroller.slideDown(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode(){\n    return $container.get(0);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n  function getRowTop(row){\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y){\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y){\n    y = Math.max(y, 0);\n    y = Math.min(y, th - $viewportScrollContainerY.height() + ((viewportHasHScroll || hasFrozenColumns()) ? scrollbarDimensions.height : 0));\n\n    var oldOffset = offset;\n\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset){\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop){\n      vScrollDir = (prevScrollTop + oldOffset < newScrollTop + offset) ? 1 : -1;\n\n      lastRenderedScrollTop = (scrollTop = prevScrollTop = newScrollTop);\n\n      if (hasFrozenColumns()){\n        $viewportTopL[0].scrollTop = newScrollTop;\n      }\n\n      if (hasFrozenRows){\n        $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\n      }\n\n      $viewportScrollContainerY[0].scrollTop = newScrollTop;\n\n      trigger(self.onViewportChanged, {});\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext){\n    if (value == null){\n      return \"\";\n    } else {\n      return (value + \"\").replace(/&/g, \"&\").replace(/</g, \"<\").replace(/>/g, \">\");\n    }\n  }\n\n  function getFormatter(row, column){\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    // look up by id, then index\n    var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\n    return (columnOverrides && columnOverrides.formatter) || (rowMetadata && rowMetadata.formatter) || column.formatter || (options.formatterFactory && options.formatterFactory.getFormatter(column)) || options.defaultFormatter;\n  }\n\n  function callFormatter(row, cell, value, m, item){\n\n    var result;\n\n    // pass metadata to formatter\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    metadata = metadata && metadata.columns;\n\n    if (metadata){\n      var columnData = metadata[m.id] || metadata[cell];\n      result = getFormatter(row, m)(row, cell, value, m, item, columnData);\n    } else {\n      result = getFormatter(row, m)(row, cell, value, m, item);\n    }\n\n    return result;\n  }\n\n  function getEditor(row, cell){\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined){\n      return columnMetadata[column.id].editor;\n    }\n    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined){\n      return columnMetadata[cell].editor;\n    }\n\n    return column.editor || (options.editorFactory && options.editorFactory.getEditor(column));\n  }\n\n  function getDataItemValueForColumn(item, columnDef){\n    if (options.dataItemColumnValueExtractor){\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArrayL, stringArrayR, row, range, dataLength){\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss = \"slick-row\" + (hasFrozenRows && row < options.frozenRow ? ' frozen' : '') + (dataLoading ? \" loading\" : \"\") + (row === activeRow ? \" active\" : \"\") + (row % 2 == 1 ? \" odd\" : \" even\");\n\n    if (!d){\n      rowCss += \" \" + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses){\n      rowCss += \" \" + metadata.cssClasses;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var rowHtml = \"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + (getRowTop(row) - frozenRowOffset) + \"px'>\";\n\n    stringArrayL.push(rowHtml);\n\n    if (hasFrozenColumns()){\n      stringArrayR.push(rowHtml);\n    }\n\n    var colspan, m;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      m = columns[i];\n      colspan = 1;\n      if (metadata && metadata.columns){\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = (columnData && columnData.colspan) || 1;\n        if (colspan === \"*\"){\n          colspan = ii - i;\n        }\n      }\n\n      // Do not render cells outside of the viewport.\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx){\n        if (columnPosLeft[i] > range.rightPx){\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        if (hasFrozenColumns() && (i > options.frozenColumn)){\n          appendCellHtml(stringArrayR, row, i, colspan, d);\n        } else {\n          appendCellHtml(stringArrayL, row, i, colspan, d);\n        }\n      } else if (hasFrozenColumns() && (i <= options.frozenColumn)){\n        appendCellHtml(stringArrayL, row, i, colspan, d);\n      }\n\n      if (colspan > 1){\n        i += (colspan - 1);\n      }\n    }\n\n    stringArrayL.push(\"</div>\");\n\n    if (hasFrozenColumns()){\n      stringArrayR.push(\"</div>\");\n    }\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item){\n    var m = columns[cell];\n    var cellCss = \"slick-cell l\" + cell + \" r\" + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? \" \" + m.cssClass : \"\");\n\n    if (hasFrozenColumns() && cell <= options.frozenColumn) cellCss += ' frozen';\n\n    if (row === activeRow && cell === activeCell) cellCss += \" active\";\n\n    // TODO:  merge them together in the setter\n    for (var key in cellCssClasses){\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]){\n        cellCss += (\" \" + cellCssClasses[key][row][m.id]);\n      }\n    }\n\n    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\n    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n    if (item){\n      var value = getDataItemValueForColumn(item, m);\n      stringArray.push(callFormatter(row, cell, value, m, item));\n    }\n\n    stringArray.push(\"</div>\");\n\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep){\n    for (var i in rowsCache){\n      var removeFrozenRow = true;\n\n      if (hasFrozenRows && ((options.frozenBottom && i >= actualFrozenRow) // Frozen bottom rows\n          ||\n          (!options.frozenBottom && i <= actualFrozenRow) // Frozen top rows\n        )){\n        removeFrozenRow = false;\n      }\n\n      if (((i = parseInt(i, 10)) !== activeRow) && (i < rangeToKeep.top || i > rangeToKeep.bottom) && (removeFrozenRow)){\n        removeRowFromCache(i);\n      }\n    }\n  }\n\n  function invalidate(){\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows(){\n    if (currentEditor){\n      makeActiveCellNormal();\n    }\n    for (var row in rowsCache){\n      removeRowFromCache(row);\n    }\n  }\n\n  function removeRowFromCache(row){\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry){\n      return;\n    }\n\n    if (rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[0] || (hasFrozenColumns() && rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[1])){\n\n      cacheEntry.rowNode.hide();\n\n      zombieRowNodeFromLastMouseWheelEvent = cacheEntry.rowNode;\n    } else {\n\n      cacheEntry.rowNode.each(function(){\n        this.parentElement.removeChild(this);\n      });\n\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows){\n    var i, rl;\n    if (!rows || !rows.length){\n      return;\n    }\n    vScrollDir = 0;\n    for (i = 0, rl = rows.length; i < rl; i++){\n      if (currentEditor && activeRow === rows[i]){\n        makeActiveCellNormal();\n      }\n      if (rowsCache[rows[i]]){\n        removeRowFromCache(rows[i]);\n      }\n    }\n  }\n\n  function invalidateRow(row){\n    invalidateRows([row]);\n  }\n\n  function updateCell(row, cell){\n    var cellNode = getCellNode(row, cell);\n    if (!cellNode){\n      return;\n    }\n\n    var m = columns[cell],\n      d = getDataItem(row);\n    if (currentEditor && activeRow === row && activeCell === cell){\n      currentEditor.loadValue(d);\n    } else {\n      cellNode.innerHTML = d ? callFormatter(row, cell, getDataItemValueForColumn(d, m), m, d) : \"\";\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row){\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry){\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n\n    var d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx){\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)){\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n        node = cacheEntry.cellNodesByColumnIdx[columnIdx][0];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor){\n        currentEditor.loadValue(d);\n      } else if (d){\n        node.innerHTML = callFormatter(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n      } else {\n        node.innerHTML = \"\";\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight(){\n    if (options.autoHeight){\n      viewportH = options.rowHeight * getDataLengthIncludingAddNew() + ((options.frozenColumn == -1) ? $headers.outerHeight() : 0);\n    } else {\n      topPanelH = (options.showTopPanel) ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0;\n\n      headerRowH = (options.showHeaderRow) ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0;\n\n      footerRowH = (options.showFooterRow) ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0;\n\n      viewportH = parseFloat($.css($container[0], \"height\", true)) - parseFloat($.css($container[0], \"paddingTop\", true)) - parseFloat($.css($container[0], \"paddingBottom\", true)) - parseFloat($.css($headerScroller[0], \"height\")) - getVBoxDelta($headerScroller) - topPanelH - headerRowH - footerRowH;\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n  }\n\n  function getViewportWidth(){\n    viewportW = parseFloat($.css($container[0], \"width\", true));\n  }\n\n  function resizeCanvas(){\n    if (!initialized){\n      return;\n    }\n\n    paneTopH = 0\n    paneBottomH = 0\n    viewportTopH = 0\n    viewportBottomH = 0;\n\n    getViewportWidth();\n    getViewportHeight();\n\n    // Account for Frozen Rows\n    if (hasFrozenRows){\n      if (options.frozenBottom){\n        paneTopH = viewportH - frozenRowsHeight - scrollbarDimensions.height;\n\n        paneBottomH = frozenRowsHeight + scrollbarDimensions.height;\n      } else {\n        paneTopH = frozenRowsHeight;\n        paneBottomH = viewportH - frozenRowsHeight;\n      }\n    } else {\n      paneTopH = viewportH;\n    }\n\n    // The top pane includes the top panel and the header row\n    paneTopH += topPanelH + headerRowH + footerRowH;\n\n    if (hasFrozenColumns() && options.autoHeight){\n      paneTopH += scrollbarDimensions.height;\n    }\n\n    // The top viewport does not contain the top panel or header row\n    viewportTopH = paneTopH - topPanelH - headerRowH - footerRowH;\n\n    if (options.autoHeight){\n      if (hasFrozenColumns()){\n        $container.height(\n          paneTopH + parseFloat($.css($headerScrollerL[0], \"height\")));\n      }\n\n      $paneTopL.css('position', 'relative');\n    }\n\n    $paneTopL.css({\n      'top': $paneHeaderL.height(),\n      'height': paneTopH\n    });\n\n    var paneBottomTop = $paneTopL.position().top + paneTopH;\n\n    $viewportTopL.height(viewportTopH);\n\n    if (hasFrozenColumns()){\n      $paneTopR.css({\n        'top': $paneHeaderL.height(),\n        'height': paneTopH\n      });\n\n      $viewportTopR.height(viewportTopH);\n\n      if (hasFrozenRows){\n        $paneBottomL.css({\n          'top': paneBottomTop,\n          'height': paneBottomH\n        });\n\n        $paneBottomR.css({\n          'top': paneBottomTop,\n          'height': paneBottomH\n        });\n\n        $viewportBottomR.height(paneBottomH);\n      }\n    } else {\n      if (hasFrozenRows){\n        $paneBottomL.css({\n          'width': '100%',\n          'height': paneBottomH\n        });\n\n        $paneBottomL.css('top', paneBottomTop);\n      }\n    }\n\n    if (hasFrozenRows){\n      $viewportBottomL.height(paneBottomH);\n\n      if (options.frozenBottom){\n        $canvasBottomL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()){\n          $canvasBottomR.height(frozenRowsHeight);\n        }\n      } else {\n        $canvasTopL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()){\n          $canvasTopR.height(frozenRowsHeight);\n        }\n      }\n    } else {\n      $viewportTopR.height(viewportTopH);\n    }\n\n    if (options.forceFitColumns){\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll();\n    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updateRowCount(){\n    if (!initialized){\n      return;\n    }\n\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = 0;\n    var oldH = (hasFrozenRows && !options.frozenBottom) ? $canvasBottomL.height() : $canvasTopL.height();\n\n    if (hasFrozenRows){\n      var numberOfRows = getDataLength() - options.frozenRow;\n    } else {\n      var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n    }\n\n    var tempViewportH = $viewportScrollContainerY.height();\n    var oldViewportHasVScroll = viewportHasVScroll;\n    // with autoHeight, we do not need to accommodate the vertical scroll bar\n    viewportHasVScroll = !options.autoHeight && (numberOfRows * options.rowHeight > tempViewportH);\n\n    makeActiveCellNormal();\n\n    // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n    var l = dataLengthIncludingAddNew - 1;\n    for (var i in rowsCache){\n      if (i >= l){\n        removeRowFromCache(i);\n      }\n    }\n\n    th = Math.max(options.rowHeight * numberOfRows, tempViewportH - scrollbarDimensions.height);\n\n    if (activeCellNode && activeRow > l){\n      resetActiveCell();\n    }\n\n    if (th < maxSupportedCssHeight){\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH){\n      if (hasFrozenRows && !options.frozenBottom){\n        $canvasBottomL.css(\"height\", h);\n\n        if (hasFrozenColumns()){\n          $canvasBottomR.css(\"height\", h);\n        }\n      } else {\n        $canvasTopL.css(\"height\", h);\n        $canvasTopR.css(\"height\", h);\n      }\n\n      scrollTop = $viewportScrollContainerY[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = (scrollTop + offset <= th - tempViewportH);\n\n    if (th == 0 || scrollTop == 0){\n      page = offset = 0;\n    } else if (oldScrollTopInRange){\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - tempViewportH);\n    }\n\n    if (h != oldH && options.autoHeight){\n      resizeCanvas();\n    }\n\n    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll){\n      autosizeColumns();\n    }\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft){\n    if (viewportTop == null){\n      viewportTop = scrollTop;\n    }\n    if (viewportLeft == null){\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft){\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = 3;\n\n    if (vScrollDir == -1){\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1){\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row){\n    var cacheEntry = rowsCache[row];\n    if (cacheEntry){\n      if (cacheEntry.cellRenderQueue.length){\n        var $lastNode = cacheEntry.rowNode.children().last();\n        while (cacheEntry.cellRenderQueue.length){\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = $lastNode;\n          $lastNode = $lastNode.prev();\n\n          // Hack to retrieve the frozen columns because\n          if ($lastNode.length == 0){\n            $lastNode = $(cacheEntry.rowNode[0]).children().last();\n          }\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row){\n    // Ignore frozen rows\n    if (hasFrozenRows && ((options.frozenBottom && row > actualFrozenRow) // Frozen bottom rows\n        ||\n        (row <= actualFrozenRow) // Frozen top rows\n      )){\n      return;\n    }\n\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row];\n\n    // Remove cells outside the range.\n    var cellsToRemove = [];\n    for (var i in cacheEntry.cellNodesByColumnIdx){\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)){\n        continue;\n      }\n\n      // This is a string, so it needs to be cast back to a number.\n      i = i | 0;\n\n      // Ignore frozen columns\n      if (i <= options.frozenColumn){\n        continue;\n      }\n\n      var colspan = cacheEntry.cellColSpans[i];\n      if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx){\n        if (!(row == activeRow && i == activeCell)){\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove;\n    while ((cellToRemove = cellsToRemove.pop()) != null){\n      cacheEntry.cellNodesByColumnIdx[cellToRemove][0].parentElement.removeChild(cacheEntry.cellNodesByColumnIdx[cellToRemove][0]);\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (postProcessedRows[row]){\n        delete postProcessedRows[row][cellToRemove];\n      }\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range){\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++){\n      cacheEntry = rowsCache[row];\n      if (!cacheEntry){\n        continue;\n      }\n\n      // cellRenderQueue populated in renderRows() needs to be cleared first\n      ensureCellNodesInRowsCache(row);\n\n      cleanUpCells(range, row);\n\n      // Render missing cells.\n      cellsAdded = 0;\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n\n      var d = getDataItem(row);\n\n      // TODO:  shorten this loop (index? heuristics? binary search?)\n      for (var i = 0, ii = columns.length; i < ii; i++){\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx){\n          break;\n        }\n\n        // Already rendered.\n        if ((colspan = cacheEntry.cellColSpans[i]) != null){\n          i += (colspan > 1 ? colspan - 1 : 0);\n          continue;\n        }\n\n        colspan = 1;\n        if (metadata){\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = (columnData && columnData.colspan) || 1;\n          if (colspan === \"*\"){\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx){\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += (colspan > 1 ? colspan - 1 : 0);\n      }\n\n      if (cellsAdded){\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length){\n      return;\n    }\n\n    var x = document.createElement(\"div\");\n    x.innerHTML = stringArray.join(\"\");\n\n    var processedRow;\n    var $node;\n    while ((processedRow = processedRows.pop()) != null){\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null){\n        $node = $(x).children().last();\n\n        if (hasFrozenColumns() && (columnIdx > options.frozenColumn)){\n          $(cacheEntry.rowNode[1]).append($node);\n        } else {\n          $(cacheEntry.rowNode[0]).append($node);\n        }\n\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = $node;\n      }\n    }\n  }\n\n  function renderRows(range){\n    var stringArrayL = [],\n      stringArrayR = [],\n      rows = [],\n      needToReselectCell = false,\n      dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++){\n      if (rowsCache[i] || (hasFrozenRows && options.frozenBottom && i == getDataLength())){\n        continue;\n      }\n      renderedRows++;\n      rows.push(i);\n\n      // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n      rowsCache[i] = {\n        \"rowNode\": null,\n\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        \"cellColSpans\": [],\n\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        \"cellNodesByColumnIdx\": [],\n\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        \"cellRenderQueue\": []\n      };\n\n      appendRowHtml(stringArrayL, stringArrayR, i, range, dataLength);\n      if (activeCellNode && activeRow === i){\n        needToReselectCell = true;\n      }\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length){\n      return;\n    }\n\n    var x = document.createElement(\"div\"),\n      xRight = document.createElement(\"div\");\n\n    x.innerHTML = stringArrayL.join(\"\");\n    xRight.innerHTML = stringArrayR.join(\"\");\n\n    for (var i = 0, ii = rows.length; i < ii; i++){\n      if ((hasFrozenRows) && (rows[i] >= actualFrozenRow)){\n        if (hasFrozenColumns()){\n          rowsCache[rows[i]].rowNode = $()\n            .add($(x.firstChild).appendTo($canvasBottomL))\n            .add($(xRight.firstChild).appendTo($canvasBottomR));\n        } else {\n          rowsCache[rows[i]].rowNode = $()\n            .add($(x.firstChild).appendTo($canvasBottomL));\n        }\n      } else if (hasFrozenColumns()){\n        rowsCache[rows[i]].rowNode = $()\n          .add($(x.firstChild).appendTo($canvasTopL))\n          .add($(xRight.firstChild).appendTo($canvasTopR));\n      } else {\n        rowsCache[rows[i]].rowNode = $()\n          .add($(x.firstChild).appendTo($canvasTopL));\n      }\n    }\n\n    if (needToReselectCell){\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing(){\n    if (!options.enableAsyncPostRender){\n      return;\n    }\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n  }\n\n  function invalidatePostProcessingResults(row){\n    delete postProcessedRows[row];\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions(){\n    for (var row in rowsCache){\n      rowsCache[row].rowNode.css('top', getRowTop(row) + \"px\");\n    }\n  }\n\n  function render(){\n    if (!initialized){\n      return;\n    }\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange();\n\n    // remove rows no longer in the viewport\n    cleanupRows(rendered);\n\n    // add new rows & missing cells in existing rows\n    if (lastRenderedScrollLeft != scrollLeft){\n\n      if (hasFrozenRows){\n\n        var renderedFrozenRows = $.extend(true, {}, rendered);\n\n        if (options.frozenBottom){\n\n          renderedFrozenRows.top = actualFrozenRow;\n          renderedFrozenRows.bottom = getDataLength();\n        } else {\n\n          renderedFrozenRows.top = 0;\n          renderedFrozenRows.bottom = options.frozenRow;\n        }\n\n        cleanUpAndRenderCells(renderedFrozenRows);\n      }\n\n      cleanUpAndRenderCells(rendered);\n    }\n\n    // render missing rows\n    renderRows(rendered);\n\n    // Render frozen rows\n    if (hasFrozenRows){\n      if (options.frozenBottom){\n        renderRows({\n          top: actualFrozenRow,\n          bottom: getDataLength() - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      } else {\n        renderRows({\n          top: 0,\n          bottom: options.frozenRow - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      }\n    }\n\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n    startPostProcessing();\n\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n  }\n\n  function handleHeaderRowScroll(){\n    var scrollLeft = $headerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft){\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleFooterRowScroll(){\n    var scrollLeft = $footerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft){\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleMouseWheel(e, delta, deltaX, deltaY){\n    var $rowNode = $(e.target).closest(\".slick-row\");\n    var rowNode = $rowNode[0];\n\n    if (rowNode != rowNodeFromLastMouseWheelEvent){\n\n      var $gridCanvas = $rowNode.parents('.grid-canvas');\n      var left = $gridCanvas.hasClass('grid-canvas-left');\n\n      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent[left ? 0 : 1] != rowNode){\n        var zombieRow = zombieRowNodeFromLastMouseWheelEvent[left || zombieRowNodeFromLastMouseWheelEvent.length == 1 ? 0 : 1];\n        zombieRow.parentElement.removeChild(zombieRow);\n\n        zombieRowNodeFromLastMouseWheelEvent = null;\n      }\n\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n\n    scrollTop = Math.max(0, $viewportScrollContainerY[0].scrollTop - (deltaY * options.rowHeight));\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft + (deltaX * 10);\n    var handled = _handleScroll(true);\n    if (handled) e.preventDefault();\n  }\n\n  function handleScroll(){\n    scrollTop = $viewportScrollContainerY[0].scrollTop;\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft;\n    return _handleScroll(false);\n  }\n\n  function _handleScroll(isMouseWheel){\n    var maxScrollDistanceY = $viewportScrollContainerY[0].scrollHeight - $viewportScrollContainerY[0].clientHeight;\n    var maxScrollDistanceX = $viewportScrollContainerY[0].scrollWidth - $viewportScrollContainerY[0].clientWidth;\n    var hasFrozenCols = hasFrozenColumns();\n\n    // Ceiling the max scroll values\n    if (scrollTop > maxScrollDistanceY){\n      scrollTop = maxScrollDistanceY;\n    }\n    if (scrollLeft > maxScrollDistanceX){\n      scrollLeft = maxScrollDistanceX;\n    }\n\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist){\n      prevScrollLeft = scrollLeft;\n\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n      $headerScrollContainer[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScrollContainer[0].scrollLeft = scrollLeft;\n      $footerRowScrollContainer[0].scrollLeft = scrollLeft;\n\n      if (hasFrozenCols){\n        if (hasFrozenRows){\n          $viewportTopR[0].scrollLeft = scrollLeft;\n        }\n      } else {\n        if (hasFrozenRows){\n          $viewportTopL[0].scrollLeft = scrollLeft;\n        }\n      }\n    }\n\n    if (vScrollDist){\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop;\n\n      if (isMouseWheel){\n        $viewportScrollContainerY[0].scrollTop = scrollTop;\n      }\n\n      if (hasFrozenCols){\n        if (hasFrozenRows && !options.frozenBottom){\n          $viewportBottomL[0].scrollTop = scrollTop;\n        } else {\n          $viewportTopL[0].scrollTop = scrollTop;\n        }\n      }\n\n      // switch virtual pages if needed\n      if (vScrollDist < viewportH){\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n        if (h == viewportH){\n          page = 0;\n        } else {\n          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n        }\n        offset = Math.round(page * cj);\n        if (oldOffset != offset){\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist){\n      if (h_render){\n        clearTimeout(h_render);\n      }\n\n      if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20){\n        if (options.forceSyncScrolling || (\n          Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW)){\n          render();\n        } else {\n          h_render = setTimeout(render, 50);\n        }\n\n        trigger(self.onViewportChanged, {});\n      }\n    }\n\n    trigger(self.onScroll, {\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    if (hScrollDist || vScrollDist) return true;\n    return false;\n  }\n\n  function asyncPostProcessRows(){\n    var dataLength = getDataLength();\n    while (postProcessFromRow <= postProcessToRow){\n      var row = (vScrollDir >= 0) ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry || row >= dataLength){\n        continue;\n      }\n\n      if (!postProcessedRows[row]){\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx){\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)){\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n\n        var m = columns[columnIdx];\n        if (m.asyncPostRender && !postProcessedRows[row][columnIdx]){\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n          if (node){\n            m.asyncPostRender(node, row, getDataItem(row), m);\n          }\n          postProcessedRows[row][columnIdx] = true;\n        }\n      }\n\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n      return;\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash){\n    var node, columnId, addedRowHash, removedRowHash;\n    for (var row in rowsCache){\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash){\n        for (columnId in removedRowHash){\n          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]){\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node){\n              $(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash){\n        for (columnId in addedRowHash){\n          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]){\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node){\n              $(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash){\n    if (cellCssClasses[key]){\n      throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash\n    });\n  }\n\n  function removeCellCssStyles(key){\n    if (!cellCssClasses[key]){\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": null\n    });\n  }\n\n  function setCellCssStyles(key, hash){\n    var prevHash = cellCssClasses[key];\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash\n    });\n  }\n\n  function getCellCssStyles(key){\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed){\n    speed = speed || 100;\n    if (rowsCache[row]){\n      var $cell = $(getCellNode(row, cell));\n\n      function toggleCellClass(times){\n        if (!times){\n          return;\n        }\n        setTimeout(function(){\n            $cell.queue(function(){\n              $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n              toggleCellClass(times - 1);\n            });\n          },\n          speed);\n      }\n\n      toggleCellClass(4);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n  function handleDragInit(e, dd){\n    var cell = getCellFromEvent(e);\n    if (!cell || !cellExists(cell.row, cell.cell)){\n      return false;\n    }\n\n    var retval = trigger(self.onDragInit, dd, e);\n    if (e.isImmediatePropagationStopped()){\n      return retval;\n    }\n\n    // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n    // cancel out of it\n    return false;\n  }\n\n  function handleDragStart(interactEvent){\n    var event = $.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    var cell = getCellFromEvent(event);\n    if (!cell || !cellExists(cell.row, cell.cell)){\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, interactEvent, event);\n    if (event.isImmediatePropagationStopped()){\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(interactEvent){\n    var event = $.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    return trigger(self.onDrag, interactEvent, event);\n  }\n\n  function handleDragEnd(interactEvent){\n    trigger(self.onDragEnd, interactEvent, $.Event('mousedown'));\n  }\n\n  function handleKeyDown(e){\n    trigger(self.onKeyDown, {\n      row: activeRow,\n      cell: activeCell\n    }, e);\n    var handled = e.isImmediatePropagationStopped();\n\n    if (!handled){\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey){\n        if (e.which == 27){\n          if (!getEditorLock().isActive()){\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n          cancelEditAndSetFocus();\n        } else if (e.which == 34){\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == 33){\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == 37){\n          handled = navigateLeft();\n        } else if (e.which == 39){\n          handled = navigateRight();\n        } else if (e.which == 38){\n          handled = navigateUp();\n        } else if (e.which == 40){\n          handled = navigateDown();\n        } else if (e.which == 9){\n          handled = navigateNext();\n        } else if (e.which == 13){\n          if (options.editable){\n            if (currentEditor){\n              // adding new row\n              if (activeRow === getDataLength()){\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()){\n                makeActiveCellEditable();\n              }\n            }\n          }\n          handled = true;\n        }\n      } else if (e.which == 9 && e.shiftKey && !e.ctrlKey && !e.altKey){\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled){\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      }\n        // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n        // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      catch (error) {\n      }\n    }\n  }\n\n  function handleClick(e){\n    if (!currentEditor){\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (e.target != document.activeElement || $(e.target).hasClass(\"slick-cell\")){\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n    if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)){\n      return;\n    }\n\n    trigger(self.onClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n    if (e.isImmediatePropagationStopped()){\n      return;\n    }\n\n    if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)){\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()){\n\n        scrollRowIntoView(cell.row, false);\n        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n      }\n    }\n  }\n\n  function handleContextMenu(e){\n    var $cell = $(e.target).closest(\".slick-cell\", $canvas);\n    if ($cell.length === 0){\n      return;\n    }\n\n    // are we editing this cell?\n    if (activeCellNode === $cell[0] && currentEditor !== null){\n      return;\n    }\n\n    trigger(self.onContextMenu, {}, e);\n  }\n\n  function handleDblClick(e){\n    var cell = getCellFromEvent(e);\n    if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)){\n      return;\n    }\n\n    trigger(self.onDblClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n    if (e.isImmediatePropagationStopped()){\n      return;\n    }\n\n    if (options.editable){\n      gotoCell(cell.row, cell.cell, true);\n    }\n  }\n\n  function handleHeaderMouseEnter(e){\n    trigger(self.onHeaderMouseEnter, {\n      \"column\": $(this).data(\"column\")\n    }, e);\n  }\n\n  function handleHeaderMouseLeave(e){\n    trigger(self.onHeaderMouseLeave, {\n      \"column\": $(this).data(\"column\")\n    }, e);\n  }\n\n  function handleHeaderContextMenu(e){\n    var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n    trigger(self.onHeaderContextMenu, {\n      column: column\n    }, e);\n  }\n\n  function handleHeaderClick(e){\n    var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n    if (column){\n      trigger(self.onHeaderClick, {\n        column: column\n      }, e);\n    }\n  }\n\n  function handleMouseEnter(e){\n    trigger(self.onMouseEnter, {}, e);\n  }\n\n  function handleMouseLeave(e){\n    trigger(self.onMouseLeave, {}, e);\n  }\n\n  function cellExists(row, cell){\n    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n  }\n\n  function getCellFromPoint(x, y){\n    var row = getRowFromPosition(y);\n    var cell = 0;\n\n    var w = 0;\n    for (var i = 0; i < columns.length && w < x; i++){\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0){\n      cell = 0;\n    }\n\n    return {\n      row: row,\n      cell: cell - 1\n    };\n  }\n\n  function getCellFromNode(cellNode){\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n    if (!cls){\n      throw \"getCellFromNode: cannot get cell - \" + cellNode.className;\n    }\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode){\n    for (var row in rowsCache)\n      for (var i in rowsCache[row].rowNode)\n        if (rowsCache[row].rowNode[i] === rowNode) return row | 0;\n\n    return null;\n  }\n\n  function getFrozenRowOffset(row){\n    var offset = (hasFrozenRows) ? (options.frozenBottom) ? (row >= actualFrozenRow) ? (h < viewportTopH) ? (actualFrozenRow * options.rowHeight) : h : 0 : (row >= actualFrozenRow) ? frozenRowsHeight : 0 : 0;\n\n    return offset;\n  }\n\n  function getCellFromEvent(e){\n    var row, cell;\n    var $cell = $(e.target).closest(\".slick-cell\", $canvas);\n    if (!$cell.length){\n      return null;\n    }\n\n    row = getRowFromNode($cell[0].parentNode);\n\n    if (hasFrozenRows){\n\n      var c = $cell.parents('.grid-canvas').offset();\n\n      var rowOffset = 0;\n      var isBottom = $cell.parents('.grid-canvas-bottom').length;\n\n      if (isBottom){\n        rowOffset = (options.frozenBottom) ? $canvasTopL.height() : frozenRowsHeight;\n      }\n\n      row = getCellFromPoint(e.clientX - c.left, e.clientY - c.top + rowOffset + $(document).scrollTop()).row;\n    }\n\n    cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null){\n      return null;\n    } else {\n      return {\n        \"row\": row,\n        \"cell\": cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell){\n    if (!cellExists(row, cell)){\n      return null;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var y1 = getRowTop(row) - frozenRowOffset;\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n    for (var i = 0; i < cell; i++){\n      x1 += columns[i].width;\n\n      if (options.frozenColumn == i){\n        x1 = 0;\n      }\n    }\n    var x2 = x1 + columns[cell].width;\n\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n  function resetActiveCell(){\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus(){\n    if (tabbingDirection == -1){\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging){\n    // Don't scroll to frozen cells\n    if (cell <= options.frozenColumn){\n      return;\n    }\n\n    if (row < actualFrozenRow){\n      scrollRowIntoView(row, doPaging);\n    }\n\n    var colspan = getColspan(row, cell);\n    var left = columnPosLeft[cell],\n      right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n      scrollRight = scrollLeft + $viewportScrollContainerX.width();\n\n    if (left < scrollLeft){\n      $viewportScrollContainerX.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight){\n      $viewportScrollContainerX.scrollLeft(Math.min(left, right - $viewportScrollContainerX[0].clientWidth));\n      handleScroll();\n      render();\n    }\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode){\n    if (activeCellNode !== null){\n      makeActiveCellNormal();\n      $(activeCellNode).removeClass(\"active\");\n      if (rowsCache[activeRow]){\n        $(rowsCache[activeRow].rowNode).removeClass(\"active\");\n      }\n    }\n\n    var activeCellChanged = (activeCellNode !== newCell);\n    activeCellNode = newCell;\n\n    if (activeCellNode != null){\n      var $activeCellNode = $(activeCellNode);\n      var $activeCellOffset = $activeCellNode.offset();\n\n      var rowOffset = Math.floor($activeCellNode.parents('.grid-canvas').offset().top);\n      var isBottom = $activeCellNode.parents('.grid-canvas-bottom').length;\n\n      if (hasFrozenRows && isBottom){\n        rowOffset -= (options.frozenBottom) ? $canvasTopL.height() : frozenRowsHeight;\n      }\n\n      var cell = getCellFromPoint($activeCellOffset.left, Math.ceil($activeCellOffset.top) - rowOffset);\n\n      activeRow = cell.row;\n      activeCell = activePosX = activeCell = activePosX = getCellFromNode(activeCellNode[0]);\n\n      $activeCellNode.addClass(\"active\");\n      if (rowsCache[activeRow]){\n        $(rowsCache[activeRow].rowNode).addClass('active');\n      }\n\n      if (opt_editMode == null){\n        opt_editMode = (activeRow == getDataLength()) || options.autoEdit;\n      }\n\n      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)){\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading){\n          h_editorLoader = setTimeout(function(){\n            makeActiveCellEditable();\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable();\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    }\n\n    if (activeCellChanged){\n      setTimeout(scrollActiveCellIntoView, 50);\n      trigger(self.onActiveCellChanged, getActiveCell());\n    }\n  }\n\n  function clearTextSelection(){\n    if (document.selection && document.selection.empty){\n      try {\n        //IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e) {\n      }\n    } else if (window.getSelection){\n      var sel = window.getSelection();\n      if (sel && sel.removeAllRanges){\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell){\n    var dataLength = getDataLength();\n    // is the data for this row loaded?\n    if (row < dataLength && !getDataItem(row)){\n      return false;\n    }\n\n    // are we in the Add New row?  can we create new from this cell?\n    if (columns[cell].cannotTriggerInsert && row >= dataLength){\n      return false;\n    }\n\n    // does this cell have an editor?\n    if (!getEditor(row, cell)){\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal(){\n    if (!currentEditor){\n      return;\n    }\n    trigger(self.onBeforeCellEditorDestroy, {\n      editor: currentEditor\n    });\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode){\n      var d = getDataItem(activeRow);\n      $(activeCellNode).removeClass(\"editable invalid\");\n      if (d){\n        var column = columns[activeCell];\n        activeCellNode[0].innerHTML = callFormatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d);\n        invalidatePostProcessingResults(activeRow);\n      }\n    }\n\n    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n    if (navigator.userAgent.toLowerCase().match(/msie/)){\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor){\n    if (!activeCellNode){\n      return;\n    }\n    if (!options.editable){\n      throw \"Grid : makeActiveCellEditable : should never get called when options.editable is false\";\n    }\n\n    // cancel pending async call if there is one\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)){\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (trigger(self.onBeforeEditCell, {\n        row: activeRow,\n        cell: activeCell,\n        item: item,\n        column: columnDef\n      }) === false){\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    $(activeCellNode).addClass(\"editable\");\n\n    // don't clear the cell if a custom editor is passed through\n    if (!editor){\n      activeCellNode[0].innerHTML = \"\";\n    }\n\n    currentEditor = new (editor || getEditor(activeRow, activeCell))({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode[0]),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item){\n      currentEditor.loadValue(item);\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position){\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus(){\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()){\n      setFocus();\n      if (options.autoEdit){\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus(){\n    if (getEditorLock().cancelCurrentEdit()){\n      setFocus();\n    }\n  }\n\n  function absBox(elem){\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: $(elem).outerWidth(),\n      height: $(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width;\n\n    // walk up the tree\n    var offsetParent = elem.offsetParent;\n    while ((elem = elem.parentNode) != document.body){\n      if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css(\"overflowY\") != \"visible\"){\n        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css(\"overflowX\") != \"visible\"){\n        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent){\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition(){\n    return absBox(activeCellNode[0]);\n  }\n\n  function getGridPosition(){\n    return absBox($container[0])\n  }\n\n  function handleActiveCellPositionChange(){\n    if (!activeCellNode){\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, {});\n\n    if (currentEditor){\n      var cellBox = getActiveCellPosition();\n      if (currentEditor.show && currentEditor.hide){\n        if (!cellBox.visible){\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position){\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor(){\n    return currentEditor;\n  }\n\n  function getActiveCell(){\n    if (!activeCellNode){\n      return null;\n    } else {\n      return {\n        row: activeRow,\n        cell: activeCell\n      };\n    }\n  }\n\n  function getActiveCellNode(){\n    return activeCellNode;\n  }\n\n  function scrollActiveCellIntoView(){\n    if (activeRow != null && activeCell != null){\n      scrollCellIntoView(activeRow, activeCell);\n    }\n  }\n\n  function scrollRowIntoView(row, doPaging){\n\n    if (!hasFrozenRows || (!options.frozenBottom && row > actualFrozenRow - 1) || (options.frozenBottom && row < actualFrozenRow - 1)){\n\n      var viewportScrollH = $viewportScrollContainerY.height();\n\n      var rowAtTop = row * options.rowHeight;\n      var rowAtBottom = (row + 1) * options.rowHeight - viewportScrollH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n      // need to page down?\n      if ((row + 1) * options.rowHeight > scrollTop + viewportScrollH + offset){\n        scrollTo(doPaging ? rowAtTop : rowAtBottom);\n        render();\n      }\n      // or page up?\n      else if (row * options.rowHeight < scrollTop + offset){\n        scrollTo(doPaging ? rowAtBottom : rowAtTop);\n        render();\n      }\n    }\n  }\n\n  function scrollRowToTop(row){\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir){\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null){\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      if (row >= dataLengthIncludingAddNew){\n        row = dataLengthIncludingAddNew - 1;\n      }\n      if (row < 0){\n        row = 0;\n      }\n\n      var cell = 0,\n        prevCell = null;\n      var prevActivePosX = activePosX;\n      while (cell <= activePosX){\n        if (canCellBeActive(row, cell)){\n          prevCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null){\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown(){\n    scrollPage(1);\n  }\n\n  function navigatePageUp(){\n    scrollPage(-1);\n  }\n\n  function getColspan(row, cell){\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (!metadata || !metadata.columns){\n      return 1;\n    }\n\n    var columnData = columns[cell] && (metadata.columns[columns[cell].id] || metadata.columns[cell]);\n    var colspan = (columnData && columnData.colspan);\n    if (colspan === \"*\"){\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row){\n    var cell = 0;\n    while (cell < columns.length){\n      if (canCellBeActive(row, cell)){\n        return cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return null;\n  }\n\n  function findLastFocusableCell(row){\n    var cell = 0;\n    var lastFocusableCell = null;\n    while (cell < columns.length){\n      if (canCellBeActive(row, cell)){\n        lastFocusableCell = cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX){\n    if (cell >= columns.length){\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    }\n    while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length){\n      return {\n        \"row\": row,\n        \"cell\": cell,\n        \"posX\": cell\n      };\n    }\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX){\n    if (cell <= 0){\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n    if (firstFocusableCell === null || firstFocusableCell >= cell){\n      return null;\n    }\n\n    var prev = {\n      \"row\": row,\n      \"cell\": firstFocusableCell,\n      \"posX\": firstFocusableCell\n    };\n    var pos;\n    while (true){\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n      if (!pos){\n        return null;\n      }\n      if (pos.cell >= cell){\n        return prev;\n      }\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX){\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (true){\n      if (++row >= dataLengthIncludingAddNew){\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX){\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)){\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX){\n    var prevCell;\n    while (true){\n      if (--row < 0){\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX){\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)){\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX){\n    if (row == null && cell == null){\n      row = cell = posX = 0;\n      if (canCellBeActive(row, cell)){\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n    if (pos){\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (++row < dataLengthIncludingAddNew){\n      firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell !== null){\n        return {\n          \"row\": row,\n          \"cell\": firstFocusableCell,\n          \"posX\": firstFocusableCell\n        };\n      }\n    }\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX){\n    if (row == null && cell == null){\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n      if (canCellBeActive(row, cell)){\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n    while (!pos){\n      pos = gotoLeft(row, cell, posX);\n      if (pos){\n        break;\n      }\n      if (--row < 0){\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n      if (lastSelectableCell !== null){\n        pos = {\n          \"row\": row,\n          \"cell\": lastSelectableCell,\n          \"posX\": lastSelectableCell\n        };\n      }\n    }\n    return pos;\n  }\n\n  function navigateRight(){\n    return navigate(\"right\");\n  }\n\n  function navigateLeft(){\n    return navigate(\"left\");\n  }\n\n  function navigateDown(){\n    return navigate(\"down\");\n  }\n\n  function navigateUp(){\n    return navigate(\"up\");\n  }\n\n  function navigateNext(){\n    return navigate(\"next\");\n  }\n\n  function navigatePrev(){\n    return navigate(\"prev\");\n  }\n\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n  function navigate(dir){\n    if (!options.enableCellNavigation){\n      return false;\n    }\n\n    if (!activeCellNode && dir != \"prev\" && dir != \"next\"){\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()){\n      return true;\n    }\n    setFocus();\n\n    var tabbingDirections = {\n      \"up\": -1,\n      \"down\": 1,\n      \"left\": -1,\n      \"right\": 1,\n      \"prev\": -1,\n      \"next\": 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n\n    var stepFunctions = {\n      \"up\": gotoUp,\n      \"down\": gotoDown,\n      \"left\": gotoLeft,\n      \"right\": gotoRight,\n      \"prev\": gotoPrev,\n      \"next\": gotoNext\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n    if (pos){\n      if (hasFrozenRows && options.frozenBottom & pos.row == getDataLength()){\n        return;\n      }\n\n      var isAddNewRow = (pos.row == getDataLength());\n\n      if ((!options.frozenBottom && pos.row >= actualFrozenRow) || (options.frozenBottom && pos.row < actualFrozenRow)){\n        scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n      }\n\n      setActiveCellInternal(getCellNode(pos.row, pos.cell))\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell){\n    if (rowsCache[row]){\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n    return null;\n  }\n\n  function setActiveCell(row, cell){\n    if (!initialized){\n      return;\n    }\n    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0){\n      return;\n    }\n\n    if (!options.enableCellNavigation){\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), false);\n  }\n\n  function canCellBeActive(row, cell){\n    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0){\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.focusable === \"boolean\"){\n      return rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n    if (columnMetadata && columns[cell] && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === \"boolean\"){\n      return columnMetadata[columns[cell].id].focusable;\n    }\n    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === \"boolean\"){\n      return columnMetadata[cell].focusable;\n    }\n\n    return columns[cell] && columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell){\n    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0){\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.selectable === \"boolean\"){\n      return rowMetadata.selectable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n    if (columnMetadata && typeof columnMetadata.selectable === \"boolean\"){\n      return columnMetadata.selectable;\n    }\n\n    return columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit){\n    if (!initialized){\n      return;\n    }\n    if (!canCellBeActive(row, cell)){\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()){\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n\n    var newCell = getCellNode(row, cell);\n\n    // if selecting the 'add new' row, start editing right away\n    setActiveCellInternal(newCell, forceEdit || (row === getDataLength()) || options.autoEdit);\n\n    // if no editor was created, set the focus back on the grid\n    if (!currentEditor){\n      setFocus();\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n  function commitCurrentEdit(){\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor){\n      if (currentEditor.isValueChanged()){\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid){\n          if (activeRow < getDataLength()){\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function(){\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              },\n              undo: function(){\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              }\n            };\n\n            if (options.editCommandHandler){\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, {\n              item: newItem,\n              column: column\n            });\n          }\n\n          // check whether the lock has been re-acquired by event handlers\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          $(activeCellNode).removeClass(\"invalid\");\n          $(activeCellNode).width(); // force layout\n          $(activeCellNode).addClass(\"invalid\");\n\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column\n          });\n\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n    return true;\n  }\n\n  function cancelCurrentEdit(){\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows){\n    var ranges = [];\n    var lastCell = columns.length - 1;\n    for (var i = 0; i < rows.length; i++){\n      ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getSelectedRows(){\n    if (!selectionModel){\n      throw \"Selection model is not set\";\n    }\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows){\n    if (!selectionModel){\n      throw \"Selection model is not set\";\n    }\n    selectionModel.setSelectedRanges(rowsToRanges(rows));\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n  this.debug = function(){\n    var s = \"\";\n\n    s += (\"\\n\" + \"counter_rows_rendered:  \" + counter_rows_rendered);\n    s += (\"\\n\" + \"counter_rows_removed:  \" + counter_rows_removed);\n    s += (\"\\n\" + \"renderedRows:  \" + renderedRows);\n    s += (\"\\n\" + \"numVisibleRows:  \" + numVisibleRows);\n    s += (\"\\n\" + \"maxSupportedCssHeight:  \" + maxSupportedCssHeight);\n    s += (\"\\n\" + \"n(umber of pages):  \" + n);\n    s += (\"\\n\" + \"(current) page:  \" + page);\n    s += (\"\\n\" + \"page height (ph):  \" + ph);\n    s += (\"\\n\" + \"vScrollDir:  \" + vScrollDir);\n\n    alert(s);\n  };\n\n  // a debug helper to be able to access private members\n  this.eval = function(expr){\n    return eval(expr);\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n  $.extend(this, {\n    \"slickGridVersion\": \"2.1\",\n\n    // Events\n    \"onScroll\": new Slick.Event(),\n    \"onSort\": new Slick.Event(),\n    \"onHeaderMouseEnter\": new Slick.Event(),\n    \"onHeaderMouseLeave\": new Slick.Event(),\n    \"onHeaderContextMenu\": new Slick.Event(),\n    \"onHeaderClick\": new Slick.Event(),\n    \"onHeaderCellRendered\": new Slick.Event(),\n    \"onBeforeHeaderCellDestroy\": new Slick.Event(),\n    \"onHeaderRowCellRendered\": new Slick.Event(),\n    \"onFooterRowCellRendered\": new Slick.Event(),\n    \"onBeforeHeaderRowCellDestroy\": new Slick.Event(),\n    \"onBeforeFooterRowCellDestroy\": new Slick.Event(),\n    \"onMouseEnter\": new Slick.Event(),\n    \"onMouseLeave\": new Slick.Event(),\n    \"onClick\": new Slick.Event(),\n    \"onDblClick\": new Slick.Event(),\n    \"onContextMenu\": new Slick.Event(),\n    \"onKeyDown\": new Slick.Event(),\n    \"onAddNewRow\": new Slick.Event(),\n    \"onValidationError\": new Slick.Event(),\n    \"onViewportChanged\": new Slick.Event(),\n    \"onColumnsReordered\": new Slick.Event(),\n    \"onColumnsResized\": new Slick.Event(),\n    \"onCellChange\": new Slick.Event(),\n    \"onBeforeEditCell\": new Slick.Event(),\n    \"onBeforeCellEditorDestroy\": new Slick.Event(),\n    \"onBeforeDestroy\": new Slick.Event(),\n    \"onActiveCellChanged\": new Slick.Event(),\n    \"onActiveCellPositionChanged\": new Slick.Event(),\n    \"onDragInit\": new Slick.Event(),\n    \"onDragStart\": new Slick.Event(),\n    \"onDrag\": new Slick.Event(),\n    \"onDragEnd\": new Slick.Event(),\n    \"onSelectedRowsChanged\": new Slick.Event(),\n    \"onCellCssStylesChanged\": new Slick.Event(),\n\n    // Methods\n    \"registerPlugin\": registerPlugin,\n    \"unregisterPlugin\": unregisterPlugin,\n    \"getColumns\": getColumns,\n    \"setColumns\": setColumns,\n    \"getColumnIndex\": getColumnIndex,\n    \"updateColumnHeader\": updateColumnHeader,\n    \"setSortColumn\": setSortColumn,\n    \"setSortColumns\": setSortColumns,\n    \"getSortColumns\": getSortColumns,\n    \"autosizeColumns\": autosizeColumns,\n    \"getOptions\": getOptions,\n    \"setOptions\": setOptions,\n    \"getData\": getData,\n    \"getDataLength\": getDataLength,\n    \"getDataItem\": getDataItem,\n    \"setData\": setData,\n    \"getSelectionModel\": getSelectionModel,\n    \"setSelectionModel\": setSelectionModel,\n    \"getSelectedRows\": getSelectedRows,\n    \"setSelectedRows\": setSelectedRows,\n    \"getContainerNode\": getContainerNode,\n\n    \"render\": render,\n    \"invalidate\": invalidate,\n    \"invalidateRow\": invalidateRow,\n    \"invalidateRows\": invalidateRows,\n    \"invalidateAllRows\": invalidateAllRows,\n    \"updateCell\": updateCell,\n    \"updateRow\": updateRow,\n    \"getViewport\": getVisibleRange,\n    \"getRenderedRange\": getRenderedRange,\n    \"resizeCanvas\": resizeCanvas,\n    \"updateRowCount\": updateRowCount,\n    \"scrollRowIntoView\": scrollRowIntoView,\n    \"scrollRowToTop\": scrollRowToTop,\n    \"scrollCellIntoView\": scrollCellIntoView,\n    \"getCanvasNode\": getCanvasNode,\n    \"getCanvases\": getCanvases,\n    \"getActiveCanvasNode\": getActiveCanvasNode,\n    \"setActiveCanvasNode\": setActiveCanvasNode,\n    \"getViewportNode\": getViewportNode,\n    \"getActiveViewportNode\": getActiveViewportNode,\n    \"setActiveViewportNode\": setActiveViewportNode,\n    \"focus\": setFocus,\n\n    \"getCellFromPoint\": getCellFromPoint,\n    \"getCellFromEvent\": getCellFromEvent,\n    \"getActiveCell\": getActiveCell,\n    \"setActiveCell\": setActiveCell,\n    \"getActiveCellNode\": getActiveCellNode,\n    \"getActiveCellPosition\": getActiveCellPosition,\n    \"resetActiveCell\": resetActiveCell,\n    \"editActiveCell\": makeActiveCellEditable,\n    \"getCellEditor\": getCellEditor,\n    \"getCellNode\": getCellNode,\n    \"getCellNodeBox\": getCellNodeBox,\n    \"canCellBeSelected\": canCellBeSelected,\n    \"canCellBeActive\": canCellBeActive,\n    \"navigatePrev\": navigatePrev,\n    \"navigateNext\": navigateNext,\n    \"navigateUp\": navigateUp,\n    \"navigateDown\": navigateDown,\n    \"navigateLeft\": navigateLeft,\n    \"navigateRight\": navigateRight,\n    \"navigatePageUp\": navigatePageUp,\n    \"navigatePageDown\": navigatePageDown,\n    \"gotoCell\": gotoCell,\n    \"getTopPanel\": getTopPanel,\n    \"setTopPanelVisibility\": setTopPanelVisibility,\n    \"setHeaderRowVisibility\": setHeaderRowVisibility,\n    \"getHeaderRow\": getHeaderRow,\n    \"getHeaderRowColumn\": getHeaderRowColumn,\n    \"setFooterRowVisibility\": setFooterRowVisibility,\n    \"getFooterRow\": getFooterRow,\n    \"getFooterRowColumn\": getFooterRowColumn,\n    \"getGridPosition\": getGridPosition,\n    \"flashCell\": flashCell,\n    \"addCellCssStyles\": addCellCssStyles,\n    \"setCellCssStyles\": setCellCssStyles,\n    \"removeCellCssStyles\": removeCellCssStyles,\n    \"getCellCssStyles\": getCellCssStyles,\n    \"getFrozenRowOffset\": getFrozenRowOffset,\n\n    \"init\": finishInitialization,\n    \"destroy\": destroy,\n\n    // IEditor implementation\n    \"getEditorLock\": getEditorLock,\n    \"getEditController\": getEditController\n  });\n\n  init();\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick-frozen.grid.js","const percentCompleteFormatter = (row, cell, value, columnDef, dataContext) => {\n  if (value == null || value === ''){\n    return '-';\n  } else if (value < 50){\n    return `<span style='color:red;font-weight:bold;'>${value}%</span>`;\n  } else {\n    return `<span style='color:green'>${value}%</span>`;\n  }\n};\n\nconst percentCompleteBarFormatter = (row, cell, value, columnDef, dataContext) => {\n  if (value == null || value === ''){\n    return '';\n  }\n\n  let color;\n\n  if (value < 30){\n    color = 'red';\n  } else if (value < 70){\n    color = 'silver';\n  } else {\n    color = 'green';\n  }\n\n  return `<span class=\"percent-complete-bar\" style=\"background: ${color};width:${value}%\"></span>`;\n};\n\nconst yesNoFormatter = (row, cell, value) => value ? 'Yes' : 'No';\nconst checkmarkFormatter = (row, cell, value) => value ? '✔' : '';\n\nexport default {\n  PercentComplete: percentCompleteFormatter,\n  PercentCompleteBar: percentCompleteBarFormatter,\n  YesNo: yesNoFormatter,\n  Checkmark: checkmarkFormatter\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.formatters.js","export AutoTooltips from './slick.autotooltips';\nexport CellCopyManager from './slick.cellcopymanager';\nexport CellRangeDecorator from './slick.cellrangedecorator';\nexport CellRangeSelector from './slick.cellrangeselector';\nexport CellSelectionModel from './slick.cellselectionmodel';\nexport CheckboxSelectColumn from './slick.checkboxselectcolumn';\nexport HeaderButtons from './slick.headerbuttons';\nexport HeaderMenu from './slick.headermenu';\nexport RowMoveManager from './slick.rowmovemanager';\nexport RowSelectionModel from './slick.rowselectionmodel';\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/index.js","import AutoTooltips from './slick.autotooltips';\nexport default AutoTooltips;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.autotooltips/index.js","import $ from 'jquery';\n\nexport default AutoTooltips;\n\n  /**\n   * AutoTooltips plugin to show/hide tooltips when columns are too narrow to fit content.\n   * @constructor\n   * @param {boolean} [options.enableForCells=true]        - Enable tooltip for grid cells\n   * @param {boolean} [options.enableForHeaderCells=false] - Enable tooltip for header cells\n   * @param {number}  [options.maxToolTipLength=null]      - The maximum length for a tooltip\n   */\nfunction AutoTooltips(options){\n  let _grid;\n  const _self = this;\n  const _defaults = {\n    enableForCells: true,\n    enableForHeaderCells: false,\n    maxToolTipLength: null\n  };\n\n    /**\n     * Initialize plugin.\n     */\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    if (options.enableForCells) _grid.onMouseEnter.subscribe(handleMouseEnter);\n    if (options.enableForHeaderCells) _grid.onHeaderMouseEnter.subscribe(handleHeaderMouseEnter);\n  }\n\n    /**\n     * Destroy plugin.\n     */\n  function destroy(){\n    if (options.enableForCells) _grid.onMouseEnter.unsubscribe(handleMouseEnter);\n    if (options.enableForHeaderCells) _grid.onHeaderMouseEnter.unsubscribe(handleHeaderMouseEnter);\n  }\n\n    /**\n     * Handle mouse entering grid cell to add/remove tooltip.\n     * @param {jQuery.Event} e - The event\n     */\n  function handleMouseEnter(e){\n    const cell = _grid.getCellFromEvent(e);\n    if (cell){\n      let $node = $(_grid.getCellNode(cell.row, cell.cell));\n      let text;\n      if ($node.innerWidth() < $node[0].scrollWidth){\n        text = $.trim($node.text());\n        if (options.maxToolTipLength && text.length > options.maxToolTipLength){\n          text = text.substr(0, options.maxToolTipLength - 3) + '...';\n        }\n      } else {\n        text = '';\n      }\n      $node.attr('title', text);\n    }\n  }\n\n    /**\n     * Handle mouse entering header cell to add/remove tooltip.\n     * @param {jQuery.Event} e     - The event\n     * @param {object} args.column - The column definition\n     */\n  function handleHeaderMouseEnter(e, args){\n    const column = args.column,\n      $node = $(e.target).closest('.slick-header-column');\n    if (column && !column.toolTip){\n      $node.attr('title', ($node.innerWidth() < $node[0].scrollWidth) ? column.name : '');\n    }\n  }\n\n    // Public API\n  Object.assign(this, {\n    init,\n    destroy\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.autotooltips/slick.autotooltips.js","import CellCopyManager from './slick.cellcopymanager';\nexport default CellCopyManager;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellcopymanager/index.js","import Slick from '../../src/slick.core';\nconst { keyCode } = Slick;\n\nexport default CellCopyManager;\n\nfunction CellCopyManager(){\n  var _grid;\n  var _self = this;\n  var _copiedRanges;\n\n  function init(grid){\n    _grid = grid;\n    _grid.onKeyDown.subscribe(handleKeyDown);\n  }\n\n  function destroy(){\n    _grid.onKeyDown.unsubscribe(handleKeyDown);\n  }\n\n  function handleKeyDown(e, args){\n    var ranges;\n    if (!_grid.getEditorLock().isActive()){\n      if (e.which == keyCode.ESCAPE){\n        if (_copiedRanges){\n          e.preventDefault();\n          clearCopySelection();\n          _self.onCopyCancelled.notify({ranges: _copiedRanges});\n          _copiedRanges = null;\n        }\n      }\n\n      if (e.which == 67 && (e.ctrlKey || e.metaKey)){\n        ranges = _grid.getSelectionModel().getSelectedRanges();\n        if (ranges.length != 0){\n          e.preventDefault();\n          _copiedRanges = ranges;\n          markCopySelection(ranges);\n          _self.onCopyCells.notify({ranges: ranges});\n        }\n      }\n\n      if (e.which == 86 && (e.ctrlKey || e.metaKey)){\n        if (_copiedRanges){\n          e.preventDefault();\n          clearCopySelection();\n          ranges = _grid.getSelectionModel().getSelectedRanges();\n          _self.onPasteCells.notify({from: _copiedRanges, to: ranges});\n          _copiedRanges = null;\n        }\n      }\n    }\n  }\n\n  function markCopySelection(ranges){\n    var columns = _grid.getColumns();\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++){\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++){\n        hash[j] = {};\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++){\n          hash[j][columns[k].id] = 'copied';\n        }\n      }\n    }\n    _grid.setCellCssStyles('copy-manager', hash);\n  }\n\n  function clearCopySelection(){\n    _grid.removeCellCssStyles('copy-manager');\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n    clearCopySelection,\n\n    onCopyCells: new Slick.Event(),\n    onCopyCancelled: new Slick.Event(),\n    onPasteCells: new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellcopymanager/slick.cellcopymanager.js","import CellRangeDecorator from './slick.cellrangedecorator';\nexport default CellRangeDecorator;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellrangedecorator/index.js","import CellRangeDecorator from './slick.cellrangeselector';\nexport default CellRangeDecorator;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellrangeselector/index.js","import CellSelectionModel from './slick.cellselectionmodel';\nexport default CellSelectionModel;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellselectionmodel/index.js","import Slick from '../../src/slick.core';\nimport CellRangeSelector from '../slick.cellrangeselector/slick.cellrangeselector';\n\nexport default CellSelectionModel;\n\nfunction CellSelectionModel(options = {\n  selectActiveCell: true\n}){\n  let _grid;\n  let _canvas;\n  let _ranges = [];\n  const _self = this;\n  const _selector = new CellRangeSelector({\n    selectionCss: {\n      border: '2px solid black'\n    }\n  });\n  let _options;\n  const _defaults = {\n    selectActiveCell: true\n  };\n\n  function init(grid){\n    _options = Object.assign({}, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _grid.onActiveCellChanged.subscribe(handleActiveCellChange);\n    _grid.onKeyDown.subscribe(handleKeyDown);\n    grid.registerPlugin(_selector);\n    _selector.onCellRangeSelected.subscribe(handleCellRangeSelected);\n    _selector.onBeforeCellRangeSelected.subscribe(handleBeforeCellRangeSelected);\n  }\n\n  function destroy(){\n    _grid.onActiveCellChanged.unsubscribe(handleActiveCellChange);\n    _grid.onKeyDown.unsubscribe(handleKeyDown);\n    _selector.onCellRangeSelected.unsubscribe(handleCellRangeSelected);\n    _selector.onBeforeCellRangeSelected.unsubscribe(handleBeforeCellRangeSelected);\n    _grid.unregisterPlugin(_selector);\n  }\n\n  function removeInvalidRanges(ranges){\n    const result = [];\n\n    for (let i = 0; i < ranges.length; i++){\n      const r = ranges[i];\n      if (_grid.canCellBeSelected(r.fromRow, r.fromCell) && _grid.canCellBeSelected(r.toRow, r.toCell)){\n        result.push(r);\n      }\n    }\n\n    return result;\n  }\n\n  function setSelectedRanges(ranges){\n    // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n    if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)){\n      return;\n    }\n\n    _ranges = removeInvalidRanges(ranges);\n    _self.onSelectedRangesChanged.notify(_ranges);\n  }\n\n  function getSelectedRanges(){\n    return _ranges;\n  }\n\n  function handleBeforeCellRangeSelected(e, args){\n    if (_grid.getEditorLock().isActive()){\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  function handleCellRangeSelected(e, args){\n    setSelectedRanges([args.range]);\n  }\n\n  function handleActiveCellChange(e, args){\n    if (_options.selectActiveCell && args.row != null && args.cell != null){\n      setSelectedRanges([new Slick.Range(args.row, args.cell)]);\n    }\n  }\n\n  function handleKeyDown(e){\n    /** *\n     * Кey codes\n     * 37 left\n     * 38 up\n     * 39 right\n     * 40 down\n     */\n    let ranges, last;\n    const active = _grid.getActiveCell();\n\n    if (active && e.shiftKey && !e.ctrlKey && !e.altKey &&\n      (e.which == 37 || e.which == 39 || e.which == 38 || e.which == 40)){\n      ranges = getSelectedRanges();\n      if (!ranges.length)\n        ranges.push(new Slick.Range(active.row, active.cell));\n\n      // keyboard can work with last range only\n      last = ranges.pop();\n\n      // can't handle selection out of active cell\n      if (!last.contains(active.row, active.cell))\n        last = new Slick.Range(active.row, active.cell);\n\n      let dRow = last.toRow - last.fromRow,\n        dCell = last.toCell - last.fromCell,\n        // walking direction\n        dirRow = active.row == last.fromRow ? 1 : -1,\n        dirCell = active.cell == last.fromCell ? 1 : -1;\n\n      if (e.which == 37){\n        dCell -= dirCell;\n      } else if (e.which == 39){\n        dCell += dirCell;\n      } else if (e.which == 38){\n        dRow -= dirRow;\n      } else if (e.which == 40){\n        dRow += dirRow;\n      }\n\n      // define new selection range\n      const new_last = new Slick.Range(active.row, active.cell, active.row + dirRow * dRow, active.cell + dirCell * dCell);\n      if (removeInvalidRanges([new_last]).length){\n        ranges.push(new_last);\n        const viewRow = dirRow > 0 ? new_last.toRow : new_last.fromRow;\n        const viewCell = dirCell > 0 ? new_last.toCell : new_last.fromCell;\n        _grid.scrollRowIntoView(viewRow);\n        _grid.scrollCellIntoView(viewRow, viewCell);\n      }\n      else\n        ranges.push(last);\n\n      setSelectedRanges(ranges);\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  Object.assign(this, {\n    getSelectedRanges,\n    setSelectedRanges,\n\n    init,\n    destroy,\n\n    onSelectedRangesChanged: new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellselectionmodel/slick.cellselectionmodel.js","import CheckboxSelectColumn from './slick.checkboxselectcolumn';\nexport default CheckboxSelectColumn;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.checkboxselectcolumn/index.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\nexport default CheckboxSelectColumn;\n\nfunction CheckboxSelectColumn(options){\n  let _grid;\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  let _selectedRowsLookup = {};\n  const _defaults = {\n    columnId: '_checkbox_selector',\n    cssClass: null,\n    toolTip: 'Select/Deselect All',\n    width: 30\n  };\n\n  const _options = $.extend(true, {}, _defaults, options);\n\n  function init(grid){\n    _grid = grid;\n    _handler\n      .subscribe(_grid.onSelectedRowsChanged, handleSelectedRowsChanged)\n      .subscribe(_grid.onClick, handleClick)\n      .subscribe(_grid.onHeaderClick, handleHeaderClick)\n      .subscribe(_grid.onKeyDown, handleKeyDown);\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function handleSelectedRowsChanged(e, args){\n    let selectedRows = _grid.getSelectedRows();\n    let lookup = {}, row, i;\n    for (i = 0; i < selectedRows.length; i++){\n      row = selectedRows[i];\n      lookup[row] = true;\n      if (lookup[row] !== _selectedRowsLookup[row]){\n        _grid.invalidateRow(row);\n        delete _selectedRowsLookup[row];\n      }\n    }\n    for (i in _selectedRowsLookup){\n      _grid.invalidateRow(i);\n    }\n    _selectedRowsLookup = lookup;\n    _grid.render();\n\n    if (selectedRows.length && selectedRows.length == _grid.getDataLength()){\n      _grid.updateColumnHeader(_options.columnId, \"<input type='checkbox' checked='checked'>\", _options.toolTip);\n    } else {\n      _grid.updateColumnHeader(_options.columnId, \"<input type='checkbox'>\", _options.toolTip);\n    }\n  }\n\n  function handleKeyDown(e, args){\n    if (e.which == 32){\n      if (_grid.getColumns()[args.cell].id === _options.columnId){\n        // if editing, try to commit\n        if (!_grid.getEditorLock().isActive() || _grid.getEditorLock().commitCurrentEdit()){\n          toggleRowSelection(args.row);\n        }\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function handleClick(e, args){\n    // clicking on a row select checkbox\n    if (_grid.getColumns()[args.cell].id === _options.columnId && $(e.target).is(':checkbox')){\n      // if editing, try to commit\n      if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()){\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      toggleRowSelection(args.row);\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function toggleRowSelection(row){\n    if (_selectedRowsLookup[row]){\n      _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function(n){\n        return n != row;\n      }));\n    } else {\n      _grid.setSelectedRows(_grid.getSelectedRows().concat(row));\n    }\n  }\n\n  function handleHeaderClick(e, args){\n    if (args.column.id == _options.columnId && $(e.target).is(':checkbox')){\n      // if editing, try to commit\n      if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()){\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      if ($(e.target).is(':checked')){\n        const rows = [];\n        for (let i = 0; i < _grid.getDataLength(); i++){\n          rows.push(i);\n        }\n        _grid.setSelectedRows(rows);\n      } else {\n        _grid.setSelectedRows([]);\n      }\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function getColumnDefinition(){\n    return {\n      id: _options.columnId,\n      name: \"<input type='checkbox'>\",\n      toolTip: _options.toolTip,\n      field: 'sel',\n      width: _options.width,\n      resizable: false,\n      sortable: false,\n      cssClass: _options.cssClass,\n      formatter: checkboxSelectionFormatter\n    };\n  }\n\n  function checkboxSelectionFormatter(row, cell, value, columnDef, dataContext){\n    if (dataContext){\n      return _selectedRowsLookup[row]\n        ? \"<input type='checkbox' checked='checked'>\"\n        : \"<input type='checkbox'>\";\n    }\n    return null;\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n\n    getColumnDefinition\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.checkboxselectcolumn/slick.checkboxselectcolumn.js","import HeaderButtons from './slick.headerbuttons';\nexport default HeaderButtons;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.headerbuttons/index.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\nexport default HeaderButtons;\n/** *\n * A plugin to add custom buttons to column headers.\n *\n * USAGE:\n *\n * Add the plugin .js & .css files and register it with the grid.\n *\n * To specify a custom button in a column header, extend the column definition like so:\n *\n *   var columns = [\n *     {\n *       id: 'myColumn',\n *       name: 'My column',\n *\n *       // This is the relevant part\n *       header: {\n *          buttons: [\n *              {\n *                // button options\n *              },\n *              {\n *                // button options\n *              }\n *          ]\n *       }\n *     }\n *   ];\n *\n * Available button options:\n *    cssClass:     CSS class to add to the button.\n *    image:        Relative button image path.\n *    tooltip:      Button tooltip.\n *    showOnHover:  Only show the button on hover.\n *    handler:      Button click handler.\n *    command:      A command identifier to be passed to the onCommand event handlers.\n *\n * The plugin exposes the following events:\n *    onCommand:    Fired on button click for buttons with 'command' specified.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            command:  Button command identified.\n *            button:   Button options.  Note that you can change the button options in your\n *                      event handler, and the column header will be automatically updated to\n *                      reflect them.  This is useful if you want to implement something like a\n *                      toggle button.\n *\n *\n * @param options {Object} Options:\n *    buttonCssClass:   a CSS class to use for buttons (default 'slick-header-button')\n * @class Slick.Plugins.HeaderButtons\n * @constructor\n */\nfunction HeaderButtons(options){\n  var _grid;\n  var _self = this;\n  var _handler = new Slick.EventHandler();\n  var _defaults = {\n    buttonCssClass: 'slick-header-button'\n  };\n\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler\n      .subscribe(_grid.onHeaderCellRendered, handleHeaderCellRendered)\n      .subscribe(_grid.onBeforeHeaderCellDestroy, handleBeforeHeaderCellDestroy);\n\n    // Force the grid to re-render the header now that the events are hooked up.\n    _grid.setColumns(_grid.getColumns());\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function handleHeaderCellRendered(e, args){\n    var column = args.column;\n\n    if (column.header && column.header.buttons){\n      // Append buttons in reverse order since they are floated to the right.\n      var i = column.header.buttons.length;\n      while (i--){\n        var button = column.header.buttons[i];\n        var btn = $('<div></div>')\n          .addClass(options.buttonCssClass)\n          .data('column', column)\n          .data('button', button);\n\n        if (button.showOnHover){\n          btn.addClass('slick-header-button-hidden');\n        }\n\n        if (button.image){\n          btn.css('backgroundImage', 'url(' + button.image + ')');\n        }\n\n        if (button.cssClass){\n          btn.addClass(button.cssClass);\n        }\n\n        if (button.tooltip){\n          btn.attr('title', button.tooltip);\n        }\n\n        if (button.command){\n          btn.data('command', button.command);\n        }\n\n        if (button.handler){\n          btn.bind('click', button.handler);\n        }\n\n        btn\n          .bind('click', handleButtonClick)\n          .appendTo(args.node);\n        args.node.classList.add('has-buttons');\n      }\n    }\n  }\n\n  function handleBeforeHeaderCellDestroy(e, args){\n    var column = args.column;\n\n    if (column.header && column.header.buttons){\n      // Removing buttons via jQuery will also clean up any event handlers and data.\n      // NOTE: If you attach event handlers directly or using a different framework,\n      //       you must also clean them up here to avoid memory leaks.\n      $(args.node).find(`.${options.buttonCssClass}`).remove();\n    }\n  }\n\n  function handleButtonClick(e){\n    var command = $(this).data('command');\n    var columnDef = $(this).data('column');\n    var button = $(this).data('button');\n\n    if (command != null){\n      _self.onCommand.notify({\n        'grid': _grid,\n        'column': columnDef,\n        'command': command,\n        'button': button\n      }, e, _self);\n\n      // Update the header in case the user updated the button definition in the handler.\n      _grid.updateColumnHeader(columnDef.id);\n    }\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n\n    'onCommand': new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.headerbuttons/slick.headerbuttons.js","import HeaderMenu from './slick.headermenu';\nexport default HeaderMenu;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.headermenu/index.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\n// import './slick.headermenu.css';\n\nexport default HeaderMenu;\n\n/** *\n * A plugin to add drop-down menus to column headers.\n *\n * USAGE:\n *\n * Add the plugin .js & .css files and register it with the grid.\n *\n * To specify a menu in a column header, extend the column definition like so:\n *\n *   const columns = [\n *     {\n *       id: 'myColumn',\n *       name: 'My column',\n *\n *       // This is the relevant part\n *       header: {\n *          menu: {\n *              items: [\n *                {\n *                  // menu item options\n *                },\n *                {\n *                  // menu item options\n *                }\n *              ]\n *          }\n *       }\n *     }\n *   ];\n *\n *\n * Available menu options:\n *    tooltip:      Menu button tooltip.\n *\n *\n * Available menu item options:\n *    title:        Menu item text.\n *    disabled:     Whether the item is disabled.\n *    tooltip:      Item tooltip.\n *    command:      A command identifier to be passed to the onCommand event handlers.\n *    iconCssClass: A CSS class to be added to the menu item icon.\n *    iconImage:    A url to the icon image.\n *\n *\n * The plugin exposes the following events:\n *    onBeforeMenuShow:   Fired before the menu is shown.  You can customize the menu or dismiss it by returning false.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            menu:     Menu options.  Note that you can change the menu items here.\n *\n *    onCommand:    Fired on menu item click for buttons with 'command' specified.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            command:  Button command identified.\n *            button:   Button options.  Note that you can change the button options in your\n *                      event handler, and the column header will be automatically updated to\n *                      reflect them.  This is useful if you want to implement something like a\n *                      toggle button.\n *\n *\n * @param options {Object} Options:\n *    buttonCssClass:   an extra CSS class to add to the menu button\n *    buttonImage:      a url to the menu button image (default '../images/down.gif')\n * @class Slick.Plugins.HeaderButtons\n * @constructor\n */\nfunction HeaderMenu(options){\n  let _grid;\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  const _defaults = {\n    buttonCssClass: null,\n    buttonImage: null\n  };\n\n  let $menu;\n  let $activeHeaderColumn;\n\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler\n      .subscribe(_grid.onHeaderCellRendered, handleHeaderCellRendered)\n      .subscribe(_grid.onBeforeHeaderCellDestroy, handleBeforeHeaderCellDestroy);\n\n    // Force the grid to re-render the header now that the events are hooked up.\n    _grid.setColumns(_grid.getColumns());\n\n    // Hide the menu on outside click.\n    $(document.body).bind('mousedown', handleBodyMouseDown);\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n    $(document.body).unbind('mousedown', handleBodyMouseDown);\n  }\n\n  function handleBodyMouseDown(e){\n    if ($menu && $menu[0] != e.target && !$.contains($menu[0], e.target)){\n      hideMenu();\n    }\n  }\n\n  function hideMenu(){\n    if ($menu){\n      $menu.remove();\n      $menu = null;\n      $activeHeaderColumn\n        .removeClass('slick-header-column-active');\n    }\n  }\n\n  function handleHeaderCellRendered(e, args){\n    const column = args.column;\n    const menu = column.header && column.header.menu;\n\n    if (menu){\n      const $el = $('<div></div>')\n        .addClass('slick-header-menubutton')\n        .data('column', column)\n        .data('menu', menu);\n\n      if (options.buttonCssClass){\n        $el.addClass(options.buttonCssClass);\n      }\n\n      if (options.buttonImage){\n        $el.css('background-image', 'url(' + options.buttonImage + ')');\n      }\n\n      if (menu.tooltip){\n        $el.attr('title', menu.tooltip);\n      }\n\n      $el\n        .bind('click', showMenu)\n        .appendTo(args.node);\n    }\n  }\n\n  function handleBeforeHeaderCellDestroy(e, args){\n    const column = args.column;\n\n    if (column.header && column.header.menu){\n      $(args.node).find('.slick-header-menubutton').remove();\n    }\n  }\n\n  function showMenu(e){\n    const $menuButton = $(this);\n    const menu = $menuButton.data('menu');\n    const columnDef = $menuButton.data('column');\n\n    // Let the user modify the menu or cancel altogether,\n    // or provide alternative menu implementation.\n    if (_self.onBeforeMenuShow.notify({\n      'grid': _grid,\n      'column': columnDef,\n      'menu': menu\n    }, e, _self) == false){\n      return;\n    }\n\n    if (!$menu){\n      $menu = $(\"<div class='slick-header-menu'></div>\")\n        .appendTo(_grid.getContainerNode());\n    }\n    $menu.empty();\n\n    // Construct the menu items.\n    for (let i = 0; i < menu.items.length; i++){\n      const item = menu.items[i];\n\n      const $li = $(\"<div class='slick-header-menuitem'></div>\")\n        .data('command', item.command || '')\n        .data('column', columnDef)\n        .data('item', item)\n        .bind('click', handleMenuItemClick)\n        .appendTo($menu);\n\n      if (item.disabled){\n        $li.addClass('slick-header-menuitem-disabled');\n      }\n\n      if (item.tooltip){\n        $li.attr('title', item.tooltip);\n      }\n\n      const $icon = $(\"<div class='slick-header-menuicon'></div>\")\n        .appendTo($li);\n\n      if (item.iconCssClass){\n        $icon.addClass(item.iconCssClass);\n      }\n\n      if (item.iconImage){\n        $icon.css('background-image', 'url(' + item.iconImage + ')');\n      }\n\n      $(\"<span class='slick-header-menucontent'></span>\")\n        .text(item.title)\n        .appendTo($li);\n    }\n\n    // Position the menu.\n    $menu\n      .offset({ top: $(this).offset().top + $(this).height(), left: $(this).offset().left });\n\n    // Mark the header as active to keep the highlighting.\n    $activeHeaderColumn = $menuButton.closest('.slick-header-column');\n    $activeHeaderColumn\n      .addClass('slick-header-column-active');\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleMenuItemClick(e){\n    const command = $(this).data('command');\n    const columnDef = $(this).data('column');\n    const item = $(this).data('item');\n\n    if (item.disabled){\n      return;\n    }\n\n    hideMenu();\n\n    if (command != null && command != ''){\n      _self.onCommand.notify({\n        'grid': _grid,\n        'column': columnDef,\n        'command': command,\n        'item': item\n      }, e, _self);\n    }\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n\n    'onBeforeMenuShow': new Slick.Event(),\n    'onCommand': new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.headermenu/slick.headermenu.js","import RowMoveManager from './slick.rowmovemanager';\nexport default RowMoveManager;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.rowmovemanager/index.js","import Slick from '../../src/slick.core';\n\nexport default RowMoveManager;\n\nfunction RowMoveManager(options){\n  let _grid;\n  let _canvas;\n  let _dragging;\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  const _defaults = {\n    cancelEditOnDrag: false\n  };\n\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _handler\n      .subscribe(_grid.onDragInit, handleDragInit)\n      .subscribe(_grid.onDragStart, handleDragStart)\n      .subscribe(_grid.onDrag, handleDrag)\n      .subscribe(_grid.onDragEnd, handleDragEnd);\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function handleDragInit(e, dd){\n    // prevent the grid from cancelling drag'n'drop by default\n    e.stopImmediatePropagation();\n  }\n\n  function handleDragStart(e, dd){\n    const cell = _grid.getCellFromEvent(e);\n\n    if (options.cancelEditOnDrag && _grid.getEditorLock().isActive()){\n      _grid.getEditorLock().cancelCurrentEdit();\n    }\n\n    if (_grid.getEditorLock().isActive() || !/move|selectAndMove/.test(_grid.getColumns()[cell.cell].behavior)){\n      return false;\n    }\n\n    _dragging = true;\n    e.stopImmediatePropagation();\n\n    let selectedRows = _grid.getSelectedRows();\n\n    if (selectedRows.length == 0 || $.inArray(cell.row, selectedRows) == -1){\n      selectedRows = [cell.row];\n      _grid.setSelectedRows(selectedRows);\n    }\n\n    const rowHeight = _grid.getOptions().rowHeight;\n\n    dd.selectedRows = selectedRows;\n\n    dd.selectionProxy = $(\"<div class='slick-reorder-proxy'/>\")\n      .css('position', 'absolute')\n      .css('zIndex', '99999')\n      .css('width', $(_canvas).innerWidth())\n      .css('height', rowHeight * selectedRows.length)\n      .appendTo(_canvas);\n\n    dd.guide = $(\"<div class='slick-reorder-guide'/>\")\n      .css('position', 'absolute')\n      .css('zIndex', '99998')\n      .css('width', $(_canvas).innerWidth())\n      .css('top', -1000)\n      .appendTo(_canvas);\n\n    dd.insertBefore = -1;\n  }\n\n  function handleDrag(e, dd){\n    if (!_dragging){\n      return;\n    }\n\n    e.stopImmediatePropagation();\n\n    const top = e.pageY - $(_canvas).offset().top;\n    dd.selectionProxy.css('top', top - 5);\n\n    const insertBefore = Math.max(0, Math.min(Math.round(top / _grid.getOptions().rowHeight), _grid.getDataLength()));\n    if (insertBefore !== dd.insertBefore){\n      const eventData = {\n        'rows': dd.selectedRows,\n        'insertBefore': insertBefore\n      };\n\n      if (_self.onBeforeMoveRows.notify(eventData) === false){\n        dd.guide.css('top', -1000);\n        dd.canMove = false;\n      } else {\n        dd.guide.css('top', insertBefore * _grid.getOptions().rowHeight);\n        dd.canMove = true;\n      }\n\n      dd.insertBefore = insertBefore;\n    }\n  }\n\n  function handleDragEnd(e, dd){\n    if (!_dragging){\n      return;\n    }\n    _dragging = false;\n    e.stopImmediatePropagation();\n\n    dd.guide.remove();\n    dd.selectionProxy.remove();\n\n    if (dd.canMove){\n      const eventData = {\n        'rows': dd.selectedRows,\n        'insertBefore': dd.insertBefore\n      };\n      // TODO:  _grid.remapCellCssClasses ?\n      _self.onMoveRows.notify(eventData);\n    }\n  }\n\n  Object.assign(this, {\n    'onBeforeMoveRows': new Slick.Event(),\n    'onMoveRows': new Slick.Event(),\n    init,\n    destroy\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.rowmovemanager/slick.rowmovemanager.js","import RowSelectionModel from './slick.rowselectionmodel';\nexport default RowSelectionModel;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.rowselectionmodel/index.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\nexport default RowSelectionModel;\n\nfunction RowSelectionModel(options){\n  let _grid;\n  let _ranges = [];\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  let _inHandler;\n  let _options;\n  const _defaults = {\n    selectActiveRow: true\n  };\n\n  function init(grid){\n    _options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler.subscribe(_grid.onActiveCellChanged,\n      wrapHandler(handleActiveCellChange));\n    _handler.subscribe(_grid.onKeyDown,\n      wrapHandler(handleKeyDown));\n    _handler.subscribe(_grid.onClick,\n      wrapHandler(handleClick));\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function wrapHandler(handler){\n    return function(){\n      if (!_inHandler){\n        _inHandler = true;\n        handler.apply(this, arguments);\n        _inHandler = false;\n      }\n    };\n  }\n\n  function rangesToRows(ranges){\n    const rows = [];\n    for (let i = 0; i < ranges.length; i++){\n      for (let j = ranges[i].fromRow; j <= ranges[i].toRow; j++){\n        rows.push(j);\n      }\n    }\n    return rows;\n  }\n\n  function rowsToRanges(rows){\n    const ranges = [];\n    const lastCell = _grid.getColumns().length - 1;\n    for (let i = 0; i < rows.length; i++){\n      ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getRowsRange(from, to){\n    let i;\n    const rows = [];\n    for (i = from; i <= to; i++){\n      rows.push(i);\n    }\n    for (i = to; i < from; i++){\n      rows.push(i);\n    }\n    return rows;\n  }\n\n  function getSelectedRows(){\n    return rangesToRows(_ranges);\n  }\n\n  function setSelectedRows(rows){\n    setSelectedRanges(rowsToRanges(rows));\n  }\n\n  function setSelectedRanges(ranges){\n    // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n    if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)){\n      return;\n    }\n    _ranges = ranges;\n    _self.onSelectedRangesChanged.notify(_ranges);\n  }\n\n  function getSelectedRanges(){\n    return _ranges;\n  }\n\n  function handleActiveCellChange(e, data){\n    if (_options.selectActiveRow && data.row != null){\n      setSelectedRanges([new Slick.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n    }\n  }\n\n  function handleKeyDown(e){\n    const activeRow = _grid.getActiveCell();\n    if (activeRow && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && (e.which == 38 || e.which == 40)){\n      let selectedRows = getSelectedRows();\n      selectedRows.sort(function(x, y){\n        return x - y;\n      });\n\n      if (!selectedRows.length){\n        selectedRows = [activeRow.row];\n      }\n\n      let top = selectedRows[0];\n      let bottom = selectedRows[selectedRows.length - 1];\n      let active;\n\n      if (e.which == 40){\n        active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n      } else {\n        active = activeRow.row < bottom ? --bottom : --top;\n      }\n\n      if (active >= 0 && active < _grid.getDataLength()){\n        _grid.scrollRowIntoView(active);\n        _ranges = rowsToRanges(getRowsRange(top, bottom));\n        setSelectedRanges(_ranges);\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  function handleClick(e){\n    const cell = _grid.getCellFromEvent(e);\n    if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)){\n      return false;\n    }\n\n    if (!_grid.getOptions().multiSelect || (\n      !e.ctrlKey && !e.shiftKey && !e.metaKey)){\n      return false;\n    }\n\n    let selection = rangesToRows(_ranges);\n    const idx = $.inArray(cell.row, selection);\n\n    if (idx === -1 && (e.ctrlKey || e.metaKey)){\n      selection.push(cell.row);\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (idx !== -1 && (e.ctrlKey || e.metaKey)){\n      selection = $.grep(selection, function(o, i){\n        return (o !== cell.row);\n      });\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (selection.length && e.shiftKey){\n      const last = selection.pop();\n      const from = Math.min(cell.row, last);\n      const to = Math.max(cell.row, last);\n      selection = [];\n      for (let i = from; i <= to; i++){\n        if (i !== last){\n          selection.push(i);\n        }\n      }\n      selection.push(last);\n      _grid.setActiveCell(cell.row, cell.cell);\n    }\n\n    _ranges = rowsToRanges(selection);\n    setSelectedRanges(_ranges);\n    e.stopImmediatePropagation();\n\n    return true;\n  }\n\n  Object.assign(this, {\n    getSelectedRows,\n    setSelectedRows,\n\n    getSelectedRanges,\n    setSelectedRanges,\n\n    init,\n    destroy,\n\n    'onSelectedRangesChanged': new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.rowselectionmodel/slick.rowselectionmodel.js"],"sourceRoot":""}